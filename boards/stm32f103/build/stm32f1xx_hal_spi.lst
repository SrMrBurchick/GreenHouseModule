ARM GAS  /tmp/cc4FiPZj.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SPI_AbortRx_ISR:
  23              	.LFB118:
  24              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @file    stm32f1xx_hal_spi.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
ARM GAS  /tmp/cc4FiPZj.s 			page 2


  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Callback registration:
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           and a pointer to the user callback function.
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           weak function.
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           and the Callback ID.
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           This function allows to reset following callbacks:
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
ARM GAS  /tmp/cc4FiPZj.s 			page 3


  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        or HAL_SPI_Init() function.
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        When the compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        not defined, the callback registering feature is not available
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @endverbatim
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   Additional table :
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        | Process | Transfer mode  |---------------------|----------------------|-------------------
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |===========================================================================================
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/8  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
ARM GAS  /tmp/cc4FiPZj.s 			page 4


 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        | Process | Transfer mode  |---------------------|----------------------|-------------------
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |===========================================================================================
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/4  |    NA     |    NA    |    NA     |   NA  
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/32  | Fpclk/
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/4  | Fpclk/4  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (8bits, 16bits),
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        @note
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @attention
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * All rights reserved.</center></h2>
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #include "stm32f1xx_hal.h"
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup STM32F1xx_HAL_Driver
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
ARM GAS  /tmp/cc4FiPZj.s 			page 5


 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI SPI
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief SPI HAL module driver
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U) && defined(SPI_CRC_ERROR_WORKAROUND_FEATURE)
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* CRC WORKAOUND FEATURE: Variable used to determine if device is impacted by implementation
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * of workaround related to wrong CRC errors detection on SPI2. Conditions in which this workaround
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * has to be applied, are:
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - STM32F101CDE/STM32F103CDE
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - Revision ID : Z
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - SPI2
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - In receive only mode, with CRC calculation enabled, at the end of the CRC reception,
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *     the software needs to check the CRCERR flag. If it is found set, read back the SPI_RXCRC:
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *       + If the value is 0, the complete data transfer is successful.
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *       + Otherwise, one or more errors have been detected during the data transfer by CPU or DMA.
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *    If CRCERR is found reset, the complete data transfer is considered successful.
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * Check RevisionID value for identifying if Device is Rev Z (0x0001) in order to enable workaround
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * CRC errors wrongly detected
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Pb is that ES_STM32F10xxCDE also identify an issue in Debug registers access while not in Debug 
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * Revision ID information is only available in Debug mode, so Workaround could not be implemented
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * to distinguish Rev Z devices (issue present) from more recent version (issue fixed).
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * So, in case of Revison Z F101 or F103 devices, below define should be assigned to 1.
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  */
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #define  USE_SPI_CRC_ERROR_WORKAROUND   0U
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cc4FiPZj.s 			page 6


 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the selected configuration:
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Mode
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Direction
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Data Size
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Clock Polarity and Phase
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) NSS Management
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) BaudRate Prescaler
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) FirstBit
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) TIMode
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Calculation
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
ARM GAS  /tmp/cc4FiPZj.s 			page 7


 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           of the selected SPIx peripheral.
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi == NULL)
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the parameters */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* TI mode is not supported on this device.
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      TIMode parameter is mandatory equal to SPI_TIMODE_DISABLE */
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.Mode == SPI_MODE_MASTER)
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Force polarity and phase to TI protocaol requirements */
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc4FiPZj.s 			page 8


 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the SPI Callback settings */
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.Direction & (SPI_CR1_RXONLY | SPI_CR1_BIDIMODE)) |
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.DataSize & SPI_CR1_DFF) |
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.CLKPolarity & SPI_CR1_CPOL) |
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.CLKPhase & SPI_CR1_CPHA) |
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.NSS & SPI_CR1_SSM) |
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 9


 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : NSS management */
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, ((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE));
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, (hspi->Init.CRCPolynomial & SPI_CRCPR_CRCPOLY_Msk));
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi == NULL)
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check SPI Instance parameter */
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc4FiPZj.s 			page 10


 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 11


 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (pCallback == NULL)
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
ARM GAS  /tmp/cc4FiPZj.s 			page 12


 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Return error status */
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     status =  HAL_ERROR;
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return status;
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
ARM GAS  /tmp/cc4FiPZj.s 			page 13


 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
ARM GAS  /tmp/cc4FiPZj.s 			page 14


 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Return error status */
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     status =  HAL_ERROR;
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return status;
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *  @brief   Data transfers functions
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### IO operation functions #####
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  [..]
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     data transfers.
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) There are two modes of transfer:
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             after finishing transfer.
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The end of the data processing will be indicated through the
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             using DMA mode.
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
ARM GAS  /tmp/cc4FiPZj.s 			page 15


 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
ARM GAS  /tmp/cc4FiPZj.s 			page 16


 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc4FiPZj.s 			page 17


 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error:
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
ARM GAS  /tmp/cc4FiPZj.s 			page 18


 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be received
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 19


1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount--;
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* read the received data */
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
ARM GAS  /tmp/cc4FiPZj.s 			page 20


1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Handle the CRC Transmission */
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRCNEXT is well reseted by hardware */
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by h
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read the latest data */
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* the latest data has not been received */
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait the CRC data */
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 21


1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                           uint32_t Timeout)
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
ARM GAS  /tmp/cc4FiPZj.s 			page 22


1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tickstart;
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
ARM GAS  /tmp/cc4FiPZj.s 			page 23


1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check TXE flag */
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check RXNE flag */
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
ARM GAS  /tmp/cc4FiPZj.s 			page 24


1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check TXE flag */
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait until TXE flag */
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Error on the CRC reception */
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       goto error;
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC */
ARM GAS  /tmp/cc4FiPZj.s 			page 25


1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
ARM GAS  /tmp/cc4FiPZj.s 			page 26


1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
ARM GAS  /tmp/cc4FiPZj.s 			page 27


1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
ARM GAS  /tmp/cc4FiPZj.s 			page 28


1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             process unlock */
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
ARM GAS  /tmp/cc4FiPZj.s 			page 29


1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc4FiPZj.s 			page 30


1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check tx dma handle */
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc4FiPZj.s 			page 31


1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
ARM GAS  /tmp/cc4FiPZj.s 			page 32


1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check rx dma handle */
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check tx dma handle */
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
ARM GAS  /tmp/cc4FiPZj.s 			page 33


1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
ARM GAS  /tmp/cc4FiPZj.s 			page 34


1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error:
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                               uint16_t Size)
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check rx & tx dma handles */
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
ARM GAS  /tmp/cc4FiPZj.s 			page 35


1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
ARM GAS  /tmp/cc4FiPZj.s 			page 36


1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   is performed in DMA reception complete callback  */
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** error :
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
ARM GAS  /tmp/cc4FiPZj.s 			page 37


2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t resetcount;
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialized local variable  */
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   errorcode = HAL_OK;
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
ARM GAS  /tmp/cc4FiPZj.s 			page 38


2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Tx DMA Request */
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set */
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       do
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (count == 0U)
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           break;
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         count--;
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable peripheral */
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Rx DMA Request */
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check error during Abort procedure */
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc4FiPZj.s 			page 39


2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->state to ready */
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t abortcplt ;
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t resetcount;
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialized local variable  */
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   errorcode = HAL_OK;
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   abortcplt = 1U;
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
ARM GAS  /tmp/cc4FiPZj.s 			page 40


2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      before any call to DMA Abort functions */
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc4FiPZj.s 			page 41


2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (abortcplt == 1U)
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check error during Abort procedure */
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset errorCode */
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
ARM GAS  /tmp/cc4FiPZj.s 			page 42


2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
ARM GAS  /tmp/cc4FiPZj.s 			page 43


2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      */
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR(hspi);
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
ARM GAS  /tmp/cc4FiPZj.s 			page 44


2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR(hspi);
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return;
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable all interrupts */
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
ARM GAS  /tmp/cc4FiPZj.s 			page 45


2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user error callback */
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
ARM GAS  /tmp/cc4FiPZj.s 			page 46


2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
ARM GAS  /tmp/cc4FiPZj.s 			page 47


2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  SPI error callback.
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI control functions
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
2651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
2655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
ARM GAS  /tmp/cc4FiPZj.s 			page 48


2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI state
2667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI handle state */
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->State;
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI error code.
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI ErrorCode */
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->ErrorCode;
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   Private functions
2696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
ARM GAS  /tmp/cc4FiPZj.s 			page 49


2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Tx DMA Request */
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
2730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Tx complete callback */
2749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
ARM GAS  /tmp/cc4FiPZj.s 			page 50


2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag */
2781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Error on the CRC reception */
2784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC */
2787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if we are in Master RX 2 line mode */
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
2793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines)
2795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Normal case */
2800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
2807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
2823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
ARM GAS  /tmp/cc4FiPZj.s 			page 51


2828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Rx complete callback */
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
2845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
2847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait the CRC data */
2875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC to Flush DR and RXNE flag */
2880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
ARM GAS  /tmp/cc4FiPZj.s 			page 52


2885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
2908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
2925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user TxRx complete callback */
2928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
2930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
2932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/cc4FiPZj.s 			page 53


2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Tx half complete callback */
2946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
2948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
2950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Rx half complete callback */
2964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
2966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
2968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
2973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user TxRx half complete callback */
2982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
2984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
2986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
2988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
2991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 54


2999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
3003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
3005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
3025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
3044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Tx DMA Request */
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
3055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/cc4FiPZj.s 			page 55


3056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
3089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 56


3113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Rx DMA Request */
3114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Busy flag */
3117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8bit mode */
3165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
3168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check end of the reception */
ARM GAS  /tmp/cc4FiPZj.s 			page 57


3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRxTx_ISR(hspi);
3208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
3223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transmission */
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc4FiPZj.s 			page 58


3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable TXE interrupt */
3233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
3239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
3260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE interrupt */
3272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
ARM GAS  /tmp/cc4FiPZj.s 			page 59


3284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE interrupt */
3294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
3312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable TXE interrupt */
3322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
3328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/cc4FiPZj.s 			page 60


3341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
3364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRCNEXT is well reseted by hardware */
3372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
3373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by har
3375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/cc4FiPZj.s 			page 61


3398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
3423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRCNEXT is well reseted by hardware */
3431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
3432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by har
3434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/cc4FiPZj.s 			page 62


3455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
3463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
3470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
3489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
3496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *              the configuration information for SPI module.
3507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Flag SPI flag to check
3508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  State flag state to check
3509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
ARM GAS  /tmp/cc4FiPZj.s 			page 63


3512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
3517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp_timeout;
3518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp_tickstart;
3519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Adjust Timeout value  in case of end of transfer */
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
3522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_tickstart = HAL_GetTick();
3523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
3525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
3526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
3528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
3530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
3532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****            and slave for their respective CRC calculation */
3536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
3539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
3543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Disable SPI peripheral */
3544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
3546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
3548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
3550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
3552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Process Unlocked */
3556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
3557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return HAL_TIMEOUT;
3559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop proced
3561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if(count == 0U)
3562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         tmp_timeout = 0U;
3564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
3566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 64


3569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
3570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI peripheral */
3586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)
3590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait the RXNE reset */
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
3596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Control the BSY flag */
3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
3605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
3608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle
3613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Control the BSY flag */
3620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_TIMEOUT;
3624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
ARM GAS  /tmp/cc4FiPZj.s 			page 65


3626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
3637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management */
3640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable ERR interrupt */
3643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
3649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
3654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
3673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
3679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
3680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
ARM GAS  /tmp/cc4FiPZj.s 			page 66


3683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
3699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user Rx complete callback */
3702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
3704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
3706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
3709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user TxRx complete callback */
3712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
3714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
ARM GAS  /tmp/cc4FiPZj.s 			page 67


3740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
3760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
3763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
3768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
3769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user Rx complete callback */
3788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
3792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
ARM GAS  /tmp/cc4FiPZj.s 			page 68


3797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
3817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
3826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
3831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
3835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call user error callback */
3852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
ARM GAS  /tmp/cc4FiPZj.s 			page 69


3854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call user Rx complete callback */
3861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
3863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
  25              		.loc 1 3876 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
3877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
  34              		.loc 1 3877 0
  35 0002 154B     		ldr	r3, .L7
  36 0004 1B68     		ldr	r3, [r3]
  37 0006 154A     		ldr	r2, .L7+4
  38 0008 A2FB0323 		umull	r2, r3, r2, r3
  39 000c 5B0A     		lsrs	r3, r3, #9
  40 000e 6422     		movs	r2, #100
  41 0010 02FB03F3 		mul	r3, r2, r3
  42 0014 0193     		str	r3, [sp, #4]
  43              	.L4:
3878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
  44              		.loc 1 3882 0
  45 0016 019B     		ldr	r3, [sp, #4]
  46 0018 43B1     		cbz	r3, .L6
3883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
3886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
  47              		.loc 1 3887 0
ARM GAS  /tmp/cc4FiPZj.s 			page 70


  48 001a 019B     		ldr	r3, [sp, #4]
  49 001c 013B     		subs	r3, r3, #1
  50 001e 0193     		str	r3, [sp, #4]
3888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
  51              		.loc 1 3888 0
  52 0020 0368     		ldr	r3, [r0]
  53 0022 9B68     		ldr	r3, [r3, #8]
  54 0024 13F0020F 		tst	r3, #2
  55 0028 F5D0     		beq	.L4
  56 002a 03E0     		b	.L3
  57              	.L6:
3884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
  58              		.loc 1 3884 0
  59 002c 436D     		ldr	r3, [r0, #84]
  60 002e 43F04003 		orr	r3, r3, #64
  61 0032 4365     		str	r3, [r0, #84]
  62              	.L3:
3889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  63              		.loc 1 3891 0
  64 0034 0268     		ldr	r2, [r0]
  65 0036 1368     		ldr	r3, [r2]
  66 0038 23F04003 		bic	r3, r3, #64
  67 003c 1360     		str	r3, [r2]
3892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
  68              		.loc 1 3894 0
  69 003e 0268     		ldr	r2, [r0]
  70 0040 5368     		ldr	r3, [r2, #4]
  71 0042 23F0E003 		bic	r3, r3, #224
  72 0046 5360     		str	r3, [r2, #4]
3895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read CRC to flush Data Register */
3897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
  73              		.loc 1 3897 0
  74 0048 0368     		ldr	r3, [r0]
  75 004a DB68     		ldr	r3, [r3, #12]
3898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
  76              		.loc 1 3899 0
  77 004c 0723     		movs	r3, #7
  78 004e 80F85130 		strb	r3, [r0, #81]
3900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
  79              		.loc 1 3900 0
  80 0052 02B0     		add	sp, sp, #8
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 0
  83              		@ sp needed
  84 0054 7047     		bx	lr
  85              	.L8:
  86 0056 00BF     		.align	2
  87              	.L7:
  88 0058 00000000 		.word	SystemCoreClock
  89 005c F1197605 		.word	91625969
  90              		.cfi_endproc
ARM GAS  /tmp/cc4FiPZj.s 			page 71


  91              	.LFE118:
  93              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
  94              		.align	1
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu softvfp
 100              	SPI_AbortTx_ISR:
 101              	.LFB119:
3901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 102              		.loc 1 3909 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.LVL1:
3910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE interrupt */
3911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 108              		.loc 1 3911 0
 109 0000 0268     		ldr	r2, [r0]
 110 0002 5368     		ldr	r3, [r2, #4]
 111 0004 23F08003 		bic	r3, r3, #128
 112 0008 5360     		str	r3, [r2, #4]
3912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 113              		.loc 1 3914 0
 114 000a 0268     		ldr	r2, [r0]
 115 000c 1368     		ldr	r3, [r2]
 116 000e 23F04003 		bic	r3, r3, #64
 117 0012 1360     		str	r3, [r2]
3915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 118              		.loc 1 3916 0
 119 0014 0723     		movs	r3, #7
 120 0016 80F85130 		strb	r3, [r0, #81]
 121 001a 7047     		bx	lr
 122              		.cfi_endproc
 123              	.LFE119:
 125              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 126              		.align	1
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu softvfp
 132              	SPI_WaitFlagStateUntilTimeout:
 133              	.LFB112:
3515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
 134              		.loc 1 3515 0
ARM GAS  /tmp/cc4FiPZj.s 			page 72


 135              		.cfi_startproc
 136              		@ args = 4, pretend = 0, frame = 8
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL2:
 139 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 28
 142              		.cfi_offset 4, -28
 143              		.cfi_offset 5, -24
 144              		.cfi_offset 6, -20
 145              		.cfi_offset 7, -16
 146              		.cfi_offset 8, -12
 147              		.cfi_offset 9, -8
 148              		.cfi_offset 14, -4
 149 0004 83B0     		sub	sp, sp, #12
 150              	.LCFI3:
 151              		.cfi_def_cfa_offset 40
 152 0006 0446     		mov	r4, r0
 153 0008 0F46     		mov	r7, r1
 154 000a 1646     		mov	r6, r2
 155 000c 1D46     		mov	r5, r3
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_tickstart = HAL_GetTick();
 156              		.loc 1 3521 0
 157 000e FFF7FEFF 		bl	HAL_GetTick
 158              	.LVL3:
 159 0012 0A9B     		ldr	r3, [sp, #40]
 160 0014 181A     		subs	r0, r3, r0
 161 0016 00EB0508 		add	r8, r0, r5
 162              	.LVL4:
3522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 163              		.loc 1 3522 0
 164 001a FFF7FEFF 		bl	HAL_GetTick
 165              	.LVL5:
 166 001e 8146     		mov	r9, r0
 167              	.LVL6:
3525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 168              		.loc 1 3525 0
 169 0020 2A4B     		ldr	r3, .L26
 170 0022 1B68     		ldr	r3, [r3]
 171 0024 C3F3CB33 		ubfx	r3, r3, #15, #12
 172 0028 03FB08F3 		mul	r3, r3, r8
 173 002c 0193     		str	r3, [sp, #4]
 174              	.LVL7:
 175              	.L12:
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 176              		.loc 1 3527 0
 177 002e 2368     		ldr	r3, [r4]
 178 0030 9B68     		ldr	r3, [r3, #8]
 179 0032 37EA0303 		bics	r3, r7, r3
 180 0036 0CBF     		ite	eq
 181 0038 0123     		moveq	r3, #1
 182 003a 0023     		movne	r3, #0
 183 003c B342     		cmp	r3, r6
 184 003e 40D0     		beq	.L23
3529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 185              		.loc 1 3529 0
 186 0040 B5F1FF3F 		cmp	r5, #-1
ARM GAS  /tmp/cc4FiPZj.s 			page 73


 187 0044 F3D0     		beq	.L12
3531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 188              		.loc 1 3531 0
 189 0046 FFF7FEFF 		bl	HAL_GetTick
 190              	.LVL8:
 191 004a A0EB0900 		sub	r0, r0, r9
 192 004e 8045     		cmp	r8, r0
 193 0050 0AD9     		bls	.L13
3531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 194              		.loc 1 3531 0 is_stmt 0 discriminator 1
 195 0052 B8F1000F 		cmp	r8, #0
 196 0056 07D0     		beq	.L13
3561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 197              		.loc 1 3561 0 is_stmt 1
 198 0058 019B     		ldr	r3, [sp, #4]
 199 005a 0BB9     		cbnz	r3, .L19
3563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 200              		.loc 1 3563 0
 201 005c 4FF00008 		mov	r8, #0
 202              	.LVL9:
 203              	.L19:
3565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 204              		.loc 1 3565 0
 205 0060 019B     		ldr	r3, [sp, #4]
 206 0062 013B     		subs	r3, r3, #1
 207 0064 0193     		str	r3, [sp, #4]
 208 0066 E2E7     		b	.L12
 209              	.L13:
3538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 210              		.loc 1 3538 0
 211 0068 2268     		ldr	r2, [r4]
 212 006a 5368     		ldr	r3, [r2, #4]
 213 006c 23F0E003 		bic	r3, r3, #224
 214 0070 5360     		str	r3, [r2, #4]
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 215              		.loc 1 3540 0
 216 0072 6368     		ldr	r3, [r4, #4]
 217 0074 B3F5827F 		cmp	r3, #260
 218 0078 0BD0     		beq	.L24
 219              	.L15:
3548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 220              		.loc 1 3548 0
 221 007a A36A     		ldr	r3, [r4, #40]
 222 007c B3F5005F 		cmp	r3, #8192
 223 0080 14D0     		beq	.L25
 224              	.L17:
3553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 225              		.loc 1 3553 0
 226 0082 0123     		movs	r3, #1
 227 0084 84F85130 		strb	r3, [r4, #81]
3556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 228              		.loc 1 3556 0
 229 0088 0023     		movs	r3, #0
 230 008a 84F85030 		strb	r3, [r4, #80]
3558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 231              		.loc 1 3558 0
 232 008e 0320     		movs	r0, #3
ARM GAS  /tmp/cc4FiPZj.s 			page 74


 233 0090 18E0     		b	.L18
 234              	.L24:
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 235              		.loc 1 3540 0 discriminator 1
 236 0092 A368     		ldr	r3, [r4, #8]
 237 0094 B3F5004F 		cmp	r3, #32768
 238 0098 02D0     		beq	.L16
3541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 239              		.loc 1 3541 0
 240 009a B3F5806F 		cmp	r3, #1024
 241 009e ECD1     		bne	.L15
 242              	.L16:
3544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 243              		.loc 1 3544 0
 244 00a0 2268     		ldr	r2, [r4]
 245 00a2 1368     		ldr	r3, [r2]
 246 00a4 23F04003 		bic	r3, r3, #64
 247 00a8 1360     		str	r3, [r2]
 248 00aa E6E7     		b	.L15
 249              	.L25:
3550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 250              		.loc 1 3550 0
 251 00ac 2268     		ldr	r2, [r4]
 252 00ae 1368     		ldr	r3, [r2]
 253 00b0 23F40053 		bic	r3, r3, #8192
 254 00b4 1360     		str	r3, [r2]
 255 00b6 2268     		ldr	r2, [r4]
 256 00b8 1368     		ldr	r3, [r2]
 257 00ba 43F40053 		orr	r3, r3, #8192
 258 00be 1360     		str	r3, [r2]
 259 00c0 DFE7     		b	.L17
 260              	.L23:
3569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 261              		.loc 1 3569 0
 262 00c2 0020     		movs	r0, #0
 263              	.L18:
3570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 264              		.loc 1 3570 0
 265 00c4 03B0     		add	sp, sp, #12
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 28
 268              		@ sp needed
 269 00c6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 270              	.LVL10:
 271              	.L27:
 272 00ca 00BF     		.align	2
 273              	.L26:
 274 00cc 00000000 		.word	SystemCoreClock
 275              		.cfi_endproc
 276              	.LFE112:
 278              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 279              		.align	1
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu softvfp
 285              	SPI_EndRxTxTransaction:
ARM GAS  /tmp/cc4FiPZj.s 			page 75


 286              	.LFB114:
3618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Control the BSY flag */
 287              		.loc 1 3618 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL11:
 292 0000 10B5     		push	{r4, lr}
 293              	.LCFI5:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 4, -8
 296              		.cfi_offset 14, -4
 297 0002 82B0     		sub	sp, sp, #8
 298              	.LCFI6:
 299              		.cfi_def_cfa_offset 16
 300 0004 0446     		mov	r4, r0
3620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 301              		.loc 1 3620 0
 302 0006 0092     		str	r2, [sp]
 303 0008 0B46     		mov	r3, r1
 304 000a 0022     		movs	r2, #0
 305              	.LVL12:
 306 000c 8021     		movs	r1, #128
 307              	.LVL13:
 308 000e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 309              	.LVL14:
 310 0012 0346     		mov	r3, r0
 311 0014 20B1     		cbz	r0, .L29
3622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_TIMEOUT;
 312              		.loc 1 3622 0
 313 0016 636D     		ldr	r3, [r4, #84]
 314 0018 43F02003 		orr	r3, r3, #32
 315 001c 6365     		str	r3, [r4, #84]
3623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 316              		.loc 1 3623 0
 317 001e 0323     		movs	r3, #3
 318              	.L29:
3626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 319              		.loc 1 3626 0
 320 0020 1846     		mov	r0, r3
 321 0022 02B0     		add	sp, sp, #8
 322              	.LCFI7:
 323              		.cfi_def_cfa_offset 8
 324              		@ sp needed
 325 0024 10BD     		pop	{r4, pc}
 326              		.cfi_endproc
 327              	.LFE114:
 329              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 330              		.align	1
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu softvfp
 336              	SPI_EndRxTransaction:
 337              	.LFB113:
3581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 338              		.loc 1 3581 0
ARM GAS  /tmp/cc4FiPZj.s 			page 76


 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              	.LVL15:
 343 0000 10B5     		push	{r4, lr}
 344              	.LCFI8:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 4, -8
 347              		.cfi_offset 14, -4
 348 0002 82B0     		sub	sp, sp, #8
 349              	.LCFI9:
 350              		.cfi_def_cfa_offset 16
 351 0004 0446     		mov	r4, r0
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 352              		.loc 1 3582 0
 353 0006 4068     		ldr	r0, [r0, #4]
 354              	.LVL16:
 355 0008 B0F5827F 		cmp	r0, #260
 356 000c 14D0     		beq	.L37
 357              	.L32:
3589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 358              		.loc 1 3589 0
 359 000e 6068     		ldr	r0, [r4, #4]
 360 0010 B0F5827F 		cmp	r0, #260
 361 0014 1DD0     		beq	.L38
 362              	.L34:
3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 363              		.loc 1 3601 0
 364 0016 0092     		str	r2, [sp]
 365 0018 0B46     		mov	r3, r1
 366 001a 0022     		movs	r2, #0
 367              	.LVL17:
 368 001c 8021     		movs	r1, #128
 369              	.LVL18:
 370 001e 2046     		mov	r0, r4
 371 0020 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 372              	.LVL19:
 373 0024 0346     		mov	r3, r0
 374 0026 20B1     		cbz	r0, .L35
3603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
 375              		.loc 1 3603 0
 376 0028 636D     		ldr	r3, [r4, #84]
 377 002a 43F02003 		orr	r3, r3, #32
 378 002e 6365     		str	r3, [r4, #84]
3604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 379              		.loc 1 3604 0
 380 0030 0323     		movs	r3, #3
 381              	.L35:
3608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 382              		.loc 1 3608 0
 383 0032 1846     		mov	r0, r3
 384 0034 02B0     		add	sp, sp, #8
 385              	.LCFI10:
 386              		.cfi_remember_state
 387              		.cfi_def_cfa_offset 8
 388              		@ sp needed
 389 0036 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc4FiPZj.s 			page 77


 390              	.LVL20:
 391              	.L37:
 392              	.LCFI11:
 393              		.cfi_restore_state
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 394              		.loc 1 3582 0 discriminator 1
 395 0038 A368     		ldr	r3, [r4, #8]
 396 003a B3F5004F 		cmp	r3, #32768
 397 003e 02D0     		beq	.L33
3583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 398              		.loc 1 3583 0
 399 0040 B3F5806F 		cmp	r3, #1024
 400 0044 E3D1     		bne	.L32
 401              	.L33:
3586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 402              		.loc 1 3586 0
 403 0046 2068     		ldr	r0, [r4]
 404 0048 0368     		ldr	r3, [r0]
 405 004a 23F04003 		bic	r3, r3, #64
 406 004e 0360     		str	r3, [r0]
 407 0050 DDE7     		b	.L32
 408              	.L38:
3589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 409              		.loc 1 3589 0 discriminator 1
 410 0052 A368     		ldr	r3, [r4, #8]
 411 0054 B3F5806F 		cmp	r3, #1024
 412 0058 DDD1     		bne	.L34
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 413              		.loc 1 3592 0
 414 005a 0092     		str	r2, [sp]
 415 005c 0B46     		mov	r3, r1
 416 005e 0022     		movs	r2, #0
 417              	.LVL21:
 418 0060 0121     		movs	r1, #1
 419              	.LVL22:
 420 0062 2046     		mov	r0, r4
 421 0064 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 422              	.LVL23:
 423 0068 0346     		mov	r3, r0
 424 006a 0028     		cmp	r0, #0
 425 006c E1D0     		beq	.L35
3594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
 426              		.loc 1 3594 0
 427 006e 636D     		ldr	r3, [r4, #84]
 428 0070 43F02003 		orr	r3, r3, #32
 429 0074 6365     		str	r3, [r4, #84]
3595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 430              		.loc 1 3595 0
 431 0076 0323     		movs	r3, #3
 432 0078 DBE7     		b	.L35
 433              		.cfi_endproc
 434              	.LFE113:
 436              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 437              		.align	1
 438              		.weak	HAL_SPI_MspInit
 439              		.syntax unified
 440              		.thumb
ARM GAS  /tmp/cc4FiPZj.s 			page 78


 441              		.thumb_func
 442              		.fpu softvfp
 444              	HAL_SPI_MspInit:
 445              	.LFB67:
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 446              		.loc 1 508 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL24:
 452 0000 7047     		bx	lr
 453              		.cfi_endproc
 454              	.LFE67:
 456              		.section	.text.HAL_SPI_Init,"ax",%progbits
 457              		.align	1
 458              		.global	HAL_SPI_Init
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu softvfp
 464              	HAL_SPI_Init:
 465              	.LFB65:
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 466              		.loc 1 336 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              	.LVL25:
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 471              		.loc 1 338 0
 472 0000 0028     		cmp	r0, #0
 473 0002 56D0     		beq	.L45
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 474              		.loc 1 336 0
 475 0004 10B5     		push	{r4, lr}
 476              	.LCFI12:
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 4, -8
 479              		.cfi_offset 14, -4
 480 0006 0446     		mov	r4, r0
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 481              		.loc 1 354 0
 482 0008 436A     		ldr	r3, [r0, #36]
 483 000a 33B9     		cbnz	r3, .L42
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 484              		.loc 1 359 0
 485 000c 4368     		ldr	r3, [r0, #4]
 486 000e B3F5827F 		cmp	r3, #260
 487 0012 05D0     		beq	.L43
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 488              		.loc 1 366 0
 489 0014 0023     		movs	r3, #0
 490 0016 C361     		str	r3, [r0, #28]
 491 0018 02E0     		b	.L43
 492              	.L42:
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
ARM GAS  /tmp/cc4FiPZj.s 			page 79


 493              		.loc 1 374 0
 494 001a 0023     		movs	r3, #0
 495 001c 0361     		str	r3, [r0, #16]
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 496              		.loc 1 375 0
 497 001e 4361     		str	r3, [r0, #20]
 498              	.L43:
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 499              		.loc 1 384 0
 500 0020 0023     		movs	r3, #0
 501 0022 A362     		str	r3, [r4, #40]
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 502              		.loc 1 387 0
 503 0024 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 504 0028 002B     		cmp	r3, #0
 505 002a 3CD0     		beq	.L50
 506              	.LVL26:
 507              	.L44:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 508              		.loc 1 416 0
 509 002c 0223     		movs	r3, #2
 510 002e 84F85130 		strb	r3, [r4, #81]
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 511              		.loc 1 419 0
 512 0032 2268     		ldr	r2, [r4]
 513 0034 1368     		ldr	r3, [r2]
 514 0036 23F04003 		bic	r3, r3, #64
 515 003a 1360     		str	r3, [r2]
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.Direction & (SPI_CR1_RXONLY | SPI_CR1_BIDIMODE)) |
 516              		.loc 1 424 0
 517 003c 2268     		ldr	r2, [r4]
 518 003e 6368     		ldr	r3, [r4, #4]
 519 0040 03F48273 		and	r3, r3, #260
 520 0044 A168     		ldr	r1, [r4, #8]
 521 0046 01F40441 		and	r1, r1, #33792
 522 004a 0B43     		orrs	r3, r3, r1
 523 004c E168     		ldr	r1, [r4, #12]
 524 004e 01F40061 		and	r1, r1, #2048
 525 0052 0B43     		orrs	r3, r3, r1
 526 0054 2169     		ldr	r1, [r4, #16]
 527 0056 01F00201 		and	r1, r1, #2
 528 005a 0B43     		orrs	r3, r3, r1
 529 005c 6169     		ldr	r1, [r4, #20]
 530 005e 01F00101 		and	r1, r1, #1
 531 0062 0B43     		orrs	r3, r3, r1
 532 0064 A169     		ldr	r1, [r4, #24]
 533 0066 01F40071 		and	r1, r1, #512
 534 006a 0B43     		orrs	r3, r3, r1
 535 006c E169     		ldr	r1, [r4, #28]
 536 006e 01F03801 		and	r1, r1, #56
 537 0072 0B43     		orrs	r3, r3, r1
 538 0074 216A     		ldr	r1, [r4, #32]
 539 0076 01F08001 		and	r1, r1, #128
 540 007a 0B43     		orrs	r3, r3, r1
 541 007c A16A     		ldr	r1, [r4, #40]
 542 007e 01F40051 		and	r1, r1, #8192
 543 0082 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/cc4FiPZj.s 			page 80


 544 0084 1360     		str	r3, [r2]
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 545              		.loc 1 435 0
 546 0086 2268     		ldr	r2, [r4]
 547 0088 638B     		ldrh	r3, [r4, #26]
 548 008a 03F00403 		and	r3, r3, #4
 549 008e 5360     		str	r3, [r2, #4]
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 550              		.loc 1 448 0
 551 0090 2268     		ldr	r2, [r4]
 552 0092 D369     		ldr	r3, [r2, #28]
 553 0094 23F40063 		bic	r3, r3, #2048
 554 0098 D361     		str	r3, [r2, #28]
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 555              		.loc 1 451 0
 556 009a 0020     		movs	r0, #0
 557 009c 6065     		str	r0, [r4, #84]
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 558              		.loc 1 452 0
 559 009e 0123     		movs	r3, #1
 560 00a0 84F85130 		strb	r3, [r4, #81]
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 561              		.loc 1 454 0
 562 00a4 10BD     		pop	{r4, pc}
 563              	.LVL27:
 564              	.L50:
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 565              		.loc 1 390 0
 566 00a6 84F85030 		strb	r3, [r4, #80]
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 567              		.loc 1 412 0
 568 00aa 2046     		mov	r0, r4
 569              	.LVL28:
 570 00ac FFF7FEFF 		bl	HAL_SPI_MspInit
 571              	.LVL29:
 572 00b0 BCE7     		b	.L44
 573              	.LVL30:
 574              	.L45:
 575              	.LCFI13:
 576              		.cfi_def_cfa_offset 0
 577              		.cfi_restore 4
 578              		.cfi_restore 14
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 579              		.loc 1 340 0
 580 00b2 0120     		movs	r0, #1
 581              	.LVL31:
 582 00b4 7047     		bx	lr
 583              		.cfi_endproc
 584              	.LFE65:
 586              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 587              		.align	1
 588              		.weak	HAL_SPI_MspDeInit
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu softvfp
 594              	HAL_SPI_MspDeInit:
ARM GAS  /tmp/cc4FiPZj.s 			page 81


 595              	.LFB68:
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 596              		.loc 1 524 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL32:
 602 0000 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE68:
 606              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 607              		.align	1
 608              		.global	HAL_SPI_DeInit
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu softvfp
 614              	HAL_SPI_DeInit:
 615              	.LFB66:
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 616              		.loc 1 464 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              	.LVL33:
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 621              		.loc 1 466 0
 622 0000 90B1     		cbz	r0, .L54
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 623              		.loc 1 464 0
 624 0002 10B5     		push	{r4, lr}
 625              	.LCFI14:
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 4, -8
 628              		.cfi_offset 14, -4
 629 0004 0446     		mov	r4, r0
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 630              		.loc 1 474 0
 631 0006 0223     		movs	r3, #2
 632 0008 80F85130 		strb	r3, [r0, #81]
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 633              		.loc 1 477 0
 634 000c 0268     		ldr	r2, [r0]
 635 000e 1368     		ldr	r3, [r2]
 636 0010 23F04003 		bic	r3, r3, #64
 637 0014 1360     		str	r3, [r2]
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 638              		.loc 1 489 0
 639 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 640              	.LVL34:
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 641              		.loc 1 492 0
 642 001a 0020     		movs	r0, #0
 643 001c 6065     		str	r0, [r4, #84]
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 644              		.loc 1 493 0
ARM GAS  /tmp/cc4FiPZj.s 			page 82


 645 001e 84F85100 		strb	r0, [r4, #81]
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 646              		.loc 1 496 0
 647 0022 84F85000 		strb	r0, [r4, #80]
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 648              		.loc 1 498 0
 649 0026 10BD     		pop	{r4, pc}
 650              	.LVL35:
 651              	.L54:
 652              	.LCFI15:
 653              		.cfi_def_cfa_offset 0
 654              		.cfi_restore 4
 655              		.cfi_restore 14
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 656              		.loc 1 468 0
 657 0028 0120     		movs	r0, #1
 658              	.LVL36:
 659 002a 7047     		bx	lr
 660              		.cfi_endproc
 661              	.LFE66:
 663              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 664              		.align	1
 665              		.global	HAL_SPI_Transmit
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 669              		.fpu softvfp
 671              	HAL_SPI_Transmit:
 672              	.LFB69:
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 673              		.loc 1 796 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 8
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              	.LVL37:
 678 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 679              	.LCFI16:
 680              		.cfi_def_cfa_offset 24
 681              		.cfi_offset 4, -24
 682              		.cfi_offset 5, -20
 683              		.cfi_offset 6, -16
 684              		.cfi_offset 7, -12
 685              		.cfi_offset 8, -8
 686              		.cfi_offset 14, -4
 687 0004 82B0     		sub	sp, sp, #8
 688              	.LCFI17:
 689              		.cfi_def_cfa_offset 32
 690              	.LVL38:
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 691              		.loc 1 805 0
 692 0006 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 693 000a 012C     		cmp	r4, #1
 694 000c 03D1     		bne	.L92
 695 000e 0220     		movs	r0, #2
 696              	.LVL39:
 697              	.L60:
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 83


 698              		.loc 1 949 0
 699 0010 02B0     		add	sp, sp, #8
 700              	.LCFI18:
 701              		.cfi_remember_state
 702              		.cfi_def_cfa_offset 24
 703              		@ sp needed
 704 0012 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 705              	.LVL40:
 706              	.L92:
 707              	.LCFI19:
 708              		.cfi_restore_state
 709 0016 1D46     		mov	r5, r3
 710 0018 1746     		mov	r7, r2
 711 001a 8846     		mov	r8, r1
 712 001c 0446     		mov	r4, r0
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 713              		.loc 1 805 0 discriminator 2
 714 001e 0123     		movs	r3, #1
 715              	.LVL41:
 716 0020 80F85030 		strb	r3, [r0, #80]
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 717              		.loc 1 808 0 discriminator 2
 718 0024 FFF7FEFF 		bl	HAL_GetTick
 719              	.LVL42:
 720 0028 0646     		mov	r6, r0
 721              	.LVL43:
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 722              		.loc 1 811 0 discriminator 2
 723 002a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 724 002e DBB2     		uxtb	r3, r3
 725 0030 012B     		cmp	r3, #1
 726 0032 07D0     		beq	.L93
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 727              		.loc 1 813 0
 728 0034 0220     		movs	r0, #2
 729              	.LVL44:
 730              	.L61:
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
 731              		.loc 1 945 0
 732 0036 0123     		movs	r3, #1
 733 0038 84F85130 		strb	r3, [r4, #81]
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 734              		.loc 1 947 0
 735 003c 0023     		movs	r3, #0
 736 003e 84F85030 		strb	r3, [r4, #80]
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 737              		.loc 1 948 0
 738 0042 E5E7     		b	.L60
 739              	.LVL45:
 740              	.L93:
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 741              		.loc 1 817 0
 742 0044 B8F1000F 		cmp	r8, #0
 743 0048 00F0A180 		beq	.L84
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 744              		.loc 1 817 0 is_stmt 0 discriminator 1
 745 004c 002F     		cmp	r7, #0
ARM GAS  /tmp/cc4FiPZj.s 			page 84


 746 004e 00F0A080 		beq	.L85
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 747              		.loc 1 824 0 is_stmt 1
 748 0052 0323     		movs	r3, #3
 749 0054 84F85130 		strb	r3, [r4, #81]
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 750              		.loc 1 825 0
 751 0058 0023     		movs	r3, #0
 752 005a 6365     		str	r3, [r4, #84]
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 753              		.loc 1 826 0
 754 005c C4F83080 		str	r8, [r4, #48]
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 755              		.loc 1 827 0
 756 0060 A786     		strh	r7, [r4, #52]	@ movhi
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 757              		.loc 1 828 0
 758 0062 E786     		strh	r7, [r4, #54]	@ movhi
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 759              		.loc 1 831 0
 760 0064 A363     		str	r3, [r4, #56]
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 761              		.loc 1 832 0
 762 0066 A387     		strh	r3, [r4, #60]	@ movhi
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 763              		.loc 1 833 0
 764 0068 E387     		strh	r3, [r4, #62]	@ movhi
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 765              		.loc 1 834 0
 766 006a 6364     		str	r3, [r4, #68]
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 767              		.loc 1 835 0
 768 006c 2364     		str	r3, [r4, #64]
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 769              		.loc 1 838 0
 770 006e A368     		ldr	r3, [r4, #8]
 771 0070 B3F5004F 		cmp	r3, #32768
 772 0074 1DD0     		beq	.L94
 773              	.L62:
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 774              		.loc 1 854 0
 775 0076 2368     		ldr	r3, [r4]
 776 0078 1A68     		ldr	r2, [r3]
 777 007a 12F0400F 		tst	r2, #64
 778 007e 03D1     		bne	.L63
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 779              		.loc 1 857 0
 780 0080 1A68     		ldr	r2, [r3]
 781 0082 42F04002 		orr	r2, r2, #64
 782 0086 1A60     		str	r2, [r3]
 783              	.L63:
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 784              		.loc 1 861 0
 785 0088 E368     		ldr	r3, [r4, #12]
 786 008a B3F5006F 		cmp	r3, #2048
 787 008e 1BD0     		beq	.L95
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/cc4FiPZj.s 			page 85


 788              		.loc 1 893 0
 789 0090 6368     		ldr	r3, [r4, #4]
 790 0092 0BB1     		cbz	r3, .L73
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 791              		.loc 1 893 0 is_stmt 0 discriminator 1
 792 0094 012F     		cmp	r7, #1
 793 0096 51D1     		bne	.L75
 794              	.L73:
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 795              		.loc 1 895 0 is_stmt 1
 796 0098 2368     		ldr	r3, [r4]
 797 009a 226B     		ldr	r2, [r4, #48]
 798 009c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 799 009e 1A73     		strb	r2, [r3, #12]
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 800              		.loc 1 896 0
 801 00a0 236B     		ldr	r3, [r4, #48]
 802 00a2 0133     		adds	r3, r3, #1
 803 00a4 2363     		str	r3, [r4, #48]
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 804              		.loc 1 897 0
 805 00a6 E38E     		ldrh	r3, [r4, #54]
 806 00a8 9BB2     		uxth	r3, r3
 807 00aa 013B     		subs	r3, r3, #1
 808 00ac 9BB2     		uxth	r3, r3
 809 00ae E386     		strh	r3, [r4, #54]	@ movhi
 810 00b0 44E0     		b	.L75
 811              	.L94:
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 812              		.loc 1 841 0
 813 00b2 2268     		ldr	r2, [r4]
 814 00b4 1368     		ldr	r3, [r2]
 815 00b6 23F04003 		bic	r3, r3, #64
 816 00ba 1360     		str	r3, [r2]
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 817              		.loc 1 842 0
 818 00bc 2268     		ldr	r2, [r4]
 819 00be 1368     		ldr	r3, [r2]
 820 00c0 43F48043 		orr	r3, r3, #16384
 821 00c4 1360     		str	r3, [r2]
 822 00c6 D6E7     		b	.L62
 823              	.L95:
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 824              		.loc 1 863 0
 825 00c8 6368     		ldr	r3, [r4, #4]
 826 00ca 0BB1     		cbz	r3, .L65
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 827              		.loc 1 863 0 is_stmt 0 discriminator 1
 828 00cc 012F     		cmp	r7, #1
 829 00ce 16D1     		bne	.L67
 830              	.L65:
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 831              		.loc 1 865 0 is_stmt 1
 832 00d0 2368     		ldr	r3, [r4]
 833 00d2 226B     		ldr	r2, [r4, #48]
 834 00d4 1288     		ldrh	r2, [r2]
 835 00d6 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/cc4FiPZj.s 			page 86


 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 836              		.loc 1 866 0
 837 00d8 236B     		ldr	r3, [r4, #48]
 838 00da 0233     		adds	r3, r3, #2
 839 00dc 2363     		str	r3, [r4, #48]
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 840              		.loc 1 867 0
 841 00de E38E     		ldrh	r3, [r4, #54]
 842 00e0 9BB2     		uxth	r3, r3
 843 00e2 013B     		subs	r3, r3, #1
 844 00e4 9BB2     		uxth	r3, r3
 845 00e6 E386     		strh	r3, [r4, #54]	@ movhi
 846 00e8 09E0     		b	.L67
 847              	.LVL46:
 848              	.L68:
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 849              		.loc 1 882 0
 850 00ea FFF7FEFF 		bl	HAL_GetTick
 851              	.LVL47:
 852 00ee 801B     		subs	r0, r0, r6
 853 00f0 A842     		cmp	r0, r5
 854 00f2 02D3     		bcc	.L70
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 855              		.loc 1 882 0 is_stmt 0 discriminator 1
 856 00f4 B5F1FF3F 		cmp	r5, #-1
 857 00f8 4DD1     		bne	.L86
 858              	.L70:
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 859              		.loc 1 882 0 discriminator 3
 860 00fa 002D     		cmp	r5, #0
 861 00fc 4DD0     		beq	.L87
 862              	.L67:
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 863              		.loc 1 870 0 is_stmt 1
 864 00fe E38E     		ldrh	r3, [r4, #54]
 865 0100 9BB2     		uxth	r3, r3
 866 0102 002B     		cmp	r3, #0
 867 0104 2ED0     		beq	.L72
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 868              		.loc 1 873 0
 869 0106 2368     		ldr	r3, [r4]
 870 0108 9A68     		ldr	r2, [r3, #8]
 871 010a 12F0020F 		tst	r2, #2
 872 010e ECD0     		beq	.L68
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 873              		.loc 1 875 0
 874 0110 226B     		ldr	r2, [r4, #48]
 875 0112 1288     		ldrh	r2, [r2]
 876 0114 DA60     		str	r2, [r3, #12]
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 877              		.loc 1 876 0
 878 0116 236B     		ldr	r3, [r4, #48]
 879 0118 0233     		adds	r3, r3, #2
 880 011a 2363     		str	r3, [r4, #48]
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 881              		.loc 1 877 0
 882 011c E38E     		ldrh	r3, [r4, #54]
ARM GAS  /tmp/cc4FiPZj.s 			page 87


 883 011e 9BB2     		uxth	r3, r3
 884 0120 013B     		subs	r3, r3, #1
 885 0122 9BB2     		uxth	r3, r3
 886 0124 E386     		strh	r3, [r4, #54]	@ movhi
 887 0126 EAE7     		b	.L67
 888              	.L76:
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 889              		.loc 1 911 0
 890 0128 FFF7FEFF 		bl	HAL_GetTick
 891              	.LVL48:
 892 012c 801B     		subs	r0, r0, r6
 893 012e 8542     		cmp	r5, r0
 894 0130 02D8     		bhi	.L78
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 895              		.loc 1 911 0 is_stmt 0 discriminator 1
 896 0132 B5F1FF3F 		cmp	r5, #-1
 897 0136 32D1     		bne	.L88
 898              	.L78:
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 899              		.loc 1 911 0 discriminator 3
 900 0138 002D     		cmp	r5, #0
 901 013a 32D0     		beq	.L89
 902              	.L75:
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 903              		.loc 1 899 0 is_stmt 1
 904 013c E28E     		ldrh	r2, [r4, #54]
 905 013e 92B2     		uxth	r2, r2
 906 0140 82B1     		cbz	r2, .L72
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 907              		.loc 1 902 0
 908 0142 2368     		ldr	r3, [r4]
 909 0144 9A68     		ldr	r2, [r3, #8]
 910 0146 12F0020F 		tst	r2, #2
 911 014a EDD0     		beq	.L76
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 912              		.loc 1 904 0
 913 014c 226B     		ldr	r2, [r4, #48]
 914 014e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 915 0150 1A73     		strb	r2, [r3, #12]
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 916              		.loc 1 905 0
 917 0152 236B     		ldr	r3, [r4, #48]
 918 0154 0133     		adds	r3, r3, #1
 919 0156 2363     		str	r3, [r4, #48]
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 920              		.loc 1 906 0
 921 0158 E28E     		ldrh	r2, [r4, #54]
 922 015a 92B2     		uxth	r2, r2
 923 015c 013A     		subs	r2, r2, #1
 924 015e 92B2     		uxth	r2, r2
 925 0160 E286     		strh	r2, [r4, #54]	@ movhi
 926 0162 EBE7     		b	.L75
 927              	.L72:
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 928              		.loc 1 928 0
 929 0164 3246     		mov	r2, r6
 930 0166 2946     		mov	r1, r5
ARM GAS  /tmp/cc4FiPZj.s 			page 88


 931 0168 2046     		mov	r0, r4
 932 016a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 933              	.LVL49:
 934 016e 08B1     		cbz	r0, .L80
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 935              		.loc 1 930 0
 936 0170 2023     		movs	r3, #32
 937 0172 6365     		str	r3, [r4, #84]
 938              	.L80:
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 939              		.loc 1 934 0
 940 0174 A368     		ldr	r3, [r4, #8]
 941 0176 33B9     		cbnz	r3, .L81
 942              	.LBB2:
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 943              		.loc 1 936 0
 944 0178 0193     		str	r3, [sp, #4]
 945 017a 2368     		ldr	r3, [r4]
 946 017c DA68     		ldr	r2, [r3, #12]
 947 017e 0192     		str	r2, [sp, #4]
 948 0180 9B68     		ldr	r3, [r3, #8]
 949 0182 0193     		str	r3, [sp, #4]
 950 0184 019B     		ldr	r3, [sp, #4]
 951              	.L81:
 952              	.LBE2:
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 953              		.loc 1 939 0
 954 0186 636D     		ldr	r3, [r4, #84]
 955 0188 6BB9     		cbnz	r3, .L90
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 956              		.loc 1 798 0
 957 018a 0020     		movs	r0, #0
 958 018c 53E7     		b	.L61
 959              	.LVL50:
 960              	.L84:
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 961              		.loc 1 819 0
 962 018e 0120     		movs	r0, #1
 963              	.LVL51:
 964 0190 51E7     		b	.L61
 965              	.LVL52:
 966              	.L85:
 967 0192 0120     		movs	r0, #1
 968              	.LVL53:
 969 0194 4FE7     		b	.L61
 970              	.L86:
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 971              		.loc 1 884 0
 972 0196 0320     		movs	r0, #3
 973 0198 4DE7     		b	.L61
 974              	.L87:
 975 019a 0320     		movs	r0, #3
 976 019c 4BE7     		b	.L61
 977              	.L88:
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 978              		.loc 1 913 0
 979 019e 0320     		movs	r0, #3
ARM GAS  /tmp/cc4FiPZj.s 			page 89


 980 01a0 49E7     		b	.L61
 981              	.L89:
 982 01a2 0320     		movs	r0, #3
 983 01a4 47E7     		b	.L61
 984              	.L90:
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 985              		.loc 1 941 0
 986 01a6 0120     		movs	r0, #1
 987 01a8 45E7     		b	.L61
 988              		.cfi_endproc
 989              	.LFE69:
 991              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 992              		.align	1
 993              		.global	HAL_SPI_TransmitReceive
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu softvfp
 999              	HAL_SPI_TransmitReceive:
 1000              	.LFB71:
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 1001              		.loc 1 1171 0
 1002              		.cfi_startproc
 1003              		@ args = 4, pretend = 0, frame = 8
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              	.LVL54:
 1006 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1007              	.LCFI20:
 1008              		.cfi_def_cfa_offset 28
 1009              		.cfi_offset 4, -28
 1010              		.cfi_offset 5, -24
 1011              		.cfi_offset 6, -20
 1012              		.cfi_offset 7, -16
 1013              		.cfi_offset 8, -12
 1014              		.cfi_offset 9, -8
 1015              		.cfi_offset 14, -4
 1016 0004 83B0     		sub	sp, sp, #12
 1017              	.LCFI21:
 1018              		.cfi_def_cfa_offset 40
 1019 0006 0A9D     		ldr	r5, [sp, #40]
 1020              	.LVL55:
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1021              		.loc 1 1185 0
 1022 0008 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1023 000c 012C     		cmp	r4, #1
 1024 000e 04D1     		bne	.L129
 1025 0010 0223     		movs	r3, #2
 1026              	.LVL56:
 1027              	.L97:
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1028              		.loc 1 1387 0
 1029 0012 1846     		mov	r0, r3
 1030 0014 03B0     		add	sp, sp, #12
 1031              	.LCFI22:
 1032              		.cfi_remember_state
 1033              		.cfi_def_cfa_offset 28
 1034              		@ sp needed
ARM GAS  /tmp/cc4FiPZj.s 			page 90


 1035 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1036              	.LVL57:
 1037              	.L129:
 1038              	.LCFI23:
 1039              		.cfi_restore_state
 1040 001a 1E46     		mov	r6, r3
 1041 001c 9046     		mov	r8, r2
 1042 001e 0F46     		mov	r7, r1
 1043 0020 0446     		mov	r4, r0
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1044              		.loc 1 1185 0 discriminator 2
 1045 0022 0123     		movs	r3, #1
 1046              	.LVL58:
 1047 0024 80F85030 		strb	r3, [r0, #80]
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1048              		.loc 1 1188 0 discriminator 2
 1049 0028 FFF7FEFF 		bl	HAL_GetTick
 1050              	.LVL59:
 1051 002c 8146     		mov	r9, r0
 1052              	.LVL60:
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1053              		.loc 1 1191 0 discriminator 2
 1054 002e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1055 0032 DBB2     		uxtb	r3, r3
 1056              	.LVL61:
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 1057              		.loc 1 1192 0 discriminator 2
 1058 0034 6268     		ldr	r2, [r4, #4]
 1059              	.LVL62:
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1060              		.loc 1 1195 0 discriminator 2
 1061 0036 012B     		cmp	r3, #1
 1062 0038 12D0     		beq	.L98
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1063              		.loc 1 1195 0 is_stmt 0 discriminator 1
 1064 003a B2F5827F 		cmp	r2, #260
 1065 003e 07D0     		beq	.L130
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1066              		.loc 1 1198 0 is_stmt 1
 1067 0040 0223     		movs	r3, #2
 1068              	.LVL63:
 1069              	.L99:
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1070              		.loc 1 1384 0
 1071 0042 0122     		movs	r2, #1
 1072 0044 84F85120 		strb	r2, [r4, #81]
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1073              		.loc 1 1385 0
 1074 0048 0022     		movs	r2, #0
 1075 004a 84F85020 		strb	r2, [r4, #80]
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1076              		.loc 1 1386 0
 1077 004e E0E7     		b	.L97
 1078              	.LVL64:
 1079              	.L130:
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1080              		.loc 1 1196 0
ARM GAS  /tmp/cc4FiPZj.s 			page 91


 1081 0050 A268     		ldr	r2, [r4, #8]
 1082              	.LVL65:
 1083 0052 002A     		cmp	r2, #0
 1084 0054 40F0E280 		bne	.L120
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1085              		.loc 1 1196 0 is_stmt 0 discriminator 1
 1086 0058 042B     		cmp	r3, #4
 1087 005a 01D0     		beq	.L98
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1088              		.loc 1 1198 0 is_stmt 1
 1089 005c 0223     		movs	r3, #2
 1090              	.LVL66:
 1091 005e F0E7     		b	.L99
 1092              	.LVL67:
 1093              	.L98:
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1094              		.loc 1 1202 0
 1095 0060 002F     		cmp	r7, #0
 1096 0062 00F0DD80 		beq	.L122
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1097              		.loc 1 1202 0 is_stmt 0 discriminator 1
 1098 0066 B8F1000F 		cmp	r8, #0
 1099 006a 00F0DB80 		beq	.L123
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1100              		.loc 1 1202 0 discriminator 2
 1101 006e 002E     		cmp	r6, #0
 1102 0070 00F0DA80 		beq	.L124
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1103              		.loc 1 1209 0 is_stmt 1
 1104 0074 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1105              	.LVL68:
 1106 0078 DBB2     		uxtb	r3, r3
 1107 007a 042B     		cmp	r3, #4
 1108 007c 02D0     		beq	.L100
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1109              		.loc 1 1211 0
 1110 007e 0523     		movs	r3, #5
 1111 0080 84F85130 		strb	r3, [r4, #81]
 1112              	.L100:
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1113              		.loc 1 1215 0
 1114 0084 0023     		movs	r3, #0
 1115 0086 6365     		str	r3, [r4, #84]
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1116              		.loc 1 1216 0
 1117 0088 C4F83880 		str	r8, [r4, #56]
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1118              		.loc 1 1217 0
 1119 008c E687     		strh	r6, [r4, #62]	@ movhi
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1120              		.loc 1 1218 0
 1121 008e A687     		strh	r6, [r4, #60]	@ movhi
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1122              		.loc 1 1219 0
 1123 0090 2763     		str	r7, [r4, #48]
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1124              		.loc 1 1220 0
ARM GAS  /tmp/cc4FiPZj.s 			page 92


 1125 0092 E686     		strh	r6, [r4, #54]	@ movhi
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1126              		.loc 1 1221 0
 1127 0094 A686     		strh	r6, [r4, #52]	@ movhi
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1128              		.loc 1 1224 0
 1129 0096 2364     		str	r3, [r4, #64]
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1130              		.loc 1 1225 0
 1131 0098 6364     		str	r3, [r4, #68]
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1132              		.loc 1 1236 0
 1133 009a 2368     		ldr	r3, [r4]
 1134 009c 1A68     		ldr	r2, [r3]
 1135 009e 12F0400F 		tst	r2, #64
 1136 00a2 03D1     		bne	.L101
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1137              		.loc 1 1239 0
 1138 00a4 1A68     		ldr	r2, [r3]
 1139 00a6 42F04002 		orr	r2, r2, #64
 1140 00aa 1A60     		str	r2, [r3]
 1141              	.LVL69:
 1142              	.L101:
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1143              		.loc 1 1243 0
 1144 00ac E368     		ldr	r3, [r4, #12]
 1145 00ae B3F5006F 		cmp	r3, #2048
 1146 00b2 11D0     		beq	.L131
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1147              		.loc 1 1290 0
 1148 00b4 6368     		ldr	r3, [r4, #4]
 1149 00b6 0BB1     		cbz	r3, .L110
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1150              		.loc 1 1290 0 is_stmt 0 discriminator 1
 1151 00b8 012E     		cmp	r6, #1
 1152 00ba 0BD1     		bne	.L111
 1153              	.L110:
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 1154              		.loc 1 1292 0 is_stmt 1
 1155 00bc 2368     		ldr	r3, [r4]
 1156 00be 226B     		ldr	r2, [r4, #48]
 1157 00c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1158 00c2 1A73     		strb	r2, [r3, #12]
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 1159              		.loc 1 1293 0
 1160 00c4 236B     		ldr	r3, [r4, #48]
 1161 00c6 0133     		adds	r3, r3, #1
 1162 00c8 2363     		str	r3, [r4, #48]
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 1163              		.loc 1 1294 0
 1164 00ca E38E     		ldrh	r3, [r4, #54]
 1165 00cc 9BB2     		uxth	r3, r3
 1166 00ce 013B     		subs	r3, r3, #1
 1167 00d0 9BB2     		uxth	r3, r3
 1168 00d2 E386     		strh	r3, [r4, #54]	@ movhi
 1169              	.L111:
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
ARM GAS  /tmp/cc4FiPZj.s 			page 93


 1170              		.loc 1 1323 0
 1171 00d4 0126     		movs	r6, #1
 1172              	.LVL70:
 1173 00d6 6CE0     		b	.L115
 1174              	.LVL71:
 1175              	.L131:
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1176              		.loc 1 1245 0
 1177 00d8 6368     		ldr	r3, [r4, #4]
 1178 00da 0BB1     		cbz	r3, .L103
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1179              		.loc 1 1245 0 is_stmt 0 discriminator 1
 1180 00dc 012E     		cmp	r6, #1
 1181 00de 0BD1     		bne	.L104
 1182              	.L103:
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1183              		.loc 1 1247 0 is_stmt 1
 1184 00e0 2368     		ldr	r3, [r4]
 1185 00e2 226B     		ldr	r2, [r4, #48]
 1186 00e4 1288     		ldrh	r2, [r2]
 1187 00e6 DA60     		str	r2, [r3, #12]
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 1188              		.loc 1 1248 0
 1189 00e8 236B     		ldr	r3, [r4, #48]
 1190 00ea 0233     		adds	r3, r3, #2
 1191 00ec 2363     		str	r3, [r4, #48]
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 1192              		.loc 1 1249 0
 1193 00ee E38E     		ldrh	r3, [r4, #54]
 1194 00f0 9BB2     		uxth	r3, r3
 1195 00f2 013B     		subs	r3, r3, #1
 1196 00f4 9BB2     		uxth	r3, r3
 1197 00f6 E386     		strh	r3, [r4, #54]	@ movhi
 1198              	.L104:
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1199              		.loc 1 1278 0
 1200 00f8 0126     		movs	r6, #1
 1201              	.LVL72:
 1202 00fa 1CE0     		b	.L105
 1203              	.LVL73:
 1204              	.L106:
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1205              		.loc 1 1272 0
 1206 00fc 2368     		ldr	r3, [r4]
 1207 00fe 9A68     		ldr	r2, [r3, #8]
 1208 0100 12F0010F 		tst	r2, #1
 1209 0104 0ED0     		beq	.L107
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1210              		.loc 1 1272 0 is_stmt 0 discriminator 1
 1211 0106 E28F     		ldrh	r2, [r4, #62]
 1212 0108 92B2     		uxth	r2, r2
 1213 010a 5AB1     		cbz	r2, .L107
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1214              		.loc 1 1274 0 is_stmt 1
 1215 010c A26B     		ldr	r2, [r4, #56]
 1216 010e DB68     		ldr	r3, [r3, #12]
 1217 0110 1380     		strh	r3, [r2]	@ movhi
ARM GAS  /tmp/cc4FiPZj.s 			page 94


1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1218              		.loc 1 1275 0
 1219 0112 A36B     		ldr	r3, [r4, #56]
 1220 0114 0233     		adds	r3, r3, #2
 1221 0116 A363     		str	r3, [r4, #56]
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1222              		.loc 1 1276 0
 1223 0118 E38F     		ldrh	r3, [r4, #62]
 1224 011a 9BB2     		uxth	r3, r3
 1225 011c 013B     		subs	r3, r3, #1
 1226 011e 9BB2     		uxth	r3, r3
 1227 0120 E387     		strh	r3, [r4, #62]	@ movhi
 1228              	.LVL74:
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1229              		.loc 1 1278 0
 1230 0122 0126     		movs	r6, #1
 1231              	.LVL75:
 1232              	.L107:
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1233              		.loc 1 1280 0
 1234 0124 FFF7FEFF 		bl	HAL_GetTick
 1235              	.LVL76:
 1236 0128 A0EB0900 		sub	r0, r0, r9
 1237 012c A842     		cmp	r0, r5
 1238 012e 02D3     		bcc	.L105
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1239              		.loc 1 1280 0 is_stmt 0 discriminator 1
 1240 0130 B5F1FF3F 		cmp	r5, #-1
 1241 0134 7AD1     		bne	.L125
 1242              	.LVL77:
 1243              	.L105:
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1244              		.loc 1 1251 0 is_stmt 1
 1245 0136 E38E     		ldrh	r3, [r4, #54]
 1246 0138 9BB2     		uxth	r3, r3
 1247 013a 1BB9     		cbnz	r3, .L108
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1248              		.loc 1 1251 0 is_stmt 0 discriminator 1
 1249 013c E38F     		ldrh	r3, [r4, #62]
 1250 013e 9BB2     		uxth	r3, r3
 1251 0140 002B     		cmp	r3, #0
 1252 0142 54D0     		beq	.L109
 1253              	.L108:
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1254              		.loc 1 1254 0 is_stmt 1
 1255 0144 2368     		ldr	r3, [r4]
 1256 0146 9A68     		ldr	r2, [r3, #8]
 1257 0148 12F0020F 		tst	r2, #2
 1258 014c D6D0     		beq	.L106
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1259              		.loc 1 1254 0 is_stmt 0 discriminator 1
 1260 014e E28E     		ldrh	r2, [r4, #54]
 1261 0150 92B2     		uxth	r2, r2
 1262 0152 002A     		cmp	r2, #0
 1263 0154 D2D0     		beq	.L106
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1264              		.loc 1 1254 0 discriminator 2
ARM GAS  /tmp/cc4FiPZj.s 			page 95


 1265 0156 002E     		cmp	r6, #0
 1266 0158 D0D0     		beq	.L106
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1267              		.loc 1 1256 0 is_stmt 1
 1268 015a 226B     		ldr	r2, [r4, #48]
 1269 015c 1288     		ldrh	r2, [r2]
 1270 015e DA60     		str	r2, [r3, #12]
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1271              		.loc 1 1257 0
 1272 0160 236B     		ldr	r3, [r4, #48]
 1273 0162 0233     		adds	r3, r3, #2
 1274 0164 2363     		str	r3, [r4, #48]
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1275              		.loc 1 1258 0
 1276 0166 E38E     		ldrh	r3, [r4, #54]
 1277 0168 9BB2     		uxth	r3, r3
 1278 016a 013B     		subs	r3, r3, #1
 1279 016c 9BB2     		uxth	r3, r3
 1280 016e E386     		strh	r3, [r4, #54]	@ movhi
 1281              	.LVL78:
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1282              		.loc 1 1260 0
 1283 0170 0026     		movs	r6, #0
 1284 0172 C3E7     		b	.L106
 1285              	.LVL79:
 1286              	.L112:
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1287              		.loc 1 1317 0
 1288 0174 2368     		ldr	r3, [r4]
 1289 0176 9A68     		ldr	r2, [r3, #8]
 1290 0178 12F0010F 		tst	r2, #1
 1291 017c 0ED0     		beq	.L113
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1292              		.loc 1 1317 0 is_stmt 0 discriminator 1
 1293 017e E28F     		ldrh	r2, [r4, #62]
 1294 0180 92B2     		uxth	r2, r2
 1295 0182 5AB1     		cbz	r2, .L113
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
 1296              		.loc 1 1319 0 is_stmt 1
 1297 0184 A26B     		ldr	r2, [r4, #56]
 1298 0186 DB68     		ldr	r3, [r3, #12]
 1299 0188 1370     		strb	r3, [r2]
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1300              		.loc 1 1320 0
 1301 018a A36B     		ldr	r3, [r4, #56]
 1302 018c 0133     		adds	r3, r3, #1
 1303 018e A363     		str	r3, [r4, #56]
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1304              		.loc 1 1321 0
 1305 0190 E38F     		ldrh	r3, [r4, #62]
 1306 0192 9BB2     		uxth	r3, r3
 1307 0194 013B     		subs	r3, r3, #1
 1308 0196 9BB2     		uxth	r3, r3
 1309 0198 E387     		strh	r3, [r4, #62]	@ movhi
 1310              	.LVL80:
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1311              		.loc 1 1323 0
ARM GAS  /tmp/cc4FiPZj.s 			page 96


 1312 019a 0126     		movs	r6, #1
 1313              	.LVL81:
 1314              	.L113:
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1315              		.loc 1 1325 0
 1316 019c FFF7FEFF 		bl	HAL_GetTick
 1317              	.LVL82:
 1318 01a0 A0EB0900 		sub	r0, r0, r9
 1319 01a4 8542     		cmp	r5, r0
 1320 01a6 02D8     		bhi	.L114
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1321              		.loc 1 1325 0 is_stmt 0 discriminator 1
 1322 01a8 B5F1FF3F 		cmp	r5, #-1
 1323 01ac 40D1     		bne	.L126
 1324              	.L114:
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1325              		.loc 1 1325 0 discriminator 3
 1326 01ae 002D     		cmp	r5, #0
 1327 01b0 40D0     		beq	.L132
 1328              	.LVL83:
 1329              	.L115:
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1330              		.loc 1 1296 0 is_stmt 1
 1331 01b2 E38E     		ldrh	r3, [r4, #54]
 1332 01b4 9BB2     		uxth	r3, r3
 1333 01b6 13B9     		cbnz	r3, .L116
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1334              		.loc 1 1296 0 is_stmt 0 discriminator 1
 1335 01b8 E38F     		ldrh	r3, [r4, #62]
 1336 01ba 9BB2     		uxth	r3, r3
 1337 01bc BBB1     		cbz	r3, .L109
 1338              	.L116:
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1339              		.loc 1 1299 0 is_stmt 1
 1340 01be 2368     		ldr	r3, [r4]
 1341 01c0 9A68     		ldr	r2, [r3, #8]
 1342 01c2 12F0020F 		tst	r2, #2
 1343 01c6 D5D0     		beq	.L112
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1344              		.loc 1 1299 0 is_stmt 0 discriminator 1
 1345 01c8 E28E     		ldrh	r2, [r4, #54]
 1346 01ca 92B2     		uxth	r2, r2
 1347 01cc 002A     		cmp	r2, #0
 1348 01ce D1D0     		beq	.L112
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1349              		.loc 1 1299 0 discriminator 2
 1350 01d0 002E     		cmp	r6, #0
 1351 01d2 CFD0     		beq	.L112
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1352              		.loc 1 1301 0 is_stmt 1
 1353 01d4 226B     		ldr	r2, [r4, #48]
 1354 01d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1355 01d8 1A73     		strb	r2, [r3, #12]
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1356              		.loc 1 1302 0
 1357 01da 236B     		ldr	r3, [r4, #48]
 1358 01dc 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc4FiPZj.s 			page 97


 1359 01de 2363     		str	r3, [r4, #48]
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1360              		.loc 1 1303 0
 1361 01e0 E38E     		ldrh	r3, [r4, #54]
 1362 01e2 9BB2     		uxth	r3, r3
 1363 01e4 013B     		subs	r3, r3, #1
 1364 01e6 9BB2     		uxth	r3, r3
 1365 01e8 E386     		strh	r3, [r4, #54]	@ movhi
 1366              	.LVL84:
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1367              		.loc 1 1305 0
 1368 01ea 0026     		movs	r6, #0
 1369 01ec C2E7     		b	.L112
 1370              	.LVL85:
 1371              	.L109:
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1372              		.loc 1 1370 0
 1373 01ee 4A46     		mov	r2, r9
 1374 01f0 2946     		mov	r1, r5
 1375 01f2 2046     		mov	r0, r4
 1376 01f4 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1377              	.LVL86:
 1378 01f8 0346     		mov	r3, r0
 1379 01fa 18B1     		cbz	r0, .L117
 1380              	.LVL87:
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1381              		.loc 1 1373 0
 1382 01fc 2023     		movs	r3, #32
 1383 01fe 6365     		str	r3, [r4, #84]
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1384              		.loc 1 1372 0
 1385 0200 0123     		movs	r3, #1
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1386              		.loc 1 1374 0
 1387 0202 1EE7     		b	.L99
 1388              	.LVL88:
 1389              	.L117:
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1390              		.loc 1 1378 0
 1391 0204 A268     		ldr	r2, [r4, #8]
 1392 0206 002A     		cmp	r2, #0
 1393 0208 7FF41BAF 		bne	.L99
 1394              	.LBB3:
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1395              		.loc 1 1380 0
 1396 020c 0192     		str	r2, [sp, #4]
 1397 020e 2268     		ldr	r2, [r4]
 1398 0210 D168     		ldr	r1, [r2, #12]
 1399 0212 0191     		str	r1, [sp, #4]
 1400 0214 9268     		ldr	r2, [r2, #8]
 1401 0216 0192     		str	r2, [sp, #4]
 1402 0218 019A     		ldr	r2, [sp, #4]
 1403 021a 12E7     		b	.L99
 1404              	.LVL89:
 1405              	.L120:
 1406              	.LBE3:
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/cc4FiPZj.s 			page 98


 1407              		.loc 1 1198 0
 1408 021c 0223     		movs	r3, #2
 1409              	.LVL90:
 1410 021e 10E7     		b	.L99
 1411              	.LVL91:
 1412              	.L122:
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1413              		.loc 1 1204 0
 1414 0220 0123     		movs	r3, #1
 1415              	.LVL92:
 1416 0222 0EE7     		b	.L99
 1417              	.LVL93:
 1418              	.L123:
 1419 0224 0123     		movs	r3, #1
 1420              	.LVL94:
 1421 0226 0CE7     		b	.L99
 1422              	.LVL95:
 1423              	.L124:
 1424 0228 0123     		movs	r3, #1
 1425              	.LVL96:
 1426 022a 0AE7     		b	.L99
 1427              	.LVL97:
 1428              	.L125:
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 1429              		.loc 1 1282 0
 1430 022c 0323     		movs	r3, #3
 1431 022e 08E7     		b	.L99
 1432              	.L126:
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         goto error;
 1433              		.loc 1 1327 0
 1434 0230 0323     		movs	r3, #3
 1435 0232 06E7     		b	.L99
 1436              	.L132:
 1437 0234 0323     		movs	r3, #3
 1438 0236 04E7     		b	.L99
 1439              		.cfi_endproc
 1440              	.LFE71:
 1442              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1443              		.align	1
 1444              		.global	HAL_SPI_Receive
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1448              		.fpu softvfp
 1450              	HAL_SPI_Receive:
 1451              	.LFB70:
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 1452              		.loc 1 961 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              	.LVL98:
 1457 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1458              	.LCFI24:
 1459              		.cfi_def_cfa_offset 24
 1460              		.cfi_offset 4, -24
 1461              		.cfi_offset 5, -20
ARM GAS  /tmp/cc4FiPZj.s 			page 99


 1462              		.cfi_offset 6, -16
 1463              		.cfi_offset 7, -12
 1464              		.cfi_offset 8, -8
 1465              		.cfi_offset 14, -4
 1466 0004 82B0     		sub	sp, sp, #8
 1467              	.LCFI25:
 1468              		.cfi_def_cfa_offset 32
 1469 0006 0446     		mov	r4, r0
 1470 0008 0F46     		mov	r7, r1
 1471 000a 9046     		mov	r8, r2
 1472 000c 1D46     		mov	r5, r3
 1473              	.LVL99:
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1474              		.loc 1 965 0
 1475 000e 4368     		ldr	r3, [r0, #4]
 1476              	.LVL100:
 1477 0010 B3F5827F 		cmp	r3, #260
 1478 0014 07D0     		beq	.L161
 1479              	.L134:
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1480              		.loc 1 973 0
 1481 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1482 001a 012B     		cmp	r3, #1
 1483 001c 0FD1     		bne	.L162
 1484 001e 0220     		movs	r0, #2
 1485              	.LVL101:
 1486              	.L135:
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1487              		.loc 1 1157 0
 1488 0020 02B0     		add	sp, sp, #8
 1489              	.LCFI26:
 1490              		.cfi_remember_state
 1491              		.cfi_def_cfa_offset 24
 1492              		@ sp needed
 1493 0022 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1494              	.LVL102:
 1495              	.L161:
 1496              	.LCFI27:
 1497              		.cfi_restore_state
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1498              		.loc 1 965 0 discriminator 1
 1499 0026 8368     		ldr	r3, [r0, #8]
 1500 0028 002B     		cmp	r3, #0
 1501 002a F4D1     		bne	.L134
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 1502              		.loc 1 967 0
 1503 002c 0423     		movs	r3, #4
 1504 002e 80F85130 		strb	r3, [r0, #81]
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1505              		.loc 1 969 0
 1506 0032 0095     		str	r5, [sp]
 1507 0034 1346     		mov	r3, r2
 1508 0036 0A46     		mov	r2, r1
 1509              	.LVL103:
 1510 0038 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1511              	.LVL104:
 1512 003c F0E7     		b	.L135
ARM GAS  /tmp/cc4FiPZj.s 			page 100


 1513              	.LVL105:
 1514              	.L162:
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1515              		.loc 1 973 0 discriminator 2
 1516 003e 0123     		movs	r3, #1
 1517 0040 84F85030 		strb	r3, [r4, #80]
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1518              		.loc 1 976 0 discriminator 2
 1519 0044 FFF7FEFF 		bl	HAL_GetTick
 1520              	.LVL106:
 1521 0048 0646     		mov	r6, r0
 1522              	.LVL107:
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1523              		.loc 1 978 0 discriminator 2
 1524 004a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1525 004e DBB2     		uxtb	r3, r3
 1526 0050 012B     		cmp	r3, #1
 1527 0052 07D0     		beq	.L163
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1528              		.loc 1 980 0
 1529 0054 0220     		movs	r0, #2
 1530              	.LVL108:
 1531              	.L136:
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1532              		.loc 1 1154 0
 1533 0056 0123     		movs	r3, #1
 1534 0058 84F85130 		strb	r3, [r4, #81]
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1535              		.loc 1 1155 0
 1536 005c 0023     		movs	r3, #0
 1537 005e 84F85030 		strb	r3, [r4, #80]
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1538              		.loc 1 1156 0
 1539 0062 DDE7     		b	.L135
 1540              	.LVL109:
 1541              	.L163:
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1542              		.loc 1 984 0
 1543 0064 002F     		cmp	r7, #0
 1544 0066 74D0     		beq	.L153
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1545              		.loc 1 984 0 is_stmt 0 discriminator 1
 1546 0068 B8F1000F 		cmp	r8, #0
 1547 006c 73D0     		beq	.L154
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1548              		.loc 1 991 0 is_stmt 1
 1549 006e 0423     		movs	r3, #4
 1550 0070 84F85130 		strb	r3, [r4, #81]
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1551              		.loc 1 992 0
 1552 0074 0023     		movs	r3, #0
 1553 0076 6365     		str	r3, [r4, #84]
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1554              		.loc 1 993 0
 1555 0078 A763     		str	r7, [r4, #56]
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1556              		.loc 1 994 0
ARM GAS  /tmp/cc4FiPZj.s 			page 101


 1557 007a A4F83C80 		strh	r8, [r4, #60]	@ movhi
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1558              		.loc 1 995 0
 1559 007e A4F83E80 		strh	r8, [r4, #62]	@ movhi
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1560              		.loc 1 998 0
 1561 0082 2363     		str	r3, [r4, #48]
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1562              		.loc 1 999 0
 1563 0084 A386     		strh	r3, [r4, #52]	@ movhi
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1564              		.loc 1 1000 0
 1565 0086 E386     		strh	r3, [r4, #54]	@ movhi
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1566              		.loc 1 1001 0
 1567 0088 2364     		str	r3, [r4, #64]
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1568              		.loc 1 1002 0
 1569 008a 6364     		str	r3, [r4, #68]
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1570              		.loc 1 1015 0
 1571 008c A368     		ldr	r3, [r4, #8]
 1572 008e B3F5004F 		cmp	r3, #32768
 1573 0092 0BD0     		beq	.L164
 1574              	.L137:
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1575              		.loc 1 1023 0
 1576 0094 2368     		ldr	r3, [r4]
 1577 0096 1A68     		ldr	r2, [r3]
 1578 0098 12F0400F 		tst	r2, #64
 1579 009c 03D1     		bne	.L138
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1580              		.loc 1 1026 0
 1581 009e 1A68     		ldr	r2, [r3]
 1582 00a0 42F04002 		orr	r2, r2, #64
 1583 00a4 1A60     		str	r2, [r3]
 1584              	.L138:
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1585              		.loc 1 1030 0
 1586 00a6 E368     		ldr	r3, [r4, #12]
 1587 00a8 ABB1     		cbz	r3, .L139
 1588 00aa 32E0     		b	.L140
 1589              	.L164:
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 1590              		.loc 1 1018 0
 1591 00ac 2268     		ldr	r2, [r4]
 1592 00ae 1368     		ldr	r3, [r2]
 1593 00b0 23F04003 		bic	r3, r3, #64
 1594 00b4 1360     		str	r3, [r2]
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1595              		.loc 1 1019 0
 1596 00b6 2268     		ldr	r2, [r4]
 1597 00b8 1368     		ldr	r3, [r2]
 1598 00ba 23F48043 		bic	r3, r3, #16384
 1599 00be 1360     		str	r3, [r2]
 1600 00c0 E8E7     		b	.L137
 1601              	.LVL110:
ARM GAS  /tmp/cc4FiPZj.s 			page 102


 1602              	.L141:
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1603              		.loc 1 1046 0
 1604 00c2 FFF7FEFF 		bl	HAL_GetTick
 1605              	.LVL111:
 1606 00c6 801B     		subs	r0, r0, r6
 1607 00c8 8542     		cmp	r5, r0
 1608 00ca 02D8     		bhi	.L143
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1609              		.loc 1 1046 0 is_stmt 0 discriminator 1
 1610 00cc B5F1FF3F 		cmp	r5, #-1
 1611 00d0 43D1     		bne	.L155
 1612              	.L143:
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1613              		.loc 1 1046 0 discriminator 3
 1614 00d2 002D     		cmp	r5, #0
 1615 00d4 43D0     		beq	.L156
 1616              	.L139:
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1617              		.loc 1 1033 0 is_stmt 1
 1618 00d6 E38F     		ldrh	r3, [r4, #62]
 1619 00d8 9BB2     		uxth	r3, r3
 1620 00da 002B     		cmp	r3, #0
 1621 00dc 2DD0     		beq	.L145
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1622              		.loc 1 1036 0
 1623 00de 2368     		ldr	r3, [r4]
 1624 00e0 9A68     		ldr	r2, [r3, #8]
 1625 00e2 12F0010F 		tst	r2, #1
 1626 00e6 ECD0     		beq	.L141
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1627              		.loc 1 1039 0
 1628 00e8 A26B     		ldr	r2, [r4, #56]
 1629 00ea 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1630 00ec 1370     		strb	r3, [r2]
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1631              		.loc 1 1040 0
 1632 00ee A36B     		ldr	r3, [r4, #56]
 1633 00f0 0133     		adds	r3, r3, #1
 1634 00f2 A363     		str	r3, [r4, #56]
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1635              		.loc 1 1041 0
 1636 00f4 E38F     		ldrh	r3, [r4, #62]
 1637 00f6 9BB2     		uxth	r3, r3
 1638 00f8 013B     		subs	r3, r3, #1
 1639 00fa 9BB2     		uxth	r3, r3
 1640 00fc E387     		strh	r3, [r4, #62]	@ movhi
 1641 00fe EAE7     		b	.L139
 1642              	.L146:
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1643              		.loc 1 1069 0
 1644 0100 FFF7FEFF 		bl	HAL_GetTick
 1645              	.LVL112:
 1646 0104 801B     		subs	r0, r0, r6
 1647 0106 8542     		cmp	r5, r0
 1648 0108 02D8     		bhi	.L148
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
ARM GAS  /tmp/cc4FiPZj.s 			page 103


 1649              		.loc 1 1069 0 is_stmt 0 discriminator 1
 1650 010a B5F1FF3F 		cmp	r5, #-1
 1651 010e 28D1     		bne	.L157
 1652              	.L148:
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 1653              		.loc 1 1069 0 discriminator 3
 1654 0110 4DB3     		cbz	r5, .L158
 1655              	.L140:
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1656              		.loc 1 1057 0 is_stmt 1
 1657 0112 E38F     		ldrh	r3, [r4, #62]
 1658 0114 9BB2     		uxth	r3, r3
 1659 0116 83B1     		cbz	r3, .L145
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 1660              		.loc 1 1060 0
 1661 0118 2368     		ldr	r3, [r4]
 1662 011a 9A68     		ldr	r2, [r3, #8]
 1663 011c 12F0010F 		tst	r2, #1
 1664 0120 EED0     		beq	.L146
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1665              		.loc 1 1062 0
 1666 0122 A26B     		ldr	r2, [r4, #56]
 1667 0124 DB68     		ldr	r3, [r3, #12]
 1668 0126 1380     		strh	r3, [r2]	@ movhi
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1669              		.loc 1 1063 0
 1670 0128 A36B     		ldr	r3, [r4, #56]
 1671 012a 0233     		adds	r3, r3, #2
 1672 012c A363     		str	r3, [r4, #56]
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 1673              		.loc 1 1064 0
 1674 012e E38F     		ldrh	r3, [r4, #62]
 1675 0130 9BB2     		uxth	r3, r3
 1676 0132 013B     		subs	r3, r3, #1
 1677 0134 9BB2     		uxth	r3, r3
 1678 0136 E387     		strh	r3, [r4, #62]	@ movhi
 1679 0138 EBE7     		b	.L140
 1680              	.L145:
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1681              		.loc 1 1124 0
 1682 013a 3246     		mov	r2, r6
 1683 013c 2946     		mov	r1, r5
 1684 013e 2046     		mov	r0, r4
 1685 0140 FFF7FEFF 		bl	SPI_EndRxTransaction
 1686              	.LVL113:
 1687 0144 08B1     		cbz	r0, .L150
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1688              		.loc 1 1126 0
 1689 0146 2023     		movs	r3, #32
 1690 0148 6365     		str	r3, [r4, #84]
 1691              	.L150:
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1692              		.loc 1 1148 0
 1693 014a 636D     		ldr	r3, [r4, #84]
 1694 014c 6BB9     		cbnz	r3, .L159
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1695              		.loc 1 963 0
ARM GAS  /tmp/cc4FiPZj.s 			page 104


 1696 014e 0020     		movs	r0, #0
 1697 0150 81E7     		b	.L136
 1698              	.LVL114:
 1699              	.L153:
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1700              		.loc 1 986 0
 1701 0152 0120     		movs	r0, #1
 1702              	.LVL115:
 1703 0154 7FE7     		b	.L136
 1704              	.LVL116:
 1705              	.L154:
 1706 0156 0120     		movs	r0, #1
 1707              	.LVL117:
 1708 0158 7DE7     		b	.L136
 1709              	.L155:
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 1710              		.loc 1 1048 0
 1711 015a 0320     		movs	r0, #3
 1712 015c 7BE7     		b	.L136
 1713              	.L156:
 1714 015e 0320     		movs	r0, #3
 1715 0160 79E7     		b	.L136
 1716              	.L157:
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           goto error;
 1717              		.loc 1 1071 0
 1718 0162 0320     		movs	r0, #3
 1719 0164 77E7     		b	.L136
 1720              	.L158:
 1721 0166 0320     		movs	r0, #3
 1722 0168 75E7     		b	.L136
 1723              	.L159:
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1724              		.loc 1 1150 0
 1725 016a 0120     		movs	r0, #1
 1726 016c 73E7     		b	.L136
 1727              		.cfi_endproc
 1728              	.LFE70:
 1730              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1731              		.align	1
 1732              		.global	HAL_SPI_Transmit_IT
 1733              		.syntax unified
 1734              		.thumb
 1735              		.thumb_func
 1736              		.fpu softvfp
 1738              	HAL_SPI_Transmit_IT:
 1739              	.LFB72:
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1740              		.loc 1 1398 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              		@ link register save eliminated.
 1745              	.LVL118:
 1746 0000 0346     		mov	r3, r0
 1747              	.LVL119:
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1748              		.loc 1 1405 0
ARM GAS  /tmp/cc4FiPZj.s 			page 105


 1749 0002 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
 1750              	.LVL120:
 1751 0006 0128     		cmp	r0, #1
 1752 0008 48D0     		beq	.L171
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1753              		.loc 1 1405 0 is_stmt 0 discriminator 2
 1754 000a 0120     		movs	r0, #1
 1755 000c 83F85000 		strb	r0, [r3, #80]
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1756              		.loc 1 1407 0 is_stmt 1 discriminator 2
 1757 0010 0029     		cmp	r1, #0
 1758 0012 3AD0     		beq	.L172
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1759              		.loc 1 1407 0 is_stmt 0 discriminator 1
 1760 0014 002A     		cmp	r2, #0
 1761 0016 3AD0     		beq	.L173
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1762              		.loc 1 1413 0 is_stmt 1
 1763 0018 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 1764 001c C0B2     		uxtb	r0, r0
 1765 001e 0128     		cmp	r0, #1
 1766 0020 01D0     		beq	.L176
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1767              		.loc 1 1415 0
 1768 0022 0220     		movs	r0, #2
 1769 0024 34E0     		b	.L167
 1770              	.L176:
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1771              		.loc 1 1420 0
 1772 0026 0320     		movs	r0, #3
 1773 0028 83F85100 		strb	r0, [r3, #81]
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1774              		.loc 1 1421 0
 1775 002c 0020     		movs	r0, #0
 1776 002e 5865     		str	r0, [r3, #84]
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1777              		.loc 1 1422 0
 1778 0030 1963     		str	r1, [r3, #48]
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1779              		.loc 1 1423 0
 1780 0032 9A86     		strh	r2, [r3, #52]	@ movhi
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1781              		.loc 1 1424 0
 1782 0034 DA86     		strh	r2, [r3, #54]	@ movhi
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1783              		.loc 1 1427 0
 1784 0036 9863     		str	r0, [r3, #56]
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1785              		.loc 1 1428 0
 1786 0038 9887     		strh	r0, [r3, #60]	@ movhi
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1787              		.loc 1 1429 0
 1788 003a D887     		strh	r0, [r3, #62]	@ movhi
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1789              		.loc 1 1430 0
 1790 003c 1864     		str	r0, [r3, #64]
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc4FiPZj.s 			page 106


 1791              		.loc 1 1433 0
 1792 003e DA68     		ldr	r2, [r3, #12]
 1793              	.LVL121:
 1794 0040 AAB1     		cbz	r2, .L168
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1795              		.loc 1 1435 0
 1796 0042 174A     		ldr	r2, .L178
 1797 0044 5A64     		str	r2, [r3, #68]
 1798              	.L169:
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1799              		.loc 1 1443 0
 1800 0046 9A68     		ldr	r2, [r3, #8]
 1801 0048 B2F5004F 		cmp	r2, #32768
 1802 004c 12D0     		beq	.L177
 1803              	.LVL122:
 1804              	.L170:
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1805              		.loc 1 1459 0
 1806 004e 1968     		ldr	r1, [r3]
 1807 0050 4A68     		ldr	r2, [r1, #4]
 1808 0052 42F0A002 		orr	r2, r2, #160
 1809 0056 4A60     		str	r2, [r1, #4]
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1810              		.loc 1 1463 0
 1811 0058 1A68     		ldr	r2, [r3]
 1812 005a 1168     		ldr	r1, [r2]
 1813 005c 11F0400F 		tst	r1, #64
 1814 0060 1AD1     		bne	.L175
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1815              		.loc 1 1466 0
 1816 0062 1168     		ldr	r1, [r2]
 1817 0064 41F04001 		orr	r1, r1, #64
 1818 0068 1160     		str	r1, [r2]
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1819              		.loc 1 1399 0
 1820 006a 0020     		movs	r0, #0
 1821 006c 10E0     		b	.L167
 1822              	.LVL123:
 1823              	.L168:
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1824              		.loc 1 1439 0
 1825 006e 0D4A     		ldr	r2, .L178+4
 1826 0070 5A64     		str	r2, [r3, #68]
 1827 0072 E8E7     		b	.L169
 1828              	.L177:
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 1829              		.loc 1 1446 0
 1830 0074 1968     		ldr	r1, [r3]
 1831              	.LVL124:
 1832 0076 0A68     		ldr	r2, [r1]
 1833 0078 22F04002 		bic	r2, r2, #64
 1834 007c 0A60     		str	r2, [r1]
 1835              	.LVL125:
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1836              		.loc 1 1447 0
 1837 007e 1968     		ldr	r1, [r3]
 1838 0080 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/cc4FiPZj.s 			page 107


 1839 0082 42F48042 		orr	r2, r2, #16384
 1840 0086 0A60     		str	r2, [r1]
 1841 0088 E1E7     		b	.L170
 1842              	.LVL126:
 1843              	.L172:
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1844              		.loc 1 1409 0
 1845 008a 0120     		movs	r0, #1
 1846 008c 00E0     		b	.L167
 1847              	.L173:
 1848 008e 0120     		movs	r0, #1
 1849              	.LVL127:
 1850              	.L167:
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1851              		.loc 1 1470 0
 1852 0090 0022     		movs	r2, #0
 1853 0092 83F85020 		strb	r2, [r3, #80]
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1854              		.loc 1 1471 0
 1855 0096 7047     		bx	lr
 1856              	.LVL128:
 1857              	.L175:
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1858              		.loc 1 1399 0
 1859 0098 0020     		movs	r0, #0
 1860 009a F9E7     		b	.L167
 1861              	.LVL129:
 1862              	.L171:
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1863              		.loc 1 1405 0
 1864 009c 0220     		movs	r0, #2
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1865              		.loc 1 1472 0
 1866 009e 7047     		bx	lr
 1867              	.L179:
 1868              		.align	2
 1869              	.L178:
 1870 00a0 00000000 		.word	SPI_TxISR_16BIT
 1871 00a4 00000000 		.word	SPI_TxISR_8BIT
 1872              		.cfi_endproc
 1873              	.LFE72:
 1875              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 1876              		.align	1
 1877              		.global	HAL_SPI_TransmitReceive_IT
 1878              		.syntax unified
 1879              		.thumb
 1880              		.thumb_func
 1881              		.fpu softvfp
 1883              	HAL_SPI_TransmitReceive_IT:
 1884              	.LFB74:
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
 1885              		.loc 1 1577 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
 1890              	.LVL130:
ARM GAS  /tmp/cc4FiPZj.s 			page 108


 1891 0000 30B4     		push	{r4, r5}
 1892              	.LCFI28:
 1893              		.cfi_def_cfa_offset 8
 1894              		.cfi_offset 4, -8
 1895              		.cfi_offset 5, -4
 1896              	.LVL131:
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1897              		.loc 1 1586 0
 1898 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1899 0006 012C     		cmp	r4, #1
 1900 0008 54D0     		beq	.L187
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1901              		.loc 1 1586 0 is_stmt 0 discriminator 2
 1902 000a 0124     		movs	r4, #1
 1903 000c 80F85040 		strb	r4, [r0, #80]
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1904              		.loc 1 1589 0 is_stmt 1 discriminator 2
 1905 0010 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1906 0014 E4B2     		uxtb	r4, r4
 1907              	.LVL132:
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1908              		.loc 1 1590 0 discriminator 2
 1909 0016 4568     		ldr	r5, [r0, #4]
 1910              	.LVL133:
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1911              		.loc 1 1592 0 discriminator 2
 1912 0018 012C     		cmp	r4, #1
 1913 001a 10D0     		beq	.L182
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1914              		.loc 1 1592 0 is_stmt 0 discriminator 1
 1915 001c B5F5827F 		cmp	r5, #260
 1916 0020 06D0     		beq	.L196
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1917              		.loc 1 1595 0 is_stmt 1
 1918 0022 0223     		movs	r3, #2
 1919              	.LVL134:
 1920              	.L183:
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 1921              		.loc 1 1652 0
 1922 0024 0022     		movs	r2, #0
 1923 0026 80F85020 		strb	r2, [r0, #80]
 1924              	.LVL135:
 1925              	.L181:
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1926              		.loc 1 1654 0
 1927 002a 1846     		mov	r0, r3
 1928              	.LVL136:
 1929 002c 30BC     		pop	{r4, r5}
 1930              	.LCFI29:
 1931              		.cfi_remember_state
 1932              		.cfi_restore 5
 1933              		.cfi_restore 4
 1934              		.cfi_def_cfa_offset 0
 1935 002e 7047     		bx	lr
 1936              	.LVL137:
 1937              	.L196:
 1938              	.LCFI30:
ARM GAS  /tmp/cc4FiPZj.s 			page 109


 1939              		.cfi_restore_state
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1940              		.loc 1 1593 0
 1941 0030 8568     		ldr	r5, [r0, #8]
 1942              	.LVL138:
 1943 0032 002D     		cmp	r5, #0
 1944 0034 34D1     		bne	.L189
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1945              		.loc 1 1593 0 is_stmt 0 discriminator 1
 1946 0036 042C     		cmp	r4, #4
 1947 0038 01D0     		beq	.L182
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 1948              		.loc 1 1595 0 is_stmt 1
 1949 003a 0223     		movs	r3, #2
 1950              	.LVL139:
 1951 003c F2E7     		b	.L183
 1952              	.LVL140:
 1953              	.L182:
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1954              		.loc 1 1599 0
 1955 003e 0029     		cmp	r1, #0
 1956 0040 30D0     		beq	.L191
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1957              		.loc 1 1599 0 is_stmt 0 discriminator 1
 1958 0042 002A     		cmp	r2, #0
 1959 0044 30D0     		beq	.L192
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1960              		.loc 1 1599 0 discriminator 2
 1961 0046 002B     		cmp	r3, #0
 1962 0048 30D0     		beq	.L193
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1963              		.loc 1 1606 0 is_stmt 1
 1964 004a 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1965              	.LVL141:
 1966 004e E4B2     		uxtb	r4, r4
 1967 0050 042C     		cmp	r4, #4
 1968 0052 02D0     		beq	.L184
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1969              		.loc 1 1608 0
 1970 0054 0524     		movs	r4, #5
 1971 0056 80F85140 		strb	r4, [r0, #81]
 1972              	.L184:
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1973              		.loc 1 1612 0
 1974 005a 0024     		movs	r4, #0
 1975 005c 4465     		str	r4, [r0, #84]
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1976              		.loc 1 1613 0
 1977 005e 0163     		str	r1, [r0, #48]
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1978              		.loc 1 1614 0
 1979 0060 8386     		strh	r3, [r0, #52]	@ movhi
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1980              		.loc 1 1615 0
 1981 0062 C386     		strh	r3, [r0, #54]	@ movhi
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1982              		.loc 1 1616 0
ARM GAS  /tmp/cc4FiPZj.s 			page 110


 1983 0064 8263     		str	r2, [r0, #56]
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1984              		.loc 1 1617 0
 1985 0066 8387     		strh	r3, [r0, #60]	@ movhi
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1986              		.loc 1 1618 0
 1987 0068 C387     		strh	r3, [r0, #62]	@ movhi
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 1988              		.loc 1 1621 0
 1989 006a C368     		ldr	r3, [r0, #12]
 1990              	.LVL142:
 1991 006c 9BB1     		cbz	r3, .L185
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 1992              		.loc 1 1623 0
 1993 006e 124B     		ldr	r3, .L197
 1994 0070 0364     		str	r3, [r0, #64]
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 1995              		.loc 1 1624 0
 1996 0072 124B     		ldr	r3, .L197+4
 1997 0074 4364     		str	r3, [r0, #68]
 1998              	.L186:
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 1999              		.loc 1 1641 0
 2000 0076 0268     		ldr	r2, [r0]
 2001              	.LVL143:
 2002 0078 5368     		ldr	r3, [r2, #4]
 2003 007a 43F0E003 		orr	r3, r3, #224
 2004 007e 5360     		str	r3, [r2, #4]
 2005              	.LVL144:
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2006              		.loc 1 1644 0
 2007 0080 0368     		ldr	r3, [r0]
 2008 0082 1A68     		ldr	r2, [r3]
 2009 0084 12F0400F 		tst	r2, #64
 2010 0088 12D1     		bne	.L194
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2011              		.loc 1 1647 0
 2012 008a 1A68     		ldr	r2, [r3]
 2013 008c 42F04002 		orr	r2, r2, #64
 2014 0090 1A60     		str	r2, [r3]
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2015              		.loc 1 1580 0
 2016 0092 0023     		movs	r3, #0
 2017 0094 C6E7     		b	.L183
 2018              	.LVL145:
 2019              	.L185:
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2020              		.loc 1 1628 0
 2021 0096 0A4B     		ldr	r3, .L197+8
 2022 0098 0364     		str	r3, [r0, #64]
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2023              		.loc 1 1629 0
 2024 009a 0A4B     		ldr	r3, .L197+12
 2025 009c 4364     		str	r3, [r0, #68]
 2026 009e EAE7     		b	.L186
 2027              	.LVL146:
 2028              	.L189:
ARM GAS  /tmp/cc4FiPZj.s 			page 111


1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2029              		.loc 1 1595 0
 2030 00a0 0223     		movs	r3, #2
 2031              	.LVL147:
 2032 00a2 BFE7     		b	.L183
 2033              	.LVL148:
 2034              	.L191:
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2035              		.loc 1 1601 0
 2036 00a4 0123     		movs	r3, #1
 2037              	.LVL149:
 2038 00a6 BDE7     		b	.L183
 2039              	.LVL150:
 2040              	.L192:
 2041 00a8 0123     		movs	r3, #1
 2042              	.LVL151:
 2043 00aa BBE7     		b	.L183
 2044              	.LVL152:
 2045              	.L193:
 2046 00ac 0123     		movs	r3, #1
 2047              	.LVL153:
 2048 00ae B9E7     		b	.L183
 2049              	.LVL154:
 2050              	.L194:
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2051              		.loc 1 1580 0
 2052 00b0 0023     		movs	r3, #0
 2053 00b2 B7E7     		b	.L183
 2054              	.LVL155:
 2055              	.L187:
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2056              		.loc 1 1586 0
 2057 00b4 0223     		movs	r3, #2
 2058              	.LVL156:
 2059 00b6 B8E7     		b	.L181
 2060              	.L198:
 2061              		.align	2
 2062              	.L197:
 2063 00b8 00000000 		.word	SPI_2linesRxISR_16BIT
 2064 00bc 00000000 		.word	SPI_2linesTxISR_16BIT
 2065 00c0 00000000 		.word	SPI_2linesRxISR_8BIT
 2066 00c4 00000000 		.word	SPI_2linesTxISR_8BIT
 2067              		.cfi_endproc
 2068              	.LFE74:
 2070              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2071              		.align	1
 2072              		.global	HAL_SPI_Receive_IT
 2073              		.syntax unified
 2074              		.thumb
 2075              		.thumb_func
 2076              		.fpu softvfp
 2078              	HAL_SPI_Receive_IT:
 2079              	.LFB73:
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2080              		.loc 1 1483 0
 2081              		.cfi_startproc
 2082              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc4FiPZj.s 			page 112


 2083              		@ frame_needed = 0, uses_anonymous_args = 0
 2084              	.LVL157:
 2085 0000 38B5     		push	{r3, r4, r5, lr}
 2086              	.LCFI31:
 2087              		.cfi_def_cfa_offset 16
 2088              		.cfi_offset 3, -16
 2089              		.cfi_offset 4, -12
 2090              		.cfi_offset 5, -8
 2091              		.cfi_offset 14, -4
 2092 0002 0446     		mov	r4, r0
 2093              	.LVL158:
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2094              		.loc 1 1486 0
 2095 0004 8568     		ldr	r5, [r0, #8]
 2096 0006 1DB9     		cbnz	r5, .L200
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2097              		.loc 1 1486 0 is_stmt 0 discriminator 1
 2098 0008 4368     		ldr	r3, [r0, #4]
 2099 000a B3F5827F 		cmp	r3, #260
 2100 000e 10D0     		beq	.L212
 2101              	.L200:
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2102              		.loc 1 1494 0 is_stmt 1
 2103 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2104              	.LVL159:
 2105 0014 0128     		cmp	r0, #1
 2106 0016 4FD0     		beq	.L206
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2107              		.loc 1 1494 0 is_stmt 0 discriminator 2
 2108 0018 0123     		movs	r3, #1
 2109 001a 84F85030 		strb	r3, [r4, #80]
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2110              		.loc 1 1496 0 is_stmt 1 discriminator 2
 2111 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2112 0022 C0B2     		uxtb	r0, r0
 2113 0024 9842     		cmp	r0, r3
 2114 0026 0CD0     		beq	.L213
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2115              		.loc 1 1498 0
 2116 0028 0220     		movs	r0, #2
 2117              	.LVL160:
 2118              	.L202:
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2119              		.loc 1 1563 0
 2120 002a 0023     		movs	r3, #0
 2121 002c 84F85030 		strb	r3, [r4, #80]
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2122              		.loc 1 1564 0
 2123 0030 38BD     		pop	{r3, r4, r5, pc}
 2124              	.LVL161:
 2125              	.L212:
 2126 0032 1346     		mov	r3, r2
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2127              		.loc 1 1488 0
 2128 0034 0422     		movs	r2, #4
 2129              	.LVL162:
 2130 0036 80F85120 		strb	r2, [r0, #81]
ARM GAS  /tmp/cc4FiPZj.s 			page 113


1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2131              		.loc 1 1490 0
 2132 003a 0A46     		mov	r2, r1
 2133 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2134              	.LVL163:
 2135 0040 38BD     		pop	{r3, r4, r5, pc}
 2136              	.LVL164:
 2137              	.L213:
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2138              		.loc 1 1502 0
 2139 0042 0029     		cmp	r1, #0
 2140 0044 32D0     		beq	.L208
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2141              		.loc 1 1502 0 is_stmt 0 discriminator 1
 2142 0046 002A     		cmp	r2, #0
 2143 0048 32D0     		beq	.L209
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2144              		.loc 1 1509 0 is_stmt 1
 2145 004a 0423     		movs	r3, #4
 2146 004c 84F85130 		strb	r3, [r4, #81]
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2147              		.loc 1 1510 0
 2148 0050 0023     		movs	r3, #0
 2149 0052 6365     		str	r3, [r4, #84]
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2150              		.loc 1 1511 0
 2151 0054 A163     		str	r1, [r4, #56]
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2152              		.loc 1 1512 0
 2153 0056 A287     		strh	r2, [r4, #60]	@ movhi
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2154              		.loc 1 1513 0
 2155 0058 E287     		strh	r2, [r4, #62]	@ movhi
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2156              		.loc 1 1516 0
 2157 005a 2363     		str	r3, [r4, #48]
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2158              		.loc 1 1517 0
 2159 005c A386     		strh	r3, [r4, #52]	@ movhi
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2160              		.loc 1 1518 0
 2161 005e E386     		strh	r3, [r4, #54]	@ movhi
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2162              		.loc 1 1519 0
 2163 0060 6364     		str	r3, [r4, #68]
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2164              		.loc 1 1522 0
 2165 0062 E368     		ldr	r3, [r4, #12]
 2166 0064 A3B1     		cbz	r3, .L203
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2167              		.loc 1 1524 0
 2168 0066 154B     		ldr	r3, .L215
 2169 0068 2364     		str	r3, [r4, #64]
 2170              	.L204:
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2171              		.loc 1 1532 0
 2172 006a B5F5004F 		cmp	r5, #32768
ARM GAS  /tmp/cc4FiPZj.s 			page 114


 2173 006e 12D0     		beq	.L214
 2174              	.LVL165:
 2175              	.L205:
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2176              		.loc 1 1548 0
 2177 0070 2268     		ldr	r2, [r4]
 2178 0072 5368     		ldr	r3, [r2, #4]
 2179 0074 43F06003 		orr	r3, r3, #96
 2180 0078 5360     		str	r3, [r2, #4]
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2181              		.loc 1 1555 0
 2182 007a 2368     		ldr	r3, [r4]
 2183 007c 1A68     		ldr	r2, [r3]
 2184 007e 12F0400F 		tst	r2, #64
 2185 0082 17D1     		bne	.L210
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2186              		.loc 1 1558 0
 2187 0084 1A68     		ldr	r2, [r3]
 2188 0086 42F04002 		orr	r2, r2, #64
 2189 008a 1A60     		str	r2, [r3]
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2190              		.loc 1 1484 0
 2191 008c 0020     		movs	r0, #0
 2192 008e CCE7     		b	.L202
 2193              	.LVL166:
 2194              	.L203:
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2195              		.loc 1 1528 0
 2196 0090 0B4B     		ldr	r3, .L215+4
 2197 0092 2364     		str	r3, [r4, #64]
 2198 0094 E9E7     		b	.L204
 2199              	.L214:
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2200              		.loc 1 1535 0
 2201 0096 2268     		ldr	r2, [r4]
 2202              	.LVL167:
 2203 0098 1368     		ldr	r3, [r2]
 2204 009a 23F04003 		bic	r3, r3, #64
 2205 009e 1360     		str	r3, [r2]
 2206              	.LVL168:
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2207              		.loc 1 1536 0
 2208 00a0 2268     		ldr	r2, [r4]
 2209 00a2 1368     		ldr	r3, [r2]
 2210 00a4 23F48043 		bic	r3, r3, #16384
 2211 00a8 1360     		str	r3, [r2]
 2212 00aa E1E7     		b	.L205
 2213              	.LVL169:
 2214              	.L208:
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2215              		.loc 1 1504 0
 2216 00ac 0120     		movs	r0, #1
 2217 00ae BCE7     		b	.L202
 2218              	.L209:
 2219 00b0 0120     		movs	r0, #1
 2220 00b2 BAE7     		b	.L202
 2221              	.LVL170:
ARM GAS  /tmp/cc4FiPZj.s 			page 115


 2222              	.L210:
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2223              		.loc 1 1484 0
 2224 00b4 0020     		movs	r0, #0
 2225 00b6 B8E7     		b	.L202
 2226              	.LVL171:
 2227              	.L206:
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2228              		.loc 1 1494 0
 2229 00b8 0220     		movs	r0, #2
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2230              		.loc 1 1565 0
 2231 00ba 38BD     		pop	{r3, r4, r5, pc}
 2232              	.LVL172:
 2233              	.L216:
 2234              		.align	2
 2235              	.L215:
 2236 00bc 00000000 		.word	SPI_RxISR_16BIT
 2237 00c0 00000000 		.word	SPI_RxISR_8BIT
 2238              		.cfi_endproc
 2239              	.LFE73:
 2241              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2242              		.align	1
 2243              		.global	HAL_SPI_Transmit_DMA
 2244              		.syntax unified
 2245              		.thumb
 2246              		.thumb_func
 2247              		.fpu softvfp
 2249              	HAL_SPI_Transmit_DMA:
 2250              	.LFB75:
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2251              		.loc 1 1665 0
 2252              		.cfi_startproc
 2253              		@ args = 0, pretend = 0, frame = 0
 2254              		@ frame_needed = 0, uses_anonymous_args = 0
 2255              	.LVL173:
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2256              		.loc 1 1675 0
 2257 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2258 0004 012B     		cmp	r3, #1
 2259 0006 65D0     		beq	.L223
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2260              		.loc 1 1665 0 discriminator 2
 2261 0008 10B5     		push	{r4, lr}
 2262              	.LCFI32:
 2263              		.cfi_def_cfa_offset 8
 2264              		.cfi_offset 4, -8
 2265              		.cfi_offset 14, -4
 2266 000a 0446     		mov	r4, r0
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2267              		.loc 1 1675 0 discriminator 2
 2268 000c 0123     		movs	r3, #1
 2269 000e 80F85030 		strb	r3, [r0, #80]
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2270              		.loc 1 1677 0 discriminator 2
 2271 0012 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 2272 0016 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc4FiPZj.s 			page 116


 2273 0018 012B     		cmp	r3, #1
 2274 001a 05D0     		beq	.L231
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2275              		.loc 1 1679 0
 2276 001c 0223     		movs	r3, #2
 2277              	.LVL174:
 2278              	.L219:
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2279              		.loc 1 1758 0
 2280 001e 0022     		movs	r2, #0
 2281 0020 84F85020 		strb	r2, [r4, #80]
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2282              		.loc 1 1760 0
 2283 0024 1846     		mov	r0, r3
 2284 0026 10BD     		pop	{r4, pc}
 2285              	.LVL175:
 2286              	.L231:
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2287              		.loc 1 1683 0
 2288 0028 0029     		cmp	r1, #0
 2289 002a 4FD0     		beq	.L225
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2290              		.loc 1 1683 0 is_stmt 0 discriminator 1
 2291 002c 002A     		cmp	r2, #0
 2292 002e 4FD0     		beq	.L226
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2293              		.loc 1 1690 0 is_stmt 1
 2294 0030 0323     		movs	r3, #3
 2295 0032 80F85130 		strb	r3, [r0, #81]
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2296              		.loc 1 1691 0
 2297 0036 0023     		movs	r3, #0
 2298 0038 4365     		str	r3, [r0, #84]
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2299              		.loc 1 1692 0
 2300 003a 0163     		str	r1, [r0, #48]
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2301              		.loc 1 1693 0
 2302 003c 8286     		strh	r2, [r0, #52]	@ movhi
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2303              		.loc 1 1694 0
 2304 003e C286     		strh	r2, [r0, #54]	@ movhi
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2305              		.loc 1 1697 0
 2306 0040 8363     		str	r3, [r0, #56]
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2307              		.loc 1 1698 0
 2308 0042 4364     		str	r3, [r0, #68]
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2309              		.loc 1 1699 0
 2310 0044 0364     		str	r3, [r0, #64]
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2311              		.loc 1 1700 0
 2312 0046 8387     		strh	r3, [r0, #60]	@ movhi
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2313              		.loc 1 1701 0
 2314 0048 C387     		strh	r3, [r0, #62]	@ movhi
ARM GAS  /tmp/cc4FiPZj.s 			page 117


1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2315              		.loc 1 1704 0
 2316 004a 8368     		ldr	r3, [r0, #8]
 2317 004c B3F5004F 		cmp	r3, #32768
 2318 0050 1DD0     		beq	.L232
 2319              	.LVL176:
 2320              	.L220:
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2321              		.loc 1 1720 0
 2322 0052 A36C     		ldr	r3, [r4, #72]
 2323 0054 214A     		ldr	r2, .L233
 2324 0056 DA62     		str	r2, [r3, #44]
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2325              		.loc 1 1723 0
 2326 0058 A36C     		ldr	r3, [r4, #72]
 2327 005a 214A     		ldr	r2, .L233+4
 2328 005c 9A62     		str	r2, [r3, #40]
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2329              		.loc 1 1726 0
 2330 005e A36C     		ldr	r3, [r4, #72]
 2331 0060 204A     		ldr	r2, .L233+8
 2332 0062 1A63     		str	r2, [r3, #48]
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2333              		.loc 1 1729 0
 2334 0064 A36C     		ldr	r3, [r4, #72]
 2335 0066 0022     		movs	r2, #0
 2336 0068 5A63     		str	r2, [r3, #52]
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2337              		.loc 1 1732 0
 2338 006a 2268     		ldr	r2, [r4]
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2339              		.loc 1 1733 0
 2340 006c E38E     		ldrh	r3, [r4, #54]
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2341              		.loc 1 1732 0
 2342 006e 9BB2     		uxth	r3, r3
 2343 0070 0C32     		adds	r2, r2, #12
 2344 0072 216B     		ldr	r1, [r4, #48]
 2345              	.LVL177:
 2346 0074 A06C     		ldr	r0, [r4, #72]
 2347              	.LVL178:
 2348 0076 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2349              	.LVL179:
 2350 007a 0346     		mov	r3, r0
 2351 007c 90B1     		cbz	r0, .L221
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2352              		.loc 1 1736 0
 2353 007e 636D     		ldr	r3, [r4, #84]
 2354 0080 43F01003 		orr	r3, r3, #16
 2355 0084 6365     		str	r3, [r4, #84]
 2356              	.LVL180:
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2357              		.loc 1 1739 0
 2358 0086 0123     		movs	r3, #1
 2359 0088 84F85130 		strb	r3, [r4, #81]
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2360              		.loc 1 1740 0
ARM GAS  /tmp/cc4FiPZj.s 			page 118


 2361 008c C7E7     		b	.L219
 2362              	.LVL181:
 2363              	.L232:
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 2364              		.loc 1 1707 0
 2365 008e 0268     		ldr	r2, [r0]
 2366              	.LVL182:
 2367 0090 1368     		ldr	r3, [r2]
 2368 0092 23F04003 		bic	r3, r3, #64
 2369 0096 1360     		str	r3, [r2]
 2370              	.LVL183:
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2371              		.loc 1 1708 0
 2372 0098 0268     		ldr	r2, [r0]
 2373 009a 1368     		ldr	r3, [r2]
 2374 009c 43F48043 		orr	r3, r3, #16384
 2375 00a0 1360     		str	r3, [r2]
 2376 00a2 D6E7     		b	.L220
 2377              	.LVL184:
 2378              	.L221:
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2379              		.loc 1 1744 0
 2380 00a4 2268     		ldr	r2, [r4]
 2381 00a6 1168     		ldr	r1, [r2]
 2382 00a8 11F0400F 		tst	r1, #64
 2383 00ac 03D1     		bne	.L222
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2384              		.loc 1 1747 0
 2385 00ae 1168     		ldr	r1, [r2]
 2386 00b0 41F04001 		orr	r1, r1, #64
 2387 00b4 1160     		str	r1, [r2]
 2388              	.L222:
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2389              		.loc 1 1751 0
 2390 00b6 2168     		ldr	r1, [r4]
 2391 00b8 4A68     		ldr	r2, [r1, #4]
 2392 00ba 42F02002 		orr	r2, r2, #32
 2393 00be 4A60     		str	r2, [r1, #4]
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2394              		.loc 1 1754 0
 2395 00c0 2168     		ldr	r1, [r4]
 2396 00c2 4A68     		ldr	r2, [r1, #4]
 2397 00c4 42F00202 		orr	r2, r2, #2
 2398 00c8 4A60     		str	r2, [r1, #4]
 2399 00ca A8E7     		b	.L219
 2400              	.LVL185:
 2401              	.L225:
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2402              		.loc 1 1685 0
 2403 00cc 0123     		movs	r3, #1
 2404 00ce A6E7     		b	.L219
 2405              	.L226:
 2406 00d0 0123     		movs	r3, #1
 2407 00d2 A4E7     		b	.L219
 2408              	.L223:
 2409              	.LCFI33:
 2410              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cc4FiPZj.s 			page 119


 2411              		.cfi_restore 4
 2412              		.cfi_restore 14
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2413              		.loc 1 1675 0
 2414 00d4 0223     		movs	r3, #2
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2415              		.loc 1 1760 0
 2416 00d6 1846     		mov	r0, r3
 2417              	.LVL186:
 2418 00d8 7047     		bx	lr
 2419              	.L234:
 2420 00da 00BF     		.align	2
 2421              	.L233:
 2422 00dc 00000000 		.word	SPI_DMAHalfTransmitCplt
 2423 00e0 00000000 		.word	SPI_DMATransmitCplt
 2424 00e4 00000000 		.word	SPI_DMAError
 2425              		.cfi_endproc
 2426              	.LFE75:
 2428              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2429              		.align	1
 2430              		.global	HAL_SPI_TransmitReceive_DMA
 2431              		.syntax unified
 2432              		.thumb
 2433              		.thumb_func
 2434              		.fpu softvfp
 2436              	HAL_SPI_TransmitReceive_DMA:
 2437              	.LFB77:
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
 2438              		.loc 1 1889 0
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 0
 2441              		@ frame_needed = 0, uses_anonymous_args = 0
 2442              	.LVL187:
 2443 0000 38B5     		push	{r3, r4, r5, lr}
 2444              	.LCFI34:
 2445              		.cfi_def_cfa_offset 16
 2446              		.cfi_offset 3, -16
 2447              		.cfi_offset 4, -12
 2448              		.cfi_offset 5, -8
 2449              		.cfi_offset 14, -4
 2450              	.LVL188:
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2451              		.loc 1 1902 0
 2452 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 2453 0006 012C     		cmp	r4, #1
 2454 0008 00F09780 		beq	.L245
 2455 000c 0446     		mov	r4, r0
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2456              		.loc 1 1902 0 is_stmt 0 discriminator 2
 2457 000e 0120     		movs	r0, #1
 2458              	.LVL189:
 2459 0010 84F85000 		strb	r0, [r4, #80]
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2460              		.loc 1 1905 0 is_stmt 1 discriminator 2
 2461 0014 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2462 0018 C0B2     		uxtb	r0, r0
 2463              	.LVL190:
ARM GAS  /tmp/cc4FiPZj.s 			page 120


1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2464              		.loc 1 1906 0 discriminator 2
 2465 001a 6568     		ldr	r5, [r4, #4]
 2466              	.LVL191:
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2467              		.loc 1 1908 0 discriminator 2
 2468 001c 0128     		cmp	r0, #1
 2469 001e 0FD0     		beq	.L237
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2470              		.loc 1 1908 0 is_stmt 0 discriminator 1
 2471 0020 B5F5827F 		cmp	r5, #260
 2472 0024 05D0     		beq	.L253
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2473              		.loc 1 1911 0 is_stmt 1
 2474 0026 0223     		movs	r3, #2
 2475              	.LVL192:
 2476              	.L238:
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2477              		.loc 1 2016 0
 2478 0028 0022     		movs	r2, #0
 2479 002a 84F85020 		strb	r2, [r4, #80]
 2480              	.LVL193:
 2481              	.L236:
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2482              		.loc 1 2018 0
 2483 002e 1846     		mov	r0, r3
 2484 0030 38BD     		pop	{r3, r4, r5, pc}
 2485              	.LVL194:
 2486              	.L253:
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2487              		.loc 1 1909 0
 2488 0032 A568     		ldr	r5, [r4, #8]
 2489              	.LVL195:
 2490 0034 002D     		cmp	r5, #0
 2491 0036 78D1     		bne	.L247
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2492              		.loc 1 1909 0 is_stmt 0 discriminator 1
 2493 0038 0428     		cmp	r0, #4
 2494 003a 01D0     		beq	.L237
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2495              		.loc 1 1911 0 is_stmt 1
 2496 003c 0223     		movs	r3, #2
 2497              	.LVL196:
 2498 003e F3E7     		b	.L238
 2499              	.LVL197:
 2500              	.L237:
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2501              		.loc 1 1915 0
 2502 0040 0029     		cmp	r1, #0
 2503 0042 74D0     		beq	.L249
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2504              		.loc 1 1915 0 is_stmt 0 discriminator 1
 2505 0044 002A     		cmp	r2, #0
 2506 0046 74D0     		beq	.L250
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2507              		.loc 1 1915 0 discriminator 2
 2508 0048 002B     		cmp	r3, #0
ARM GAS  /tmp/cc4FiPZj.s 			page 121


 2509 004a 74D0     		beq	.L251
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2510              		.loc 1 1922 0 is_stmt 1
 2511 004c 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2512              	.LVL198:
 2513 0050 C0B2     		uxtb	r0, r0
 2514 0052 0428     		cmp	r0, #4
 2515 0054 02D0     		beq	.L239
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2516              		.loc 1 1924 0
 2517 0056 0520     		movs	r0, #5
 2518 0058 84F85100 		strb	r0, [r4, #81]
 2519              	.L239:
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2520              		.loc 1 1928 0
 2521 005c 0020     		movs	r0, #0
 2522 005e 6065     		str	r0, [r4, #84]
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2523              		.loc 1 1929 0
 2524 0060 2163     		str	r1, [r4, #48]
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2525              		.loc 1 1930 0
 2526 0062 A386     		strh	r3, [r4, #52]	@ movhi
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2527              		.loc 1 1931 0
 2528 0064 E386     		strh	r3, [r4, #54]	@ movhi
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2529              		.loc 1 1932 0
 2530 0066 A263     		str	r2, [r4, #56]
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2531              		.loc 1 1933 0
 2532 0068 A387     		strh	r3, [r4, #60]	@ movhi
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2533              		.loc 1 1934 0
 2534 006a E387     		strh	r3, [r4, #62]	@ movhi
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2535              		.loc 1 1937 0
 2536 006c 2064     		str	r0, [r4, #64]
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2537              		.loc 1 1938 0
 2538 006e 6064     		str	r0, [r4, #68]
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2539              		.loc 1 1949 0
 2540 0070 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2541              	.LVL199:
 2542 0074 DBB2     		uxtb	r3, r3
 2543 0076 042B     		cmp	r3, #4
 2544 0078 1CD0     		beq	.L254
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 2545              		.loc 1 1958 0
 2546 007a E36C     		ldr	r3, [r4, #76]
 2547 007c 304A     		ldr	r2, .L255
 2548              	.LVL200:
 2549 007e DA62     		str	r2, [r3, #44]
 2550              	.LVL201:
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2551              		.loc 1 1959 0
ARM GAS  /tmp/cc4FiPZj.s 			page 122


 2552 0080 E36C     		ldr	r3, [r4, #76]
 2553 0082 304A     		ldr	r2, .L255+4
 2554 0084 9A62     		str	r2, [r3, #40]
 2555              	.L241:
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2556              		.loc 1 1963 0
 2557 0086 E36C     		ldr	r3, [r4, #76]
 2558 0088 2F4A     		ldr	r2, .L255+8
 2559 008a 1A63     		str	r2, [r3, #48]
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2560              		.loc 1 1966 0
 2561 008c E36C     		ldr	r3, [r4, #76]
 2562 008e 0022     		movs	r2, #0
 2563 0090 5A63     		str	r2, [r3, #52]
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2564              		.loc 1 1969 0
 2565 0092 2168     		ldr	r1, [r4]
 2566              	.LVL202:
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2567              		.loc 1 1970 0
 2568 0094 E38F     		ldrh	r3, [r4, #62]
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2569              		.loc 1 1969 0
 2570 0096 9BB2     		uxth	r3, r3
 2571 0098 A26B     		ldr	r2, [r4, #56]
 2572 009a 0C31     		adds	r1, r1, #12
 2573 009c E06C     		ldr	r0, [r4, #76]
 2574 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 2575              	.LVL203:
 2576 00a2 70B1     		cbz	r0, .L242
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2577              		.loc 1 1973 0
 2578 00a4 636D     		ldr	r3, [r4, #84]
 2579 00a6 43F01003 		orr	r3, r3, #16
 2580 00aa 6365     		str	r3, [r4, #84]
 2581              	.LVL204:
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2582              		.loc 1 1976 0
 2583 00ac 0123     		movs	r3, #1
 2584 00ae 84F85130 		strb	r3, [r4, #81]
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2585              		.loc 1 1977 0
 2586 00b2 B9E7     		b	.L238
 2587              	.LVL205:
 2588              	.L254:
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 2589              		.loc 1 1952 0
 2590 00b4 E36C     		ldr	r3, [r4, #76]
 2591 00b6 254A     		ldr	r2, .L255+12
 2592              	.LVL206:
 2593 00b8 DA62     		str	r2, [r3, #44]
 2594              	.LVL207:
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2595              		.loc 1 1953 0
 2596 00ba E36C     		ldr	r3, [r4, #76]
 2597 00bc 244A     		ldr	r2, .L255+16
 2598 00be 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/cc4FiPZj.s 			page 123


 2599 00c0 E1E7     		b	.L241
 2600              	.LVL208:
 2601              	.L242:
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2602              		.loc 1 1981 0
 2603 00c2 2268     		ldr	r2, [r4]
 2604 00c4 5368     		ldr	r3, [r2, #4]
 2605 00c6 43F00103 		orr	r3, r3, #1
 2606 00ca 5360     		str	r3, [r2, #4]
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 2607              		.loc 1 1985 0
 2608 00cc A26C     		ldr	r2, [r4, #72]
 2609 00ce 0023     		movs	r3, #0
 2610 00d0 D362     		str	r3, [r2, #44]
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 2611              		.loc 1 1986 0
 2612 00d2 A26C     		ldr	r2, [r4, #72]
 2613 00d4 9362     		str	r3, [r2, #40]
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 2614              		.loc 1 1987 0
 2615 00d6 A26C     		ldr	r2, [r4, #72]
 2616 00d8 1363     		str	r3, [r2, #48]
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2617              		.loc 1 1988 0
 2618 00da A26C     		ldr	r2, [r4, #72]
 2619 00dc 5363     		str	r3, [r2, #52]
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2620              		.loc 1 1991 0
 2621 00de 2268     		ldr	r2, [r4]
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2622              		.loc 1 1992 0
 2623 00e0 E38E     		ldrh	r3, [r4, #54]
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2624              		.loc 1 1991 0
 2625 00e2 9BB2     		uxth	r3, r3
 2626 00e4 0C32     		adds	r2, r2, #12
 2627 00e6 216B     		ldr	r1, [r4, #48]
 2628 00e8 A06C     		ldr	r0, [r4, #72]
 2629 00ea FFF7FEFF 		bl	HAL_DMA_Start_IT
 2630              	.LVL209:
 2631 00ee 0346     		mov	r3, r0
 2632 00f0 38B1     		cbz	r0, .L243
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2633              		.loc 1 1995 0
 2634 00f2 636D     		ldr	r3, [r4, #84]
 2635 00f4 43F01003 		orr	r3, r3, #16
 2636 00f8 6365     		str	r3, [r4, #84]
 2637              	.LVL210:
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2638              		.loc 1 1998 0
 2639 00fa 0123     		movs	r3, #1
 2640 00fc 84F85130 		strb	r3, [r4, #81]
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2641              		.loc 1 1999 0
 2642 0100 92E7     		b	.L238
 2643              	.LVL211:
 2644              	.L243:
ARM GAS  /tmp/cc4FiPZj.s 			page 124


2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2645              		.loc 1 2003 0
 2646 0102 2268     		ldr	r2, [r4]
 2647 0104 1168     		ldr	r1, [r2]
 2648 0106 11F0400F 		tst	r1, #64
 2649 010a 03D1     		bne	.L244
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2650              		.loc 1 2006 0
 2651 010c 1168     		ldr	r1, [r2]
 2652 010e 41F04001 		orr	r1, r1, #64
 2653 0112 1160     		str	r1, [r2]
 2654              	.L244:
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2655              		.loc 1 2009 0
 2656 0114 2168     		ldr	r1, [r4]
 2657 0116 4A68     		ldr	r2, [r1, #4]
 2658 0118 42F02002 		orr	r2, r2, #32
 2659 011c 4A60     		str	r2, [r1, #4]
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2660              		.loc 1 2012 0
 2661 011e 2168     		ldr	r1, [r4]
 2662 0120 4A68     		ldr	r2, [r1, #4]
 2663 0122 42F00202 		orr	r2, r2, #2
 2664 0126 4A60     		str	r2, [r1, #4]
 2665 0128 7EE7     		b	.L238
 2666              	.LVL212:
 2667              	.L247:
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2668              		.loc 1 1911 0
 2669 012a 0223     		movs	r3, #2
 2670              	.LVL213:
 2671 012c 7CE7     		b	.L238
 2672              	.LVL214:
 2673              	.L249:
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2674              		.loc 1 1917 0
 2675 012e 0123     		movs	r3, #1
 2676              	.LVL215:
 2677 0130 7AE7     		b	.L238
 2678              	.LVL216:
 2679              	.L250:
 2680 0132 0123     		movs	r3, #1
 2681              	.LVL217:
 2682 0134 78E7     		b	.L238
 2683              	.LVL218:
 2684              	.L251:
 2685 0136 0123     		movs	r3, #1
 2686              	.LVL219:
 2687 0138 76E7     		b	.L238
 2688              	.LVL220:
 2689              	.L245:
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2690              		.loc 1 1902 0
 2691 013a 0223     		movs	r3, #2
 2692              	.LVL221:
 2693 013c 77E7     		b	.L236
 2694              	.L256:
ARM GAS  /tmp/cc4FiPZj.s 			page 125


 2695 013e 00BF     		.align	2
 2696              	.L255:
 2697 0140 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 2698 0144 00000000 		.word	SPI_DMATransmitReceiveCplt
 2699 0148 00000000 		.word	SPI_DMAError
 2700 014c 00000000 		.word	SPI_DMAHalfReceiveCplt
 2701 0150 00000000 		.word	SPI_DMAReceiveCplt
 2702              		.cfi_endproc
 2703              	.LFE77:
 2705              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2706              		.align	1
 2707              		.global	HAL_SPI_Receive_DMA
 2708              		.syntax unified
 2709              		.thumb
 2710              		.thumb_func
 2711              		.fpu softvfp
 2713              	HAL_SPI_Receive_DMA:
 2714              	.LFB76:
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2715              		.loc 1 1773 0
 2716              		.cfi_startproc
 2717              		@ args = 0, pretend = 0, frame = 0
 2718              		@ frame_needed = 0, uses_anonymous_args = 0
 2719              	.LVL222:
 2720 0000 38B5     		push	{r3, r4, r5, lr}
 2721              	.LCFI35:
 2722              		.cfi_def_cfa_offset 16
 2723              		.cfi_offset 3, -16
 2724              		.cfi_offset 4, -12
 2725              		.cfi_offset 5, -8
 2726              		.cfi_offset 14, -4
 2727 0002 0446     		mov	r4, r0
 2728              	.LVL223:
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2729              		.loc 1 1779 0
 2730 0004 8568     		ldr	r5, [r0, #8]
 2731 0006 1DB9     		cbnz	r5, .L258
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2732              		.loc 1 1779 0 is_stmt 0 discriminator 1
 2733 0008 4368     		ldr	r3, [r0, #4]
 2734 000a B3F5827F 		cmp	r3, #260
 2735 000e 11D0     		beq	.L269
 2736              	.L258:
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2737              		.loc 1 1791 0 is_stmt 1
 2738 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2739              	.LVL224:
 2740 0014 0128     		cmp	r0, #1
 2741 0016 6AD0     		beq	.L264
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2742              		.loc 1 1791 0 is_stmt 0 discriminator 2
 2743 0018 0123     		movs	r3, #1
 2744 001a 84F85030 		strb	r3, [r4, #80]
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2745              		.loc 1 1793 0 is_stmt 1 discriminator 2
 2746 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2747 0022 C0B2     		uxtb	r0, r0
ARM GAS  /tmp/cc4FiPZj.s 			page 126


 2748 0024 9842     		cmp	r0, r3
 2749 0026 0ED0     		beq	.L270
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2750              		.loc 1 1795 0
 2751 0028 0223     		movs	r3, #2
 2752              	.LVL225:
 2753              	.L260:
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 2754              		.loc 1 1873 0
 2755 002a 0022     		movs	r2, #0
 2756 002c 84F85020 		strb	r2, [r4, #80]
 2757              	.LVL226:
 2758              	.L259:
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2759              		.loc 1 1875 0
 2760 0030 1846     		mov	r0, r3
 2761 0032 38BD     		pop	{r3, r4, r5, pc}
 2762              	.LVL227:
 2763              	.L269:
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2764              		.loc 1 1781 0
 2765 0034 0423     		movs	r3, #4
 2766 0036 80F85130 		strb	r3, [r0, #81]
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2767              		.loc 1 1787 0
 2768 003a 1346     		mov	r3, r2
 2769 003c 0A46     		mov	r2, r1
 2770              	.LVL228:
 2771 003e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2772              	.LVL229:
 2773 0042 0346     		mov	r3, r0
 2774 0044 F4E7     		b	.L259
 2775              	.LVL230:
 2776              	.L270:
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2777              		.loc 1 1799 0
 2778 0046 0029     		cmp	r1, #0
 2779 0048 4DD0     		beq	.L266
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2780              		.loc 1 1799 0 is_stmt 0 discriminator 1
 2781 004a 002A     		cmp	r2, #0
 2782 004c 4DD0     		beq	.L267
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2783              		.loc 1 1806 0 is_stmt 1
 2784 004e 0423     		movs	r3, #4
 2785 0050 84F85130 		strb	r3, [r4, #81]
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2786              		.loc 1 1807 0
 2787 0054 0023     		movs	r3, #0
 2788 0056 6365     		str	r3, [r4, #84]
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2789              		.loc 1 1808 0
 2790 0058 A163     		str	r1, [r4, #56]
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2791              		.loc 1 1809 0
 2792 005a A287     		strh	r2, [r4, #60]	@ movhi
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 127


 2793              		.loc 1 1810 0
 2794 005c E287     		strh	r2, [r4, #62]	@ movhi
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2795              		.loc 1 1813 0
 2796 005e 2364     		str	r3, [r4, #64]
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2797              		.loc 1 1814 0
 2798 0060 6364     		str	r3, [r4, #68]
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2799              		.loc 1 1815 0
 2800 0062 A386     		strh	r3, [r4, #52]	@ movhi
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2801              		.loc 1 1816 0
 2802 0064 E386     		strh	r3, [r4, #54]	@ movhi
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2803              		.loc 1 1819 0
 2804 0066 B5F5004F 		cmp	r5, #32768
 2805 006a 1DD0     		beq	.L271
 2806              	.LVL231:
 2807              	.L261:
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2808              		.loc 1 1835 0
 2809 006c E36C     		ldr	r3, [r4, #76]
 2810 006e 214A     		ldr	r2, .L272
 2811 0070 DA62     		str	r2, [r3, #44]
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2812              		.loc 1 1838 0
 2813 0072 E36C     		ldr	r3, [r4, #76]
 2814 0074 204A     		ldr	r2, .L272+4
 2815 0076 9A62     		str	r2, [r3, #40]
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2816              		.loc 1 1841 0
 2817 0078 E36C     		ldr	r3, [r4, #76]
 2818 007a 204A     		ldr	r2, .L272+8
 2819 007c 1A63     		str	r2, [r3, #48]
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2820              		.loc 1 1844 0
 2821 007e E36C     		ldr	r3, [r4, #76]
 2822 0080 0022     		movs	r2, #0
 2823 0082 5A63     		str	r2, [r3, #52]
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2824              		.loc 1 1847 0
 2825 0084 2168     		ldr	r1, [r4]
 2826              	.LVL232:
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2827              		.loc 1 1848 0
 2828 0086 E38F     		ldrh	r3, [r4, #62]
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2829              		.loc 1 1847 0
 2830 0088 9BB2     		uxth	r3, r3
 2831 008a A26B     		ldr	r2, [r4, #56]
 2832 008c 0C31     		adds	r1, r1, #12
 2833 008e E06C     		ldr	r0, [r4, #76]
 2834 0090 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2835              	.LVL233:
 2836 0094 0346     		mov	r3, r0
 2837 0096 90B1     		cbz	r0, .L262
ARM GAS  /tmp/cc4FiPZj.s 			page 128


1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2838              		.loc 1 1851 0
 2839 0098 636D     		ldr	r3, [r4, #84]
 2840 009a 43F01003 		orr	r3, r3, #16
 2841 009e 6365     		str	r3, [r4, #84]
 2842              	.LVL234:
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2843              		.loc 1 1854 0
 2844 00a0 0123     		movs	r3, #1
 2845 00a2 84F85130 		strb	r3, [r4, #81]
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2846              		.loc 1 1855 0
 2847 00a6 C0E7     		b	.L260
 2848              	.LVL235:
 2849              	.L271:
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2850              		.loc 1 1822 0
 2851 00a8 2268     		ldr	r2, [r4]
 2852              	.LVL236:
 2853 00aa 1368     		ldr	r3, [r2]
 2854 00ac 23F04003 		bic	r3, r3, #64
 2855 00b0 1360     		str	r3, [r2]
 2856              	.LVL237:
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2857              		.loc 1 1823 0
 2858 00b2 2268     		ldr	r2, [r4]
 2859 00b4 1368     		ldr	r3, [r2]
 2860 00b6 23F48043 		bic	r3, r3, #16384
 2861 00ba 1360     		str	r3, [r2]
 2862 00bc D6E7     		b	.L261
 2863              	.LVL238:
 2864              	.L262:
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2865              		.loc 1 1859 0
 2866 00be 2268     		ldr	r2, [r4]
 2867 00c0 1168     		ldr	r1, [r2]
 2868 00c2 11F0400F 		tst	r1, #64
 2869 00c6 03D1     		bne	.L263
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2870              		.loc 1 1862 0
 2871 00c8 1168     		ldr	r1, [r2]
 2872 00ca 41F04001 		orr	r1, r1, #64
 2873 00ce 1160     		str	r1, [r2]
 2874              	.L263:
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2875              		.loc 1 1866 0
 2876 00d0 2168     		ldr	r1, [r4]
 2877 00d2 4A68     		ldr	r2, [r1, #4]
 2878 00d4 42F02002 		orr	r2, r2, #32
 2879 00d8 4A60     		str	r2, [r1, #4]
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2880              		.loc 1 1869 0
 2881 00da 2168     		ldr	r1, [r4]
 2882 00dc 4A68     		ldr	r2, [r1, #4]
 2883 00de 42F00102 		orr	r2, r2, #1
 2884 00e2 4A60     		str	r2, [r1, #4]
 2885 00e4 A1E7     		b	.L260
ARM GAS  /tmp/cc4FiPZj.s 			page 129


 2886              	.LVL239:
 2887              	.L266:
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     goto error;
 2888              		.loc 1 1801 0
 2889 00e6 0123     		movs	r3, #1
 2890 00e8 9FE7     		b	.L260
 2891              	.L267:
 2892 00ea 0123     		movs	r3, #1
 2893 00ec 9DE7     		b	.L260
 2894              	.L264:
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2895              		.loc 1 1791 0
 2896 00ee 0223     		movs	r3, #2
 2897 00f0 9EE7     		b	.L259
 2898              	.L273:
 2899 00f2 00BF     		.align	2
 2900              	.L272:
 2901 00f4 00000000 		.word	SPI_DMAHalfReceiveCplt
 2902 00f8 00000000 		.word	SPI_DMAReceiveCplt
 2903 00fc 00000000 		.word	SPI_DMAError
 2904              		.cfi_endproc
 2905              	.LFE76:
 2907              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 2908              		.align	1
 2909              		.global	HAL_SPI_Abort
 2910              		.syntax unified
 2911              		.thumb
 2912              		.thumb_func
 2913              		.fpu softvfp
 2915              	HAL_SPI_Abort:
 2916              	.LFB78:
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 2917              		.loc 1 2034 0
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 16
 2920              		@ frame_needed = 0, uses_anonymous_args = 0
 2921              	.LVL240:
 2922 0000 10B5     		push	{r4, lr}
 2923              	.LCFI36:
 2924              		.cfi_def_cfa_offset 8
 2925              		.cfi_offset 4, -8
 2926              		.cfi_offset 14, -4
 2927 0002 84B0     		sub	sp, sp, #16
 2928              	.LCFI37:
 2929              		.cfi_def_cfa_offset 24
 2930 0004 0446     		mov	r4, r0
 2931              	.LVL241:
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
 2932              		.loc 1 2041 0
 2933 0006 494B     		ldr	r3, .L295
 2934 0008 1B68     		ldr	r3, [r3]
 2935 000a 494A     		ldr	r2, .L295+4
 2936 000c A2FB0323 		umull	r2, r3, r2, r3
 2937 0010 5B0A     		lsrs	r3, r3, #9
 2938 0012 6422     		movs	r2, #100
 2939 0014 02FB03F3 		mul	r3, r2, r3
 2940 0018 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/cc4FiPZj.s 			page 130


2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2941              		.loc 1 2042 0
 2942 001a 029B     		ldr	r3, [sp, #8]
 2943 001c 0393     		str	r3, [sp, #12]
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 2944              		.loc 1 2045 0
 2945 001e 0268     		ldr	r2, [r0]
 2946 0020 5368     		ldr	r3, [r2, #4]
 2947 0022 23F02003 		bic	r3, r3, #32
 2948 0026 5360     		str	r3, [r2, #4]
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2949              		.loc 1 2048 0
 2950 0028 0268     		ldr	r2, [r0]
 2951 002a 5368     		ldr	r3, [r2, #4]
 2952 002c 13F0800F 		tst	r3, #128
 2953 0030 12D0     		beq	.L275
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 2954              		.loc 1 2050 0
 2955 0032 404B     		ldr	r3, .L295+8
 2956 0034 4364     		str	r3, [r0, #68]
 2957              	.L278:
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 2958              		.loc 1 2054 0
 2959 0036 039B     		ldr	r3, [sp, #12]
 2960 0038 43B1     		cbz	r3, .L292
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 2961              		.loc 1 2059 0
 2962 003a 039B     		ldr	r3, [sp, #12]
 2963 003c 013B     		subs	r3, r3, #1
 2964 003e 0393     		str	r3, [sp, #12]
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
 2965              		.loc 1 2060 0
 2966 0040 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2967 0044 DBB2     		uxtb	r3, r3
 2968 0046 072B     		cmp	r3, #7
 2969 0048 F5D1     		bne	.L278
 2970 004a 03E0     		b	.L277
 2971              	.L292:
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 2972              		.loc 1 2056 0
 2973 004c 636D     		ldr	r3, [r4, #84]
 2974 004e 43F04003 		orr	r3, r3, #64
 2975 0052 6365     		str	r3, [r4, #84]
 2976              	.L277:
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 2977              		.loc 1 2062 0
 2978 0054 029B     		ldr	r3, [sp, #8]
 2979 0056 0393     		str	r3, [sp, #12]
 2980              	.L275:
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 2981              		.loc 1 2065 0
 2982 0058 5368     		ldr	r3, [r2, #4]
 2983 005a 13F0400F 		tst	r3, #64
 2984 005e 12D0     		beq	.L279
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 2985              		.loc 1 2067 0
 2986 0060 354B     		ldr	r3, .L295+12
ARM GAS  /tmp/cc4FiPZj.s 			page 131


 2987 0062 2364     		str	r3, [r4, #64]
 2988              	.L282:
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 2989              		.loc 1 2071 0
 2990 0064 039B     		ldr	r3, [sp, #12]
 2991 0066 43B1     		cbz	r3, .L293
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 2992              		.loc 1 2076 0
 2993 0068 039B     		ldr	r3, [sp, #12]
 2994 006a 013B     		subs	r3, r3, #1
 2995 006c 0393     		str	r3, [sp, #12]
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
 2996              		.loc 1 2077 0
 2997 006e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2998 0072 DBB2     		uxtb	r3, r3
 2999 0074 072B     		cmp	r3, #7
 3000 0076 F5D1     		bne	.L282
 3001 0078 03E0     		b	.L281
 3002              	.L293:
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 3003              		.loc 1 2073 0
 3004 007a 636D     		ldr	r3, [r4, #84]
 3005 007c 43F04003 		orr	r3, r3, #64
 3006 0080 6365     		str	r3, [r4, #84]
 3007              	.L281:
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3008              		.loc 1 2079 0
 3009 0082 029B     		ldr	r3, [sp, #8]
 3010 0084 0393     		str	r3, [sp, #12]
 3011              	.L279:
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3012              		.loc 1 2083 0
 3013 0086 5368     		ldr	r3, [r2, #4]
 3014 0088 13F0020F 		tst	r3, #2
 3015 008c 1DD0     		beq	.L283
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3016              		.loc 1 2086 0
 3017 008e A36C     		ldr	r3, [r4, #72]
 3018 0090 DBB1     		cbz	r3, .L283
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3019              		.loc 1 2090 0
 3020 0092 0022     		movs	r2, #0
 3021 0094 5A63     		str	r2, [r3, #52]
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 3022              		.loc 1 2093 0
 3023 0096 A06C     		ldr	r0, [r4, #72]
 3024              	.LVL242:
 3025 0098 FFF7FEFF 		bl	HAL_DMA_Abort
 3026              	.LVL243:
 3027 009c 08B1     		cbz	r0, .L284
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 3028              		.loc 1 2095 0
 3029 009e 4023     		movs	r3, #64
 3030 00a0 6365     		str	r3, [r4, #84]
 3031              	.L284:
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3032              		.loc 1 2099 0
ARM GAS  /tmp/cc4FiPZj.s 			page 132


 3033 00a2 2268     		ldr	r2, [r4]
 3034 00a4 5368     		ldr	r3, [r2, #4]
 3035 00a6 23F00203 		bic	r3, r3, #2
 3036 00aa 5360     		str	r3, [r2, #4]
 3037              	.L286:
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 3038              		.loc 1 2104 0
 3039 00ac 039B     		ldr	r3, [sp, #12]
 3040 00ae 43B1     		cbz	r3, .L294
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3041              		.loc 1 2109 0
 3042 00b0 039B     		ldr	r3, [sp, #12]
 3043 00b2 013B     		subs	r3, r3, #1
 3044 00b4 0393     		str	r3, [sp, #12]
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3045              		.loc 1 2110 0
 3046 00b6 2368     		ldr	r3, [r4]
 3047 00b8 9B68     		ldr	r3, [r3, #8]
 3048 00ba 13F0020F 		tst	r3, #2
 3049 00be F5D0     		beq	.L286
 3050 00c0 03E0     		b	.L283
 3051              	.L294:
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           break;
 3052              		.loc 1 2106 0
 3053 00c2 636D     		ldr	r3, [r4, #84]
 3054 00c4 43F04003 		orr	r3, r3, #64
 3055 00c8 6365     		str	r3, [r4, #84]
 3056              	.L283:
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3057              		.loc 1 2115 0
 3058 00ca 2368     		ldr	r3, [r4]
 3059 00cc 5B68     		ldr	r3, [r3, #4]
 3060 00ce 13F0010F 		tst	r3, #1
 3061 00d2 13D0     		beq	.L287
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3062              		.loc 1 2118 0
 3063 00d4 E36C     		ldr	r3, [r4, #76]
 3064 00d6 8BB1     		cbz	r3, .L287
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3065              		.loc 1 2122 0
 3066 00d8 0022     		movs	r2, #0
 3067 00da 5A63     		str	r2, [r3, #52]
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 3068              		.loc 1 2125 0
 3069 00dc E06C     		ldr	r0, [r4, #76]
 3070 00de FFF7FEFF 		bl	HAL_DMA_Abort
 3071              	.LVL244:
 3072 00e2 08B1     		cbz	r0, .L288
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 3073              		.loc 1 2127 0
 3074 00e4 4023     		movs	r3, #64
 3075 00e6 6365     		str	r3, [r4, #84]
 3076              	.L288:
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3077              		.loc 1 2131 0
 3078 00e8 2268     		ldr	r2, [r4]
 3079 00ea 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cc4FiPZj.s 			page 133


 3080 00ec 23F04003 		bic	r3, r3, #64
 3081 00f0 1360     		str	r3, [r2]
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3082              		.loc 1 2134 0
 3083 00f2 2268     		ldr	r2, [r4]
 3084 00f4 5368     		ldr	r3, [r2, #4]
 3085 00f6 23F00103 		bic	r3, r3, #1
 3086 00fa 5360     		str	r3, [r2, #4]
 3087              	.L287:
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3088              		.loc 1 2138 0
 3089 00fc 0023     		movs	r3, #0
 3090 00fe E387     		strh	r3, [r4, #62]	@ movhi
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3091              		.loc 1 2139 0
 3092 0100 E386     		strh	r3, [r4, #54]	@ movhi
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3093              		.loc 1 2142 0
 3094 0102 636D     		ldr	r3, [r4, #84]
 3095 0104 402B     		cmp	r3, #64
 3096 0106 0ED0     		beq	.L290
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3097              		.loc 1 2150 0
 3098 0108 0020     		movs	r0, #0
 3099 010a 6065     		str	r0, [r4, #84]
 3100              	.L289:
 3101              	.LVL245:
 3102              	.LBB4:
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3103              		.loc 1 2154 0
 3104 010c 0023     		movs	r3, #0
 3105 010e 0193     		str	r3, [sp, #4]
 3106 0110 2368     		ldr	r3, [r4]
 3107 0112 DA68     		ldr	r2, [r3, #12]
 3108 0114 0192     		str	r2, [sp, #4]
 3109 0116 9B68     		ldr	r3, [r3, #8]
 3110 0118 0193     		str	r3, [sp, #4]
 3111 011a 019B     		ldr	r3, [sp, #4]
 3112              	.LBE4:
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3113              		.loc 1 2157 0
 3114 011c 0123     		movs	r3, #1
 3115 011e 84F85130 		strb	r3, [r4, #81]
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3116              		.loc 1 2160 0
 3117 0122 04B0     		add	sp, sp, #16
 3118              	.LCFI38:
 3119              		.cfi_remember_state
 3120              		.cfi_def_cfa_offset 8
 3121              		@ sp needed
 3122 0124 10BD     		pop	{r4, pc}
 3123              	.LVL246:
 3124              	.L290:
 3125              	.LCFI39:
 3126              		.cfi_restore_state
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3127              		.loc 1 2145 0
ARM GAS  /tmp/cc4FiPZj.s 			page 134


 3128 0126 0120     		movs	r0, #1
 3129 0128 F0E7     		b	.L289
 3130              	.L296:
 3131 012a 00BF     		.align	2
 3132              	.L295:
 3133 012c 00000000 		.word	SystemCoreClock
 3134 0130 F1197605 		.word	91625969
 3135 0134 00000000 		.word	SPI_AbortTx_ISR
 3136 0138 00000000 		.word	SPI_AbortRx_ISR
 3137              		.cfi_endproc
 3138              	.LFE78:
 3140              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 3141              		.align	1
 3142              		.global	HAL_SPI_DMAPause
 3143              		.syntax unified
 3144              		.thumb
 3145              		.thumb_func
 3146              		.fpu softvfp
 3148              	HAL_SPI_DMAPause:
 3149              	.LFB80:
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 3150              		.loc 1 2338 0
 3151              		.cfi_startproc
 3152              		@ args = 0, pretend = 0, frame = 0
 3153              		@ frame_needed = 0, uses_anonymous_args = 0
 3154              		@ link register save eliminated.
 3155              	.LVL247:
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3156              		.loc 1 2340 0
 3157 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3158 0004 012B     		cmp	r3, #1
 3159 0006 0CD0     		beq	.L299
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3160              		.loc 1 2340 0 is_stmt 0 discriminator 2
 3161 0008 0123     		movs	r3, #1
 3162 000a 80F85030 		strb	r3, [r0, #80]
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3163              		.loc 1 2343 0 is_stmt 1 discriminator 2
 3164 000e 0268     		ldr	r2, [r0]
 3165 0010 5368     		ldr	r3, [r2, #4]
 3166 0012 23F00303 		bic	r3, r3, #3
 3167 0016 5360     		str	r3, [r2, #4]
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3168              		.loc 1 2346 0 discriminator 2
 3169 0018 0023     		movs	r3, #0
 3170 001a 80F85030 		strb	r3, [r0, #80]
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3171              		.loc 1 2348 0 discriminator 2
 3172 001e 1846     		mov	r0, r3
 3173              	.LVL248:
 3174 0020 7047     		bx	lr
 3175              	.LVL249:
 3176              	.L299:
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3177              		.loc 1 2340 0
 3178 0022 0220     		movs	r0, #2
 3179              	.LVL250:
ARM GAS  /tmp/cc4FiPZj.s 			page 135


2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3180              		.loc 1 2349 0
 3181 0024 7047     		bx	lr
 3182              		.cfi_endproc
 3183              	.LFE80:
 3185              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 3186              		.align	1
 3187              		.global	HAL_SPI_DMAResume
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu softvfp
 3193              	HAL_SPI_DMAResume:
 3194              	.LFB81:
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 3195              		.loc 1 2358 0
 3196              		.cfi_startproc
 3197              		@ args = 0, pretend = 0, frame = 0
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
 3199              		@ link register save eliminated.
 3200              	.LVL251:
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3201              		.loc 1 2360 0
 3202 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3203 0004 012B     		cmp	r3, #1
 3204 0006 0CD0     		beq	.L302
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3205              		.loc 1 2360 0 is_stmt 0 discriminator 2
 3206 0008 0123     		movs	r3, #1
 3207 000a 80F85030 		strb	r3, [r0, #80]
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3208              		.loc 1 2363 0 is_stmt 1 discriminator 2
 3209 000e 0268     		ldr	r2, [r0]
 3210 0010 5368     		ldr	r3, [r2, #4]
 3211 0012 43F00303 		orr	r3, r3, #3
 3212 0016 5360     		str	r3, [r2, #4]
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3213              		.loc 1 2366 0 discriminator 2
 3214 0018 0023     		movs	r3, #0
 3215 001a 80F85030 		strb	r3, [r0, #80]
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3216              		.loc 1 2368 0 discriminator 2
 3217 001e 1846     		mov	r0, r3
 3218              	.LVL252:
 3219 0020 7047     		bx	lr
 3220              	.LVL253:
 3221              	.L302:
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3222              		.loc 1 2360 0
 3223 0022 0220     		movs	r0, #2
 3224              	.LVL254:
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3225              		.loc 1 2369 0
 3226 0024 7047     		bx	lr
 3227              		.cfi_endproc
 3228              	.LFE81:
 3230              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
ARM GAS  /tmp/cc4FiPZj.s 			page 136


 3231              		.align	1
 3232              		.global	HAL_SPI_DMAStop
 3233              		.syntax unified
 3234              		.thumb
 3235              		.thumb_func
 3236              		.fpu softvfp
 3238              	HAL_SPI_DMAStop:
 3239              	.LFB82:
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3240              		.loc 1 2378 0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 0
 3243              		@ frame_needed = 0, uses_anonymous_args = 0
 3244              	.LVL255:
 3245 0000 38B5     		push	{r3, r4, r5, lr}
 3246              	.LCFI40:
 3247              		.cfi_def_cfa_offset 16
 3248              		.cfi_offset 3, -16
 3249              		.cfi_offset 4, -12
 3250              		.cfi_offset 5, -8
 3251              		.cfi_offset 14, -4
 3252 0002 0446     		mov	r4, r0
 3253              	.LVL256:
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3254              		.loc 1 2387 0
 3255 0004 806C     		ldr	r0, [r0, #72]
 3256              	.LVL257:
 3257 0006 E0B1     		cbz	r0, .L306
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3258              		.loc 1 2389 0
 3259 0008 FFF7FEFF 		bl	HAL_DMA_Abort
 3260              	.LVL258:
 3261 000c 0546     		mov	r5, r0
 3262 000e 20B1     		cbz	r0, .L304
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3263              		.loc 1 2391 0
 3264 0010 636D     		ldr	r3, [r4, #84]
 3265 0012 43F01003 		orr	r3, r3, #16
 3266 0016 6365     		str	r3, [r4, #84]
 3267              	.LVL259:
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3268              		.loc 1 2392 0
 3269 0018 0125     		movs	r5, #1
 3270              	.LVL260:
 3271              	.L304:
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3272              		.loc 1 2396 0
 3273 001a E06C     		ldr	r0, [r4, #76]
 3274 001c 38B1     		cbz	r0, .L305
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3275              		.loc 1 2398 0
 3276 001e FFF7FEFF 		bl	HAL_DMA_Abort
 3277              	.LVL261:
 3278 0022 20B1     		cbz	r0, .L305
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3279              		.loc 1 2400 0
 3280 0024 636D     		ldr	r3, [r4, #84]
ARM GAS  /tmp/cc4FiPZj.s 			page 137


 3281 0026 43F01003 		orr	r3, r3, #16
 3282 002a 6365     		str	r3, [r4, #84]
 3283              	.LVL262:
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 3284              		.loc 1 2401 0
 3285 002c 0125     		movs	r5, #1
 3286              	.LVL263:
 3287              	.L305:
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3288              		.loc 1 2406 0
 3289 002e 2268     		ldr	r2, [r4]
 3290 0030 5368     		ldr	r3, [r2, #4]
 3291 0032 23F00303 		bic	r3, r3, #3
 3292 0036 5360     		str	r3, [r2, #4]
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 3293              		.loc 1 2407 0
 3294 0038 0123     		movs	r3, #1
 3295 003a 84F85130 		strb	r3, [r4, #81]
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3296              		.loc 1 2409 0
 3297 003e 2846     		mov	r0, r5
 3298 0040 38BD     		pop	{r3, r4, r5, pc}
 3299              	.LVL264:
 3300              	.L306:
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 3301              		.loc 1 2379 0
 3302 0042 0025     		movs	r5, #0
 3303 0044 E9E7     		b	.L304
 3304              		.cfi_endproc
 3305              	.LFE82:
 3307              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 3308              		.align	1
 3309              		.weak	HAL_SPI_TxCpltCallback
 3310              		.syntax unified
 3311              		.thumb
 3312              		.thumb_func
 3313              		.fpu softvfp
 3315              	HAL_SPI_TxCpltCallback:
 3316              	.LFB84:
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3317              		.loc 1 2520 0
 3318              		.cfi_startproc
 3319              		@ args = 0, pretend = 0, frame = 0
 3320              		@ frame_needed = 0, uses_anonymous_args = 0
 3321              		@ link register save eliminated.
 3322              	.LVL265:
 3323 0000 7047     		bx	lr
 3324              		.cfi_endproc
 3325              	.LFE84:
 3327              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 3328              		.align	1
 3329              		.weak	HAL_SPI_RxCpltCallback
 3330              		.syntax unified
 3331              		.thumb
 3332              		.thumb_func
 3333              		.fpu softvfp
 3335              	HAL_SPI_RxCpltCallback:
ARM GAS  /tmp/cc4FiPZj.s 			page 138


 3336              	.LFB85:
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3337              		.loc 1 2536 0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 3341              		@ link register save eliminated.
 3342              	.LVL266:
 3343 0000 7047     		bx	lr
 3344              		.cfi_endproc
 3345              	.LFE85:
 3347              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 3348              		.align	1
 3349              		.weak	HAL_SPI_TxRxCpltCallback
 3350              		.syntax unified
 3351              		.thumb
 3352              		.thumb_func
 3353              		.fpu softvfp
 3355              	HAL_SPI_TxRxCpltCallback:
 3356              	.LFB86:
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3357              		.loc 1 2552 0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 0, uses_anonymous_args = 0
 3361              		@ link register save eliminated.
 3362              	.LVL267:
 3363 0000 7047     		bx	lr
 3364              		.cfi_endproc
 3365              	.LFE86:
 3367              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 3368              		.align	1
 3369              		.weak	HAL_SPI_TxHalfCpltCallback
 3370              		.syntax unified
 3371              		.thumb
 3372              		.thumb_func
 3373              		.fpu softvfp
 3375              	HAL_SPI_TxHalfCpltCallback:
 3376              	.LFB87:
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3377              		.loc 1 2568 0
 3378              		.cfi_startproc
 3379              		@ args = 0, pretend = 0, frame = 0
 3380              		@ frame_needed = 0, uses_anonymous_args = 0
 3381              		@ link register save eliminated.
 3382              	.LVL268:
 3383 0000 7047     		bx	lr
 3384              		.cfi_endproc
 3385              	.LFE87:
 3387              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 3388              		.align	1
 3389              		.syntax unified
 3390              		.thumb
 3391              		.thumb_func
 3392              		.fpu softvfp
 3394              	SPI_DMAHalfTransmitCplt:
 3395              	.LFB97:
ARM GAS  /tmp/cc4FiPZj.s 			page 139


2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3396              		.loc 1 2942 0
 3397              		.cfi_startproc
 3398              		@ args = 0, pretend = 0, frame = 0
 3399              		@ frame_needed = 0, uses_anonymous_args = 0
 3400              	.LVL269:
2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3401              		.loc 1 2942 0
 3402 0000 08B5     		push	{r3, lr}
 3403              	.LCFI41:
 3404              		.cfi_def_cfa_offset 8
 3405              		.cfi_offset 3, -8
 3406              		.cfi_offset 14, -4
 3407              	.LVL270:
2949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3408              		.loc 1 2949 0
 3409 0002 406A     		ldr	r0, [r0, #36]
 3410              	.LVL271:
 3411 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 3412              	.LVL272:
 3413 0008 08BD     		pop	{r3, pc}
 3414              		.cfi_endproc
 3415              	.LFE97:
 3417              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 3418              		.align	1
 3419              		.weak	HAL_SPI_RxHalfCpltCallback
 3420              		.syntax unified
 3421              		.thumb
 3422              		.thumb_func
 3423              		.fpu softvfp
 3425              	HAL_SPI_RxHalfCpltCallback:
 3426              	.LFB88:
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3427              		.loc 1 2584 0
 3428              		.cfi_startproc
 3429              		@ args = 0, pretend = 0, frame = 0
 3430              		@ frame_needed = 0, uses_anonymous_args = 0
 3431              		@ link register save eliminated.
 3432              	.LVL273:
 3433 0000 7047     		bx	lr
 3434              		.cfi_endproc
 3435              	.LFE88:
 3437              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 3438              		.align	1
 3439              		.syntax unified
 3440              		.thumb
 3441              		.thumb_func
 3442              		.fpu softvfp
 3444              	SPI_DMAHalfReceiveCplt:
 3445              	.LFB98:
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3446              		.loc 1 2960 0
 3447              		.cfi_startproc
 3448              		@ args = 0, pretend = 0, frame = 0
 3449              		@ frame_needed = 0, uses_anonymous_args = 0
 3450              	.LVL274:
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
ARM GAS  /tmp/cc4FiPZj.s 			page 140


 3451              		.loc 1 2960 0
 3452 0000 08B5     		push	{r3, lr}
 3453              	.LCFI42:
 3454              		.cfi_def_cfa_offset 8
 3455              		.cfi_offset 3, -8
 3456              		.cfi_offset 14, -4
 3457              	.LVL275:
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3458              		.loc 1 2967 0
 3459 0002 406A     		ldr	r0, [r0, #36]
 3460              	.LVL276:
 3461 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 3462              	.LVL277:
 3463 0008 08BD     		pop	{r3, pc}
 3464              		.cfi_endproc
 3465              	.LFE98:
 3467              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 3468              		.align	1
 3469              		.weak	HAL_SPI_TxRxHalfCpltCallback
 3470              		.syntax unified
 3471              		.thumb
 3472              		.thumb_func
 3473              		.fpu softvfp
 3475              	HAL_SPI_TxRxHalfCpltCallback:
 3476              	.LFB89:
2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3477              		.loc 1 2600 0
 3478              		.cfi_startproc
 3479              		@ args = 0, pretend = 0, frame = 0
 3480              		@ frame_needed = 0, uses_anonymous_args = 0
 3481              		@ link register save eliminated.
 3482              	.LVL278:
 3483 0000 7047     		bx	lr
 3484              		.cfi_endproc
 3485              	.LFE89:
 3487              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 3488              		.align	1
 3489              		.syntax unified
 3490              		.thumb
 3491              		.thumb_func
 3492              		.fpu softvfp
 3494              	SPI_DMAHalfTransmitReceiveCplt:
 3495              	.LFB99:
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3496              		.loc 1 2978 0
 3497              		.cfi_startproc
 3498              		@ args = 0, pretend = 0, frame = 0
 3499              		@ frame_needed = 0, uses_anonymous_args = 0
 3500              	.LVL279:
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3501              		.loc 1 2978 0
 3502 0000 08B5     		push	{r3, lr}
 3503              	.LCFI43:
 3504              		.cfi_def_cfa_offset 8
 3505              		.cfi_offset 3, -8
 3506              		.cfi_offset 14, -4
 3507              	.LVL280:
ARM GAS  /tmp/cc4FiPZj.s 			page 141


2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3508              		.loc 1 2985 0
 3509 0002 406A     		ldr	r0, [r0, #36]
 3510              	.LVL281:
 3511 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 3512              	.LVL282:
 3513 0008 08BD     		pop	{r3, pc}
 3514              		.cfi_endproc
 3515              	.LFE99:
 3517              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 3518              		.align	1
 3519              		.weak	HAL_SPI_ErrorCallback
 3520              		.syntax unified
 3521              		.thumb
 3522              		.thumb_func
 3523              		.fpu softvfp
 3525              	HAL_SPI_ErrorCallback:
 3526              	.LFB90:
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3527              		.loc 1 2616 0
 3528              		.cfi_startproc
 3529              		@ args = 0, pretend = 0, frame = 0
 3530              		@ frame_needed = 0, uses_anonymous_args = 0
 3531              		@ link register save eliminated.
 3532              	.LVL283:
 3533 0000 7047     		bx	lr
 3534              		.cfi_endproc
 3535              	.LFE90:
 3537              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 3538              		.align	1
 3539              		.syntax unified
 3540              		.thumb
 3541              		.thumb_func
 3542              		.fpu softvfp
 3544              	SPI_CloseTx_ISR:
 3545              	.LFB117:
3815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 3546              		.loc 1 3815 0
 3547              		.cfi_startproc
 3548              		@ args = 0, pretend = 0, frame = 8
 3549              		@ frame_needed = 0, uses_anonymous_args = 0
 3550              	.LVL284:
3815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 3551              		.loc 1 3815 0
 3552 0000 10B5     		push	{r4, lr}
 3553              	.LCFI44:
 3554              		.cfi_def_cfa_offset 8
 3555              		.cfi_offset 4, -8
 3556              		.cfi_offset 14, -4
 3557 0002 82B0     		sub	sp, sp, #8
 3558              	.LCFI45:
 3559              		.cfi_def_cfa_offset 16
 3560 0004 0446     		mov	r4, r0
3817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3561              		.loc 1 3817 0
 3562 0006 204B     		ldr	r3, .L332
 3563 0008 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc4FiPZj.s 			page 142


 3564 000a 204A     		ldr	r2, .L332+4
 3565 000c A2FB0323 		umull	r2, r3, r2, r3
 3566 0010 5B0A     		lsrs	r3, r3, #9
 3567 0012 6422     		movs	r2, #100
 3568 0014 02FB03F3 		mul	r3, r2, r3
 3569 0018 0193     		str	r3, [sp, #4]
3820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3570              		.loc 1 3820 0
 3571 001a FFF7FEFF 		bl	HAL_GetTick
 3572              	.LVL285:
 3573 001e 0246     		mov	r2, r0
 3574              	.LVL286:
 3575              	.L324:
3825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3576              		.loc 1 3825 0
 3577 0020 019B     		ldr	r3, [sp, #4]
 3578 0022 43B1     		cbz	r3, .L330
3830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3579              		.loc 1 3830 0
 3580 0024 019B     		ldr	r3, [sp, #4]
 3581 0026 013B     		subs	r3, r3, #1
 3582 0028 0193     		str	r3, [sp, #4]
3831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3583              		.loc 1 3831 0
 3584 002a 2368     		ldr	r3, [r4]
 3585 002c 9B68     		ldr	r3, [r3, #8]
 3586 002e 13F0020F 		tst	r3, #2
 3587 0032 F5D0     		beq	.L324
 3588 0034 03E0     		b	.L323
 3589              	.L330:
3827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 3590              		.loc 1 3827 0
 3591 0036 636D     		ldr	r3, [r4, #84]
 3592 0038 43F02003 		orr	r3, r3, #32
 3593 003c 6365     		str	r3, [r4, #84]
 3594              	.L323:
3834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3595              		.loc 1 3834 0
 3596 003e 2168     		ldr	r1, [r4]
 3597 0040 4B68     		ldr	r3, [r1, #4]
 3598 0042 23F0A003 		bic	r3, r3, #160
 3599 0046 4B60     		str	r3, [r1, #4]
3837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3600              		.loc 1 3837 0
 3601 0048 6421     		movs	r1, #100
 3602 004a 2046     		mov	r0, r4
 3603              	.LVL287:
 3604 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3605              	.LVL288:
 3606 0050 18B1     		cbz	r0, .L325
3839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3607              		.loc 1 3839 0
 3608 0052 636D     		ldr	r3, [r4, #84]
 3609 0054 43F02003 		orr	r3, r3, #32
 3610 0058 6365     		str	r3, [r4, #84]
 3611              	.L325:
3843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/cc4FiPZj.s 			page 143


 3612              		.loc 1 3843 0
 3613 005a A368     		ldr	r3, [r4, #8]
 3614 005c 33B9     		cbnz	r3, .L326
 3615              	.LBB5:
3845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3616              		.loc 1 3845 0
 3617 005e 0093     		str	r3, [sp]
 3618 0060 2368     		ldr	r3, [r4]
 3619 0062 DA68     		ldr	r2, [r3, #12]
 3620 0064 0092     		str	r2, [sp]
 3621 0066 9B68     		ldr	r3, [r3, #8]
 3622 0068 0093     		str	r3, [sp]
 3623 006a 009B     		ldr	r3, [sp]
 3624              	.L326:
 3625              	.LBE5:
3848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 3626              		.loc 1 3848 0
 3627 006c 0123     		movs	r3, #1
 3628 006e 84F85130 		strb	r3, [r4, #81]
3849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3629              		.loc 1 3849 0
 3630 0072 636D     		ldr	r3, [r4, #84]
 3631 0074 23B9     		cbnz	r3, .L331
3864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3632              		.loc 1 3864 0
 3633 0076 2046     		mov	r0, r4
 3634 0078 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 3635              	.LVL289:
 3636              	.L321:
3867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3637              		.loc 1 3867 0
 3638 007c 02B0     		add	sp, sp, #8
 3639              	.LCFI46:
 3640              		.cfi_remember_state
 3641              		.cfi_def_cfa_offset 8
 3642              		@ sp needed
 3643 007e 10BD     		pop	{r4, pc}
 3644              	.LVL290:
 3645              	.L331:
 3646              	.LCFI47:
 3647              		.cfi_restore_state
3855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3648              		.loc 1 3855 0
 3649 0080 2046     		mov	r0, r4
 3650 0082 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3651              	.LVL291:
 3652 0086 F9E7     		b	.L321
 3653              	.L333:
 3654              		.align	2
 3655              	.L332:
 3656 0088 00000000 		.word	SystemCoreClock
 3657 008c F1197605 		.word	91625969
 3658              		.cfi_endproc
 3659              	.LFE117:
 3661              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 3662              		.align	1
 3663              		.syntax unified
ARM GAS  /tmp/cc4FiPZj.s 			page 144


 3664              		.thumb
 3665              		.thumb_func
 3666              		.fpu softvfp
 3668              	SPI_TxISR_8BIT:
 3669              	.LFB110:
3459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 3670              		.loc 1 3459 0
 3671              		.cfi_startproc
 3672              		@ args = 0, pretend = 0, frame = 0
 3673              		@ frame_needed = 0, uses_anonymous_args = 0
 3674              	.LVL292:
 3675 0000 08B5     		push	{r3, lr}
 3676              	.LCFI48:
 3677              		.cfi_def_cfa_offset 8
 3678              		.cfi_offset 3, -8
 3679              		.cfi_offset 14, -4
3460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 3680              		.loc 1 3460 0
 3681 0002 0368     		ldr	r3, [r0]
 3682 0004 026B     		ldr	r2, [r0, #48]
 3683 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3684 0008 1A73     		strb	r2, [r3, #12]
3461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 3685              		.loc 1 3461 0
 3686 000a 036B     		ldr	r3, [r0, #48]
 3687 000c 0133     		adds	r3, r3, #1
 3688 000e 0363     		str	r3, [r0, #48]
3462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3689              		.loc 1 3462 0
 3690 0010 C38E     		ldrh	r3, [r0, #54]
 3691 0012 9BB2     		uxth	r3, r3
 3692 0014 013B     		subs	r3, r3, #1
 3693 0016 9BB2     		uxth	r3, r3
 3694 0018 C386     		strh	r3, [r0, #54]	@ movhi
3464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3695              		.loc 1 3464 0
 3696 001a C38E     		ldrh	r3, [r0, #54]
 3697 001c 9BB2     		uxth	r3, r3
 3698 001e 03B1     		cbz	r3, .L337
 3699              	.LVL293:
 3700              	.L334:
 3701 0020 08BD     		pop	{r3, pc}
 3702              	.LVL294:
 3703              	.L337:
3473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3704              		.loc 1 3473 0
 3705 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3706              	.LVL295:
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3707              		.loc 1 3475 0
 3708 0026 FBE7     		b	.L334
 3709              		.cfi_endproc
 3710              	.LFE110:
 3712              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 3713              		.align	1
 3714              		.syntax unified
 3715              		.thumb
ARM GAS  /tmp/cc4FiPZj.s 			page 145


 3716              		.thumb_func
 3717              		.fpu softvfp
 3719              	SPI_TxISR_16BIT:
 3720              	.LFB111:
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 3721              		.loc 1 3484 0
 3722              		.cfi_startproc
 3723              		@ args = 0, pretend = 0, frame = 0
 3724              		@ frame_needed = 0, uses_anonymous_args = 0
 3725              	.LVL296:
 3726 0000 08B5     		push	{r3, lr}
 3727              	.LCFI49:
 3728              		.cfi_def_cfa_offset 8
 3729              		.cfi_offset 3, -8
 3730              		.cfi_offset 14, -4
3486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 3731              		.loc 1 3486 0
 3732 0002 0368     		ldr	r3, [r0]
 3733 0004 026B     		ldr	r2, [r0, #48]
 3734 0006 1288     		ldrh	r2, [r2]
 3735 0008 DA60     		str	r2, [r3, #12]
3487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 3736              		.loc 1 3487 0
 3737 000a 036B     		ldr	r3, [r0, #48]
 3738 000c 0233     		adds	r3, r3, #2
 3739 000e 0363     		str	r3, [r0, #48]
3488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3740              		.loc 1 3488 0
 3741 0010 C38E     		ldrh	r3, [r0, #54]
 3742 0012 9BB2     		uxth	r3, r3
 3743 0014 013B     		subs	r3, r3, #1
 3744 0016 9BB2     		uxth	r3, r3
 3745 0018 C386     		strh	r3, [r0, #54]	@ movhi
3490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3746              		.loc 1 3490 0
 3747 001a C38E     		ldrh	r3, [r0, #54]
 3748 001c 9BB2     		uxth	r3, r3
 3749 001e 03B1     		cbz	r3, .L341
 3750              	.LVL297:
 3751              	.L338:
 3752 0020 08BD     		pop	{r3, pc}
 3753              	.LVL298:
 3754              	.L341:
3499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3755              		.loc 1 3499 0
 3756 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3757              	.LVL299:
3501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3758              		.loc 1 3501 0
 3759 0026 FBE7     		b	.L338
 3760              		.cfi_endproc
 3761              	.LFE111:
 3763              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 3764              		.align	1
 3765              		.syntax unified
 3766              		.thumb
 3767              		.thumb_func
ARM GAS  /tmp/cc4FiPZj.s 			page 146


 3768              		.fpu softvfp
 3770              	SPI_CloseRx_ISR:
 3771              	.LFB116:
3741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 3772              		.loc 1 3741 0
 3773              		.cfi_startproc
 3774              		@ args = 0, pretend = 0, frame = 8
 3775              		@ frame_needed = 0, uses_anonymous_args = 0
 3776              	.LVL300:
 3777 0000 10B5     		push	{r4, lr}
 3778              	.LCFI50:
 3779              		.cfi_def_cfa_offset 8
 3780              		.cfi_offset 4, -8
 3781              		.cfi_offset 14, -4
 3782 0002 82B0     		sub	sp, sp, #8
 3783              	.LCFI51:
 3784              		.cfi_def_cfa_offset 16
 3785 0004 0446     		mov	r4, r0
3743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3786              		.loc 1 3743 0
 3787 0006 0268     		ldr	r2, [r0]
 3788 0008 5368     		ldr	r3, [r2, #4]
 3789 000a 23F06003 		bic	r3, r3, #96
 3790 000e 5360     		str	r3, [r2, #4]
3746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3791              		.loc 1 3746 0
 3792 0010 FFF7FEFF 		bl	HAL_GetTick
 3793              	.LVL301:
 3794 0014 0246     		mov	r2, r0
 3795 0016 6421     		movs	r1, #100
 3796 0018 2046     		mov	r0, r4
 3797 001a FFF7FEFF 		bl	SPI_EndRxTransaction
 3798              	.LVL302:
 3799 001e 18B1     		cbz	r0, .L343
3748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3800              		.loc 1 3748 0
 3801 0020 636D     		ldr	r3, [r4, #84]
 3802 0022 43F02003 		orr	r3, r3, #32
 3803 0026 6365     		str	r3, [r4, #84]
 3804              	.L343:
3752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3805              		.loc 1 3752 0
 3806 0028 A368     		ldr	r3, [r4, #8]
 3807 002a 33B9     		cbnz	r3, .L344
 3808              	.LBB6:
3754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3809              		.loc 1 3754 0
 3810 002c 0193     		str	r3, [sp, #4]
 3811 002e 2368     		ldr	r3, [r4]
 3812 0030 DA68     		ldr	r2, [r3, #12]
 3813 0032 0192     		str	r2, [sp, #4]
 3814 0034 9B68     		ldr	r3, [r3, #8]
 3815 0036 0193     		str	r3, [sp, #4]
 3816 0038 019B     		ldr	r3, [sp, #4]
 3817              	.L344:
 3818              	.LBE6:
3756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 147


 3819              		.loc 1 3756 0
 3820 003a 0123     		movs	r3, #1
 3821 003c 84F85130 		strb	r3, [r4, #81]
3785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3822              		.loc 1 3785 0
 3823 0040 636D     		ldr	r3, [r4, #84]
 3824 0042 23B1     		cbz	r3, .L348
3800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3825              		.loc 1 3800 0
 3826 0044 2046     		mov	r0, r4
 3827 0046 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3828              	.LVL303:
 3829              	.L342:
3806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3830              		.loc 1 3806 0
 3831 004a 02B0     		add	sp, sp, #8
 3832              	.LCFI52:
 3833              		.cfi_remember_state
 3834              		.cfi_def_cfa_offset 8
 3835              		@ sp needed
 3836 004c 10BD     		pop	{r4, pc}
 3837              	.LVL304:
 3838              	.L348:
 3839              	.LCFI53:
 3840              		.cfi_restore_state
3791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3841              		.loc 1 3791 0
 3842 004e 2046     		mov	r0, r4
 3843 0050 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3844              	.LVL305:
 3845 0054 F9E7     		b	.L342
 3846              		.cfi_endproc
 3847              	.LFE116:
 3849              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 3850              		.align	1
 3851              		.syntax unified
 3852              		.thumb
 3853              		.thumb_func
 3854              		.fpu softvfp
 3856              	SPI_RxISR_8BIT:
 3857              	.LFB108:
3360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 3858              		.loc 1 3360 0
 3859              		.cfi_startproc
 3860              		@ args = 0, pretend = 0, frame = 0
 3861              		@ frame_needed = 0, uses_anonymous_args = 0
 3862              	.LVL306:
 3863 0000 08B5     		push	{r3, lr}
 3864              	.LCFI54:
 3865              		.cfi_def_cfa_offset 8
 3866              		.cfi_offset 3, -8
 3867              		.cfi_offset 14, -4
3361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 3868              		.loc 1 3361 0
 3869 0002 836B     		ldr	r3, [r0, #56]
 3870 0004 0268     		ldr	r2, [r0]
 3871 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
ARM GAS  /tmp/cc4FiPZj.s 			page 148


 3872 0008 1A70     		strb	r2, [r3]
3362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 3873              		.loc 1 3362 0
 3874 000a 836B     		ldr	r3, [r0, #56]
 3875 000c 0133     		adds	r3, r3, #1
 3876 000e 8363     		str	r3, [r0, #56]
3363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3877              		.loc 1 3363 0
 3878 0010 C38F     		ldrh	r3, [r0, #62]
 3879 0012 9BB2     		uxth	r3, r3
 3880 0014 013B     		subs	r3, r3, #1
 3881 0016 9BB2     		uxth	r3, r3
 3882 0018 C387     		strh	r3, [r0, #62]	@ movhi
3380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3883              		.loc 1 3380 0
 3884 001a C38F     		ldrh	r3, [r0, #62]
 3885 001c 9BB2     		uxth	r3, r3
 3886 001e 03B1     		cbz	r3, .L352
 3887              	.LVL307:
 3888              	.L349:
 3889 0020 08BD     		pop	{r3, pc}
 3890              	.LVL308:
 3891              	.L352:
3389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3892              		.loc 1 3389 0
 3893 0022 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3894              	.LVL309:
3391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3895              		.loc 1 3391 0
 3896 0026 FBE7     		b	.L349
 3897              		.cfi_endproc
 3898              	.LFE108:
 3900              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 3901              		.align	1
 3902              		.syntax unified
 3903              		.thumb
 3904              		.thumb_func
 3905              		.fpu softvfp
 3907              	SPI_RxISR_16BIT:
 3908              	.LFB109:
3419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 3909              		.loc 1 3419 0
 3910              		.cfi_startproc
 3911              		@ args = 0, pretend = 0, frame = 0
 3912              		@ frame_needed = 0, uses_anonymous_args = 0
 3913              	.LVL310:
 3914 0000 08B5     		push	{r3, lr}
 3915              	.LCFI55:
 3916              		.cfi_def_cfa_offset 8
 3917              		.cfi_offset 3, -8
 3918              		.cfi_offset 14, -4
3420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 3919              		.loc 1 3420 0
 3920 0002 836B     		ldr	r3, [r0, #56]
 3921 0004 0268     		ldr	r2, [r0]
 3922 0006 D268     		ldr	r2, [r2, #12]
 3923 0008 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/cc4FiPZj.s 			page 149


3421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 3924              		.loc 1 3421 0
 3925 000a 836B     		ldr	r3, [r0, #56]
 3926 000c 0233     		adds	r3, r3, #2
 3927 000e 8363     		str	r3, [r0, #56]
3422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3928              		.loc 1 3422 0
 3929 0010 C38F     		ldrh	r3, [r0, #62]
 3930 0012 9BB2     		uxth	r3, r3
 3931 0014 013B     		subs	r3, r3, #1
 3932 0016 9BB2     		uxth	r3, r3
 3933 0018 C387     		strh	r3, [r0, #62]	@ movhi
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 3934              		.loc 1 3439 0
 3935 001a C38F     		ldrh	r3, [r0, #62]
 3936 001c 9BB2     		uxth	r3, r3
 3937 001e 03B1     		cbz	r3, .L356
 3938              	.LVL311:
 3939              	.L353:
 3940 0020 08BD     		pop	{r3, pc}
 3941              	.LVL312:
 3942              	.L356:
3448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 3943              		.loc 1 3448 0
 3944 0022 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3945              	.LVL313:
3450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3946              		.loc 1 3450 0
 3947 0026 FBE7     		b	.L353
 3948              		.cfi_endproc
 3949              	.LFE109:
 3951              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 3952              		.align	1
 3953              		.syntax unified
 3954              		.thumb
 3955              		.thumb_func
 3956              		.fpu softvfp
 3958              	SPI_CloseRxTx_ISR:
 3959              	.LFB115:
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 3960              		.loc 1 3635 0
 3961              		.cfi_startproc
 3962              		@ args = 0, pretend = 0, frame = 8
 3963              		@ frame_needed = 0, uses_anonymous_args = 0
 3964              	.LVL314:
 3965 0000 10B5     		push	{r4, lr}
 3966              	.LCFI56:
 3967              		.cfi_def_cfa_offset 8
 3968              		.cfi_offset 4, -8
 3969              		.cfi_offset 14, -4
 3970 0002 82B0     		sub	sp, sp, #8
 3971              	.LCFI57:
 3972              		.cfi_def_cfa_offset 16
 3973 0004 0446     		mov	r4, r0
3637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3974              		.loc 1 3637 0
 3975 0006 284B     		ldr	r3, .L369
ARM GAS  /tmp/cc4FiPZj.s 			page 150


 3976 0008 1B68     		ldr	r3, [r3]
 3977 000a 284A     		ldr	r2, .L369+4
 3978 000c A2FB0323 		umull	r2, r3, r2, r3
 3979 0010 5B0A     		lsrs	r3, r3, #9
 3980 0012 6422     		movs	r2, #100
 3981 0014 02FB03F3 		mul	r3, r2, r3
 3982 0018 0193     		str	r3, [sp, #4]
3640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3983              		.loc 1 3640 0
 3984 001a FFF7FEFF 		bl	HAL_GetTick
 3985              	.LVL315:
 3986 001e 0246     		mov	r2, r0
 3987              	.LVL316:
3643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 3988              		.loc 1 3643 0
 3989 0020 2168     		ldr	r1, [r4]
 3990 0022 4B68     		ldr	r3, [r1, #4]
 3991 0024 23F02003 		bic	r3, r3, #32
 3992 0028 4B60     		str	r3, [r1, #4]
 3993              	.L360:
3648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 3994              		.loc 1 3648 0
 3995 002a 019B     		ldr	r3, [sp, #4]
 3996 002c 43B1     		cbz	r3, .L367
3653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3997              		.loc 1 3653 0
 3998 002e 019B     		ldr	r3, [sp, #4]
 3999 0030 013B     		subs	r3, r3, #1
 4000 0032 0193     		str	r3, [sp, #4]
3654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4001              		.loc 1 3654 0
 4002 0034 2368     		ldr	r3, [r4]
 4003 0036 9B68     		ldr	r3, [r3, #8]
 4004 0038 13F0020F 		tst	r3, #2
 4005 003c F5D0     		beq	.L360
 4006 003e 03E0     		b	.L359
 4007              	.L367:
3650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 4008              		.loc 1 3650 0
 4009 0040 636D     		ldr	r3, [r4, #84]
 4010 0042 43F02003 		orr	r3, r3, #32
 4011 0046 6365     		str	r3, [r4, #84]
 4012              	.L359:
3657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4013              		.loc 1 3657 0
 4014 0048 6421     		movs	r1, #100
 4015 004a 2046     		mov	r0, r4
 4016              	.LVL317:
 4017 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4018              	.LVL318:
 4019 0050 18B1     		cbz	r0, .L361
3659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4020              		.loc 1 3659 0
 4021 0052 636D     		ldr	r3, [r4, #84]
 4022 0054 43F02003 		orr	r3, r3, #32
 4023 0058 6365     		str	r3, [r4, #84]
 4024              	.L361:
ARM GAS  /tmp/cc4FiPZj.s 			page 151


3663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4025              		.loc 1 3663 0
 4026 005a A368     		ldr	r3, [r4, #8]
 4027 005c 33B9     		cbnz	r3, .L362
 4028              	.LBB7:
3665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4029              		.loc 1 3665 0
 4030 005e 0093     		str	r3, [sp]
 4031 0060 2368     		ldr	r3, [r4]
 4032 0062 DA68     		ldr	r2, [r3, #12]
 4033 0064 0092     		str	r2, [sp]
 4034 0066 9B68     		ldr	r3, [r3, #8]
 4035 0068 0093     		str	r3, [sp]
 4036 006a 009B     		ldr	r3, [sp]
 4037              	.L362:
 4038              	.LBE7:
3696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4039              		.loc 1 3696 0
 4040 006c 636D     		ldr	r3, [r4, #84]
 4041 006e 9BB9     		cbnz	r3, .L363
3698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4042              		.loc 1 3698 0
 4043 0070 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4044 0074 DBB2     		uxtb	r3, r3
 4045 0076 042B     		cmp	r3, #4
 4046 0078 07D0     		beq	.L368
3710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user TxRx complete callback */
 4047              		.loc 1 3710 0
 4048 007a 0123     		movs	r3, #1
 4049 007c 84F85130 		strb	r3, [r4, #81]
3715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4050              		.loc 1 3715 0
 4051 0080 2046     		mov	r0, r4
 4052 0082 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4053              	.LVL319:
 4054              	.L357:
3732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4055              		.loc 1 3732 0
 4056 0086 02B0     		add	sp, sp, #8
 4057              	.LCFI58:
 4058              		.cfi_remember_state
 4059              		.cfi_def_cfa_offset 8
 4060              		@ sp needed
 4061 0088 10BD     		pop	{r4, pc}
 4062              	.LVL320:
 4063              	.L368:
 4064              	.LCFI59:
 4065              		.cfi_restore_state
3700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user Rx complete callback */
 4066              		.loc 1 3700 0
 4067 008a 0123     		movs	r3, #1
 4068 008c 84F85130 		strb	r3, [r4, #81]
3705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4069              		.loc 1 3705 0
 4070 0090 2046     		mov	r0, r4
 4071 0092 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4072              	.LVL321:
ARM GAS  /tmp/cc4FiPZj.s 			page 152


 4073 0096 F6E7     		b	.L357
 4074              	.L363:
3721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
 4075              		.loc 1 3721 0
 4076 0098 0123     		movs	r3, #1
 4077 009a 84F85130 		strb	r3, [r4, #81]
3726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4078              		.loc 1 3726 0
 4079 009e 2046     		mov	r0, r4
 4080 00a0 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4081              	.LVL322:
3732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4082              		.loc 1 3732 0
 4083 00a4 EFE7     		b	.L357
 4084              	.L370:
 4085 00a6 00BF     		.align	2
 4086              	.L369:
 4087 00a8 00000000 		.word	SystemCoreClock
 4088 00ac F1197605 		.word	91625969
 4089              		.cfi_endproc
 4090              	.LFE115:
 4092              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 4093              		.align	1
 4094              		.syntax unified
 4095              		.thumb
 4096              		.thumb_func
 4097              		.fpu softvfp
 4099              	SPI_2linesTxISR_8BIT:
 4100              	.LFB105:
3219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4101              		.loc 1 3219 0
 4102              		.cfi_startproc
 4103              		@ args = 0, pretend = 0, frame = 0
 4104              		@ frame_needed = 0, uses_anonymous_args = 0
 4105              	.LVL323:
 4106 0000 08B5     		push	{r3, lr}
 4107              	.LCFI60:
 4108              		.cfi_def_cfa_offset 8
 4109              		.cfi_offset 3, -8
 4110              		.cfi_offset 14, -4
3220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4111              		.loc 1 3220 0
 4112 0002 0368     		ldr	r3, [r0]
 4113 0004 026B     		ldr	r2, [r0, #48]
 4114 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4115 0008 1A73     		strb	r2, [r3, #12]
3221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 4116              		.loc 1 3221 0
 4117 000a 036B     		ldr	r3, [r0, #48]
 4118 000c 0133     		adds	r3, r3, #1
 4119 000e 0363     		str	r3, [r0, #48]
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4120              		.loc 1 3222 0
 4121 0010 C38E     		ldrh	r3, [r0, #54]
 4122 0012 9BB2     		uxth	r3, r3
 4123 0014 013B     		subs	r3, r3, #1
 4124 0016 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cc4FiPZj.s 			page 153


 4125 0018 C386     		strh	r3, [r0, #54]	@ movhi
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4126              		.loc 1 3225 0
 4127 001a C38E     		ldrh	r3, [r0, #54]
 4128 001c 9BB2     		uxth	r3, r3
 4129 001e 3BB9     		cbnz	r3, .L371
3239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4130              		.loc 1 3239 0
 4131 0020 0268     		ldr	r2, [r0]
 4132 0022 5368     		ldr	r3, [r2, #4]
 4133 0024 23F08003 		bic	r3, r3, #128
 4134 0028 5360     		str	r3, [r2, #4]
3241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4135              		.loc 1 3241 0
 4136 002a C38F     		ldrh	r3, [r0, #62]
 4137 002c 9BB2     		uxth	r3, r3
 4138 002e 03B1     		cbz	r3, .L374
 4139              	.LVL324:
 4140              	.L371:
 4141 0030 08BD     		pop	{r3, pc}
 4142              	.LVL325:
 4143              	.L374:
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4144              		.loc 1 3243 0
 4145 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4146              	.LVL326:
3246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4147              		.loc 1 3246 0
 4148 0036 FBE7     		b	.L371
 4149              		.cfi_endproc
 4150              	.LFE105:
 4152              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 4153              		.align	1
 4154              		.syntax unified
 4155              		.thumb
 4156              		.thumb_func
 4157              		.fpu softvfp
 4159              	SPI_2linesRxISR_8BIT:
 4160              	.LFB104:
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8bit mode */
 4161              		.loc 1 3163 0
 4162              		.cfi_startproc
 4163              		@ args = 0, pretend = 0, frame = 0
 4164              		@ frame_needed = 0, uses_anonymous_args = 0
 4165              	.LVL327:
 4166 0000 08B5     		push	{r3, lr}
 4167              	.LCFI61:
 4168              		.cfi_def_cfa_offset 8
 4169              		.cfi_offset 3, -8
 4170              		.cfi_offset 14, -4
3165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 4171              		.loc 1 3165 0
 4172 0002 836B     		ldr	r3, [r0, #56]
 4173 0004 0268     		ldr	r2, [r0]
 4174 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 4175 0008 1A70     		strb	r2, [r3]
3166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
ARM GAS  /tmp/cc4FiPZj.s 			page 154


 4176              		.loc 1 3166 0
 4177 000a 836B     		ldr	r3, [r0, #56]
 4178 000c 0133     		adds	r3, r3, #1
 4179 000e 8363     		str	r3, [r0, #56]
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4180              		.loc 1 3167 0
 4181 0010 C38F     		ldrh	r3, [r0, #62]
 4182 0012 9BB2     		uxth	r3, r3
 4183 0014 013B     		subs	r3, r3, #1
 4184 0016 9BB2     		uxth	r3, r3
 4185 0018 C387     		strh	r3, [r0, #62]	@ movhi
3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4186              		.loc 1 3170 0
 4187 001a C38F     		ldrh	r3, [r0, #62]
 4188 001c 9BB2     		uxth	r3, r3
 4189 001e 3BB9     		cbnz	r3, .L375
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4190              		.loc 1 3181 0
 4191 0020 0268     		ldr	r2, [r0]
 4192 0022 5368     		ldr	r3, [r2, #4]
 4193 0024 23F06003 		bic	r3, r3, #96
 4194 0028 5360     		str	r3, [r2, #4]
3183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4195              		.loc 1 3183 0
 4196 002a C38E     		ldrh	r3, [r0, #54]
 4197 002c 9BB2     		uxth	r3, r3
 4198 002e 03B1     		cbz	r3, .L378
 4199              	.LVL328:
 4200              	.L375:
 4201 0030 08BD     		pop	{r3, pc}
 4202              	.LVL329:
 4203              	.L378:
3185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4204              		.loc 1 3185 0
 4205 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4206              	.LVL330:
3188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4207              		.loc 1 3188 0
 4208 0036 FBE7     		b	.L375
 4209              		.cfi_endproc
 4210              	.LFE104:
 4212              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 4213              		.align	1
 4214              		.syntax unified
 4215              		.thumb
 4216              		.thumb_func
 4217              		.fpu softvfp
 4219              	SPI_2linesTxISR_16BIT:
 4220              	.LFB107:
3307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4221              		.loc 1 3307 0
 4222              		.cfi_startproc
 4223              		@ args = 0, pretend = 0, frame = 0
 4224              		@ frame_needed = 0, uses_anonymous_args = 0
 4225              	.LVL331:
 4226 0000 08B5     		push	{r3, lr}
 4227              	.LCFI62:
ARM GAS  /tmp/cc4FiPZj.s 			page 155


 4228              		.cfi_def_cfa_offset 8
 4229              		.cfi_offset 3, -8
 4230              		.cfi_offset 14, -4
3309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4231              		.loc 1 3309 0
 4232 0002 0368     		ldr	r3, [r0]
 4233 0004 026B     		ldr	r2, [r0, #48]
 4234 0006 1288     		ldrh	r2, [r2]
 4235 0008 DA60     		str	r2, [r3, #12]
3310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 4236              		.loc 1 3310 0
 4237 000a 036B     		ldr	r3, [r0, #48]
 4238 000c 0233     		adds	r3, r3, #2
 4239 000e 0363     		str	r3, [r0, #48]
3311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4240              		.loc 1 3311 0
 4241 0010 C38E     		ldrh	r3, [r0, #54]
 4242 0012 9BB2     		uxth	r3, r3
 4243 0014 013B     		subs	r3, r3, #1
 4244 0016 9BB2     		uxth	r3, r3
 4245 0018 C386     		strh	r3, [r0, #54]	@ movhi
3314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4246              		.loc 1 3314 0
 4247 001a C38E     		ldrh	r3, [r0, #54]
 4248 001c 9BB2     		uxth	r3, r3
 4249 001e 3BB9     		cbnz	r3, .L379
3328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4250              		.loc 1 3328 0
 4251 0020 0268     		ldr	r2, [r0]
 4252 0022 5368     		ldr	r3, [r2, #4]
 4253 0024 23F08003 		bic	r3, r3, #128
 4254 0028 5360     		str	r3, [r2, #4]
3330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4255              		.loc 1 3330 0
 4256 002a C38F     		ldrh	r3, [r0, #62]
 4257 002c 9BB2     		uxth	r3, r3
 4258 002e 03B1     		cbz	r3, .L382
 4259              	.LVL332:
 4260              	.L379:
 4261 0030 08BD     		pop	{r3, pc}
 4262              	.LVL333:
 4263              	.L382:
3332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4264              		.loc 1 3332 0
 4265 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4266              	.LVL334:
3335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4267              		.loc 1 3335 0
 4268 0036 FBE7     		b	.L379
 4269              		.cfi_endproc
 4270              	.LFE107:
 4272              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 4273              		.align	1
 4274              		.syntax unified
 4275              		.thumb
 4276              		.thumb_func
 4277              		.fpu softvfp
ARM GAS  /tmp/cc4FiPZj.s 			page 156


 4279              	SPI_2linesRxISR_16BIT:
 4280              	.LFB106:
3255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 4281              		.loc 1 3255 0
 4282              		.cfi_startproc
 4283              		@ args = 0, pretend = 0, frame = 0
 4284              		@ frame_needed = 0, uses_anonymous_args = 0
 4285              	.LVL335:
 4286 0000 08B5     		push	{r3, lr}
 4287              	.LCFI63:
 4288              		.cfi_def_cfa_offset 8
 4289              		.cfi_offset 3, -8
 4290              		.cfi_offset 14, -4
3257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4291              		.loc 1 3257 0
 4292 0002 836B     		ldr	r3, [r0, #56]
 4293 0004 0268     		ldr	r2, [r0]
 4294 0006 D268     		ldr	r2, [r2, #12]
 4295 0008 1A80     		strh	r2, [r3]	@ movhi
3258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 4296              		.loc 1 3258 0
 4297 000a 836B     		ldr	r3, [r0, #56]
 4298 000c 0233     		adds	r3, r3, #2
 4299 000e 8363     		str	r3, [r0, #56]
3259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4300              		.loc 1 3259 0
 4301 0010 C38F     		ldrh	r3, [r0, #62]
 4302 0012 9BB2     		uxth	r3, r3
 4303 0014 013B     		subs	r3, r3, #1
 4304 0016 9BB2     		uxth	r3, r3
 4305 0018 C387     		strh	r3, [r0, #62]	@ movhi
3261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4306              		.loc 1 3261 0
 4307 001a C38F     		ldrh	r3, [r0, #62]
 4308 001c 9BB2     		uxth	r3, r3
 4309 001e 3BB9     		cbnz	r3, .L383
3272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4310              		.loc 1 3272 0
 4311 0020 0268     		ldr	r2, [r0]
 4312 0022 5368     		ldr	r3, [r2, #4]
 4313 0024 23F04003 		bic	r3, r3, #64
 4314 0028 5360     		str	r3, [r2, #4]
3274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4315              		.loc 1 3274 0
 4316 002a C38E     		ldrh	r3, [r0, #54]
 4317 002c 9BB2     		uxth	r3, r3
 4318 002e 03B1     		cbz	r3, .L386
 4319              	.LVL336:
 4320              	.L383:
 4321 0030 08BD     		pop	{r3, pc}
 4322              	.LVL337:
 4323              	.L386:
3276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4324              		.loc 1 3276 0
 4325 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4326              	.LVL338:
3279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 157


 4327              		.loc 1 3279 0
 4328 0036 FBE7     		b	.L383
 4329              		.cfi_endproc
 4330              	.LFE106:
 4332              		.section	.text.SPI_DMAError,"ax",%progbits
 4333              		.align	1
 4334              		.syntax unified
 4335              		.thumb
 4336              		.thumb_func
 4337              		.fpu softvfp
 4339              	SPI_DMAError:
 4340              	.LFB100:
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4341              		.loc 1 2996 0
 4342              		.cfi_startproc
 4343              		@ args = 0, pretend = 0, frame = 0
 4344              		@ frame_needed = 0, uses_anonymous_args = 0
 4345              	.LVL339:
 4346 0000 08B5     		push	{r3, lr}
 4347              	.LCFI64:
 4348              		.cfi_def_cfa_offset 8
 4349              		.cfi_offset 3, -8
 4350              		.cfi_offset 14, -4
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4351              		.loc 1 2997 0
 4352 0002 406A     		ldr	r0, [r0, #36]
 4353              	.LVL340:
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4354              		.loc 1 3000 0
 4355 0004 0268     		ldr	r2, [r0]
 4356 0006 5368     		ldr	r3, [r2, #4]
 4357 0008 23F00303 		bic	r3, r3, #3
 4358 000c 5360     		str	r3, [r2, #4]
3002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4359              		.loc 1 3002 0
 4360 000e 436D     		ldr	r3, [r0, #84]
 4361 0010 43F01003 		orr	r3, r3, #16
 4362 0014 4365     		str	r3, [r0, #84]
3003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
 4363              		.loc 1 3003 0
 4364 0016 0123     		movs	r3, #1
 4365 0018 80F85130 		strb	r3, [r0, #81]
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4366              		.loc 1 3008 0
 4367 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4368              	.LVL341:
 4369 0020 08BD     		pop	{r3, pc}
 4370              		.cfi_endproc
 4371              	.LFE100:
 4373              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4374              		.align	1
 4375              		.syntax unified
 4376              		.thumb
 4377              		.thumb_func
 4378              		.fpu softvfp
 4380              	SPI_DMATransmitCplt:
 4381              	.LFB94:
ARM GAS  /tmp/cc4FiPZj.s 			page 158


2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4382              		.loc 1 2706 0
 4383              		.cfi_startproc
 4384              		@ args = 0, pretend = 0, frame = 8
 4385              		@ frame_needed = 0, uses_anonymous_args = 0
 4386              	.LVL342:
 4387 0000 30B5     		push	{r4, r5, lr}
 4388              	.LCFI65:
 4389              		.cfi_def_cfa_offset 12
 4390              		.cfi_offset 4, -12
 4391              		.cfi_offset 5, -8
 4392              		.cfi_offset 14, -4
 4393 0002 83B0     		sub	sp, sp, #12
 4394              	.LCFI66:
 4395              		.cfi_def_cfa_offset 24
 4396 0004 0546     		mov	r5, r0
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 4397              		.loc 1 2707 0
 4398 0006 446A     		ldr	r4, [r0, #36]
 4399              	.LVL343:
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4400              		.loc 1 2711 0
 4401 0008 FFF7FEFF 		bl	HAL_GetTick
 4402              	.LVL344:
2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4403              		.loc 1 2714 0
 4404 000c 2B68     		ldr	r3, [r5]
 4405 000e 1B68     		ldr	r3, [r3]
 4406 0010 13F0200F 		tst	r3, #32
 4407 0014 23D1     		bne	.L390
2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4408              		.loc 1 2717 0
 4409 0016 2268     		ldr	r2, [r4]
 4410 0018 5368     		ldr	r3, [r2, #4]
 4411 001a 23F02003 		bic	r3, r3, #32
 4412 001e 5360     		str	r3, [r2, #4]
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4413              		.loc 1 2720 0
 4414 0020 2268     		ldr	r2, [r4]
 4415 0022 5368     		ldr	r3, [r2, #4]
 4416 0024 23F00203 		bic	r3, r3, #2
 4417 0028 5360     		str	r3, [r2, #4]
2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4418              		.loc 1 2723 0
 4419 002a 0246     		mov	r2, r0
 4420 002c 6421     		movs	r1, #100
 4421 002e 2046     		mov	r0, r4
 4422              	.LVL345:
 4423 0030 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4424              	.LVL346:
 4425 0034 18B1     		cbz	r0, .L391
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4426              		.loc 1 2725 0
 4427 0036 636D     		ldr	r3, [r4, #84]
 4428 0038 43F02003 		orr	r3, r3, #32
 4429 003c 6365     		str	r3, [r4, #84]
 4430              	.L391:
ARM GAS  /tmp/cc4FiPZj.s 			page 159


2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4431              		.loc 1 2729 0
 4432 003e A368     		ldr	r3, [r4, #8]
 4433 0040 33B9     		cbnz	r3, .L392
 4434              	.LBB8:
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4435              		.loc 1 2731 0
 4436 0042 0193     		str	r3, [sp, #4]
 4437 0044 2368     		ldr	r3, [r4]
 4438 0046 DA68     		ldr	r2, [r3, #12]
 4439 0048 0192     		str	r2, [sp, #4]
 4440 004a 9B68     		ldr	r3, [r3, #8]
 4441 004c 0193     		str	r3, [sp, #4]
 4442 004e 019B     		ldr	r3, [sp, #4]
 4443              	.L392:
 4444              	.LBE8:
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4445              		.loc 1 2734 0
 4446 0050 0023     		movs	r3, #0
 4447 0052 E386     		strh	r3, [r4, #54]	@ movhi
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4448              		.loc 1 2735 0
 4449 0054 0123     		movs	r3, #1
 4450 0056 84F85130 		strb	r3, [r4, #81]
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4451              		.loc 1 2737 0
 4452 005a 636D     		ldr	r3, [r4, #84]
 4453 005c 23B9     		cbnz	r3, .L395
 4454              	.L390:
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4455              		.loc 1 2752 0
 4456 005e 2046     		mov	r0, r4
 4457 0060 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4458              	.LVL347:
 4459              	.L389:
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4460              		.loc 1 2754 0
 4461 0064 03B0     		add	sp, sp, #12
 4462              	.LCFI67:
 4463              		.cfi_remember_state
 4464              		.cfi_def_cfa_offset 12
 4465              		@ sp needed
 4466 0066 30BD     		pop	{r4, r5, pc}
 4467              	.LVL348:
 4468              	.L395:
 4469              	.LCFI68:
 4470              		.cfi_restore_state
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4471              		.loc 1 2743 0
 4472 0068 2046     		mov	r0, r4
 4473 006a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4474              	.LVL349:
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4475              		.loc 1 2745 0
 4476 006e F9E7     		b	.L389
 4477              		.cfi_endproc
 4478              	.LFE94:
ARM GAS  /tmp/cc4FiPZj.s 			page 160


 4480              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4481              		.align	1
 4482              		.syntax unified
 4483              		.thumb
 4484              		.thumb_func
 4485              		.fpu softvfp
 4487              	SPI_DMAReceiveCplt:
 4488              	.LFB95:
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4489              		.loc 1 2763 0
 4490              		.cfi_startproc
 4491              		@ args = 0, pretend = 0, frame = 0
 4492              		@ frame_needed = 0, uses_anonymous_args = 0
 4493              	.LVL350:
 4494 0000 38B5     		push	{r3, r4, r5, lr}
 4495              	.LCFI69:
 4496              		.cfi_def_cfa_offset 16
 4497              		.cfi_offset 3, -16
 4498              		.cfi_offset 4, -12
 4499              		.cfi_offset 5, -8
 4500              		.cfi_offset 14, -4
 4501 0002 0546     		mov	r5, r0
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 4502              		.loc 1 2764 0
 4503 0004 446A     		ldr	r4, [r0, #36]
 4504              	.LVL351:
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4505              		.loc 1 2768 0
 4506 0006 FFF7FEFF 		bl	HAL_GetTick
 4507              	.LVL352:
2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4508              		.loc 1 2771 0
 4509 000a 2B68     		ldr	r3, [r5]
 4510 000c 1B68     		ldr	r3, [r3]
 4511 000e 13F0200F 		tst	r3, #32
 4512 0012 1ED1     		bne	.L397
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4513              		.loc 1 2774 0
 4514 0014 2168     		ldr	r1, [r4]
 4515 0016 4B68     		ldr	r3, [r1, #4]
 4516 0018 23F02003 		bic	r3, r3, #32
 4517 001c 4B60     		str	r3, [r1, #4]
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4518              		.loc 1 2792 0
 4519 001e A368     		ldr	r3, [r4, #8]
 4520 0020 1BB9     		cbnz	r3, .L398
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4521              		.loc 1 2792 0 is_stmt 0 discriminator 1
 4522 0022 6368     		ldr	r3, [r4, #4]
 4523 0024 B3F5827F 		cmp	r3, #260
 4524 0028 17D0     		beq	.L403
 4525              	.L398:
2800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4526              		.loc 1 2800 0 is_stmt 1
 4527 002a 2168     		ldr	r1, [r4]
 4528 002c 4B68     		ldr	r3, [r1, #4]
 4529 002e 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/cc4FiPZj.s 			page 161


 4530 0032 4B60     		str	r3, [r1, #4]
 4531              	.L399:
2804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4532              		.loc 1 2804 0
 4533 0034 0246     		mov	r2, r0
 4534 0036 6421     		movs	r1, #100
 4535 0038 2046     		mov	r0, r4
 4536              	.LVL353:
 4537 003a FFF7FEFF 		bl	SPI_EndRxTransaction
 4538              	.LVL354:
 4539 003e 08B1     		cbz	r0, .L400
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4540              		.loc 1 2806 0
 4541 0040 2023     		movs	r3, #32
 4542 0042 6365     		str	r3, [r4, #84]
 4543              	.L400:
2809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4544              		.loc 1 2809 0
 4545 0044 0023     		movs	r3, #0
 4546 0046 E387     		strh	r3, [r4, #62]	@ movhi
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4547              		.loc 1 2810 0
 4548 0048 0123     		movs	r3, #1
 4549 004a 84F85130 		strb	r3, [r4, #81]
2831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4550              		.loc 1 2831 0
 4551 004e 636D     		ldr	r3, [r4, #84]
 4552 0050 4BB9     		cbnz	r3, .L404
 4553              	.L397:
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4554              		.loc 1 2846 0
 4555 0052 2046     		mov	r0, r4
 4556 0054 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4557              	.LVL355:
 4558 0058 38BD     		pop	{r3, r4, r5, pc}
 4559              	.LVL356:
 4560              	.L403:
2795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4561              		.loc 1 2795 0
 4562 005a 2268     		ldr	r2, [r4]
 4563 005c 5368     		ldr	r3, [r2, #4]
 4564 005e 23F00303 		bic	r3, r3, #3
 4565 0062 5360     		str	r3, [r2, #4]
 4566 0064 E6E7     		b	.L399
 4567              	.LVL357:
 4568              	.L404:
2837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4569              		.loc 1 2837 0
 4570 0066 2046     		mov	r0, r4
 4571 0068 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4572              	.LVL358:
2839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4573              		.loc 1 2839 0
 4574 006c 38BD     		pop	{r3, r4, r5, pc}
 4575              		.cfi_endproc
 4576              	.LFE95:
 4578              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
ARM GAS  /tmp/cc4FiPZj.s 			page 162


 4579              		.align	1
 4580              		.syntax unified
 4581              		.thumb
 4582              		.thumb_func
 4583              		.fpu softvfp
 4585              	SPI_DMATransmitReceiveCplt:
 4586              	.LFB96:
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4587              		.loc 1 2857 0
 4588              		.cfi_startproc
 4589              		@ args = 0, pretend = 0, frame = 0
 4590              		@ frame_needed = 0, uses_anonymous_args = 0
 4591              	.LVL359:
 4592 0000 38B5     		push	{r3, r4, r5, lr}
 4593              	.LCFI70:
 4594              		.cfi_def_cfa_offset 16
 4595              		.cfi_offset 3, -16
 4596              		.cfi_offset 4, -12
 4597              		.cfi_offset 5, -8
 4598              		.cfi_offset 14, -4
 4599 0002 0546     		mov	r5, r0
2858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 4600              		.loc 1 2858 0
 4601 0004 446A     		ldr	r4, [r0, #36]
 4602              	.LVL360:
2862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4603              		.loc 1 2862 0
 4604 0006 FFF7FEFF 		bl	HAL_GetTick
 4605              	.LVL361:
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4606              		.loc 1 2865 0
 4607 000a 2B68     		ldr	r3, [r5]
 4608 000c 1B68     		ldr	r3, [r3]
 4609 000e 13F0200F 		tst	r3, #32
 4610 0012 1BD1     		bne	.L406
2868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4611              		.loc 1 2868 0
 4612 0014 2268     		ldr	r2, [r4]
 4613 0016 5368     		ldr	r3, [r2, #4]
 4614 0018 23F02003 		bic	r3, r3, #32
 4615 001c 5360     		str	r3, [r2, #4]
2885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4616              		.loc 1 2885 0
 4617 001e 0246     		mov	r2, r0
 4618 0020 6421     		movs	r1, #100
 4619 0022 2046     		mov	r0, r4
 4620              	.LVL362:
 4621 0024 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4622              	.LVL363:
 4623 0028 18B1     		cbz	r0, .L407
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4624              		.loc 1 2887 0
 4625 002a 636D     		ldr	r3, [r4, #84]
 4626 002c 43F02003 		orr	r3, r3, #32
 4627 0030 6365     		str	r3, [r4, #84]
 4628              	.L407:
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 163


 4629              		.loc 1 2891 0
 4630 0032 2268     		ldr	r2, [r4]
 4631 0034 5368     		ldr	r3, [r2, #4]
 4632 0036 23F00303 		bic	r3, r3, #3
 4633 003a 5360     		str	r3, [r2, #4]
2893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4634              		.loc 1 2893 0
 4635 003c 0023     		movs	r3, #0
 4636 003e E386     		strh	r3, [r4, #54]	@ movhi
2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4637              		.loc 1 2894 0
 4638 0040 E387     		strh	r3, [r4, #62]	@ movhi
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4639              		.loc 1 2895 0
 4640 0042 0123     		movs	r3, #1
 4641 0044 84F85130 		strb	r3, [r4, #81]
2916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4642              		.loc 1 2916 0
 4643 0048 636D     		ldr	r3, [r4, #84]
 4644 004a 1BB9     		cbnz	r3, .L410
 4645              	.L406:
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4646              		.loc 1 2931 0
 4647 004c 2046     		mov	r0, r4
 4648 004e FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4649              	.LVL364:
 4650 0052 38BD     		pop	{r3, r4, r5, pc}
 4651              	.LVL365:
 4652              	.L410:
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4653              		.loc 1 2922 0
 4654 0054 2046     		mov	r0, r4
 4655 0056 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4656              	.LVL366:
2924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4657              		.loc 1 2924 0
 4658 005a 38BD     		pop	{r3, r4, r5, pc}
 4659              		.cfi_endproc
 4660              	.LFE96:
 4662              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4663              		.align	1
 4664              		.global	HAL_SPI_IRQHandler
 4665              		.syntax unified
 4666              		.thumb
 4667              		.thumb_func
 4668              		.fpu softvfp
 4670              	HAL_SPI_IRQHandler:
 4671              	.LFB83:
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4672              		.loc 1 2418 0
 4673              		.cfi_startproc
 4674              		@ args = 0, pretend = 0, frame = 16
 4675              		@ frame_needed = 0, uses_anonymous_args = 0
 4676              	.LVL367:
 4677 0000 10B5     		push	{r4, lr}
 4678              	.LCFI71:
 4679              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc4FiPZj.s 			page 164


 4680              		.cfi_offset 4, -8
 4681              		.cfi_offset 14, -4
 4682 0002 84B0     		sub	sp, sp, #16
 4683              	.LCFI72:
 4684              		.cfi_def_cfa_offset 24
 4685 0004 0446     		mov	r4, r0
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4686              		.loc 1 2419 0
 4687 0006 0268     		ldr	r2, [r0]
 4688 0008 5168     		ldr	r1, [r2, #4]
 4689              	.LVL368:
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4690              		.loc 1 2420 0
 4691 000a 9368     		ldr	r3, [r2, #8]
 4692              	.LVL369:
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4693              		.loc 1 2423 0
 4694 000c 03F04100 		and	r0, r3, #65
 4695              	.LVL370:
 4696 0010 0128     		cmp	r0, #1
 4697 0012 5AD0     		beq	.L421
 4698              	.L412:
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4699              		.loc 1 2431 0
 4700 0014 13F0020F 		tst	r3, #2
 4701 0018 02D0     		beq	.L414
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4702              		.loc 1 2431 0 is_stmt 0 discriminator 1
 4703 001a 11F0800F 		tst	r1, #128
 4704 001e 5BD1     		bne	.L422
 4705              	.L414:
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 4706              		.loc 1 2438 0 is_stmt 1
 4707 0020 13F0600F 		tst	r3, #96
 4708 0024 5BD0     		beq	.L411
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4709              		.loc 1 2439 0
 4710 0026 11F0200F 		tst	r1, #32
 4711 002a 58D0     		beq	.L411
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4712              		.loc 1 2442 0
 4713 002c 13F0400F 		tst	r3, #64
 4714 0030 0FD0     		beq	.L415
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4715              		.loc 1 2444 0
 4716 0032 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 4717 0036 C0B2     		uxtb	r0, r0
 4718 0038 0328     		cmp	r0, #3
 4719 003a 52D0     		beq	.L416
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4720              		.loc 1 2446 0
 4721 003c 606D     		ldr	r0, [r4, #84]
 4722 003e 40F00400 		orr	r0, r0, #4
 4723 0042 6065     		str	r0, [r4, #84]
 4724              	.LBB9:
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4725              		.loc 1 2447 0
ARM GAS  /tmp/cc4FiPZj.s 			page 165


 4726 0044 0020     		movs	r0, #0
 4727 0046 0190     		str	r0, [sp, #4]
 4728 0048 D068     		ldr	r0, [r2, #12]
 4729 004a 0190     		str	r0, [sp, #4]
 4730 004c 9068     		ldr	r0, [r2, #8]
 4731 004e 0190     		str	r0, [sp, #4]
 4732 0050 0198     		ldr	r0, [sp, #4]
 4733              	.L415:
 4734              	.LBE9:
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4735              		.loc 1 2457 0
 4736 0052 13F0200F 		tst	r3, #32
 4737 0056 0CD0     		beq	.L417
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4738              		.loc 1 2459 0
 4739 0058 636D     		ldr	r3, [r4, #84]
 4740              	.LVL371:
 4741 005a 43F00103 		orr	r3, r3, #1
 4742 005e 6365     		str	r3, [r4, #84]
 4743              	.LBB10:
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 4744              		.loc 1 2460 0
 4745 0060 0023     		movs	r3, #0
 4746 0062 0393     		str	r3, [sp, #12]
 4747 0064 9368     		ldr	r3, [r2, #8]
 4748 0066 0393     		str	r3, [sp, #12]
 4749 0068 1368     		ldr	r3, [r2]
 4750 006a 23F04003 		bic	r3, r3, #64
 4751 006e 1360     		str	r3, [r2]
 4752 0070 039B     		ldr	r3, [sp, #12]
 4753              	.L417:
 4754              	.LBE10:
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 4755              		.loc 1 2465 0
 4756 0072 636D     		ldr	r3, [r4, #84]
 4757 0074 002B     		cmp	r3, #0
 4758 0076 32D0     		beq	.L411
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4759              		.loc 1 2468 0
 4760 0078 2268     		ldr	r2, [r4]
 4761 007a 5368     		ldr	r3, [r2, #4]
 4762 007c 23F0E003 		bic	r3, r3, #224
 4763 0080 5360     		str	r3, [r2, #4]
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 4764              		.loc 1 2470 0
 4765 0082 0123     		movs	r3, #1
 4766 0084 84F85130 		strb	r3, [r4, #81]
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4767              		.loc 1 2472 0
 4768 0088 11F0030F 		tst	r1, #3
 4769 008c 31D0     		beq	.L418
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4770              		.loc 1 2474 0
 4771 008e 2268     		ldr	r2, [r4]
 4772 0090 5368     		ldr	r3, [r2, #4]
 4773 0092 23F00303 		bic	r3, r3, #3
 4774 0096 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cc4FiPZj.s 			page 166


2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4775              		.loc 1 2477 0
 4776 0098 E36C     		ldr	r3, [r4, #76]
 4777 009a 4BB1     		cbz	r3, .L419
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 4778              		.loc 1 2481 0
 4779 009c 174A     		ldr	r2, .L423
 4780 009e 5A63     		str	r2, [r3, #52]
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
 4781              		.loc 1 2482 0
 4782 00a0 E06C     		ldr	r0, [r4, #76]
 4783 00a2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4784              	.LVL372:
 4785 00a6 18B1     		cbz	r0, .L419
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
 4786              		.loc 1 2484 0
 4787 00a8 636D     		ldr	r3, [r4, #84]
 4788 00aa 43F04003 		orr	r3, r3, #64
 4789 00ae 6365     		str	r3, [r4, #84]
 4790              	.L419:
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4791              		.loc 1 2488 0
 4792 00b0 A36C     		ldr	r3, [r4, #72]
 4793 00b2 A3B1     		cbz	r3, .L411
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 4794              		.loc 1 2492 0
 4795 00b4 114A     		ldr	r2, .L423
 4796 00b6 5A63     		str	r2, [r3, #52]
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
 4797              		.loc 1 2493 0
 4798 00b8 A06C     		ldr	r0, [r4, #72]
 4799 00ba FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4800              	.LVL373:
 4801 00be 70B1     		cbz	r0, .L411
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
 4802              		.loc 1 2495 0
 4803 00c0 636D     		ldr	r3, [r4, #84]
 4804 00c2 43F04003 		orr	r3, r3, #64
 4805 00c6 6365     		str	r3, [r4, #84]
 4806 00c8 09E0     		b	.L411
 4807              	.LVL374:
 4808              	.L421:
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4809              		.loc 1 2424 0
 4810 00ca 11F0400F 		tst	r1, #64
 4811 00ce A1D0     		beq	.L412
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4812              		.loc 1 2426 0
 4813 00d0 236C     		ldr	r3, [r4, #64]
 4814              	.LVL375:
 4815 00d2 2046     		mov	r0, r4
 4816 00d4 9847     		blx	r3
 4817              	.LVL376:
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4818              		.loc 1 2427 0
 4819 00d6 02E0     		b	.L411
 4820              	.LVL377:
ARM GAS  /tmp/cc4FiPZj.s 			page 167


 4821              	.L422:
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4822              		.loc 1 2433 0
 4823 00d8 636C     		ldr	r3, [r4, #68]
 4824              	.LVL378:
 4825 00da 2046     		mov	r0, r4
 4826 00dc 9847     		blx	r3
 4827              	.LVL379:
 4828              	.L411:
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4829              		.loc 1 2511 0
 4830 00de 04B0     		add	sp, sp, #16
 4831              	.LCFI73:
 4832              		.cfi_remember_state
 4833              		.cfi_def_cfa_offset 8
 4834              		@ sp needed
 4835 00e0 10BD     		pop	{r4, pc}
 4836              	.LVL380:
 4837              	.L416:
 4838              	.LCFI74:
 4839              		.cfi_restore_state
 4840              	.LBB11:
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return;
 4841              		.loc 1 2451 0
 4842 00e2 0023     		movs	r3, #0
 4843              	.LVL381:
 4844 00e4 0293     		str	r3, [sp, #8]
 4845 00e6 D368     		ldr	r3, [r2, #12]
 4846 00e8 0293     		str	r3, [sp, #8]
 4847 00ea 9368     		ldr	r3, [r2, #8]
 4848 00ec 0293     		str	r3, [sp, #8]
 4849 00ee 029B     		ldr	r3, [sp, #8]
 4850              	.LBE11:
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 4851              		.loc 1 2452 0
 4852 00f0 F5E7     		b	.L411
 4853              	.L418:
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4854              		.loc 1 2505 0
 4855 00f2 2046     		mov	r0, r4
 4856 00f4 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4857              	.LVL382:
 4858 00f8 F1E7     		b	.L411
 4859              	.L424:
 4860 00fa 00BF     		.align	2
 4861              	.L423:
 4862 00fc 00000000 		.word	SPI_DMAAbortOnError
 4863              		.cfi_endproc
 4864              	.LFE83:
 4866              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 4867              		.align	1
 4868              		.syntax unified
 4869              		.thumb
 4870              		.thumb_func
 4871              		.fpu softvfp
 4873              	SPI_DMAAbortOnError:
 4874              	.LFB101:
ARM GAS  /tmp/cc4FiPZj.s 			page 168


3019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4875              		.loc 1 3019 0
 4876              		.cfi_startproc
 4877              		@ args = 0, pretend = 0, frame = 0
 4878              		@ frame_needed = 0, uses_anonymous_args = 0
 4879              	.LVL383:
 4880 0000 08B5     		push	{r3, lr}
 4881              	.LCFI75:
 4882              		.cfi_def_cfa_offset 8
 4883              		.cfi_offset 3, -8
 4884              		.cfi_offset 14, -4
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 4885              		.loc 1 3020 0
 4886 0002 406A     		ldr	r0, [r0, #36]
 4887              	.LVL384:
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4888              		.loc 1 3021 0
 4889 0004 0023     		movs	r3, #0
 4890 0006 C387     		strh	r3, [r0, #62]	@ movhi
3022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4891              		.loc 1 3022 0
 4892 0008 C386     		strh	r3, [r0, #54]	@ movhi
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4893              		.loc 1 3028 0
 4894 000a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4895              	.LVL385:
 4896 000e 08BD     		pop	{r3, pc}
 4897              		.cfi_endproc
 4898              	.LFE101:
 4900              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4901              		.align	1
 4902              		.weak	HAL_SPI_AbortCpltCallback
 4903              		.syntax unified
 4904              		.thumb
 4905              		.thumb_func
 4906              		.fpu softvfp
 4908              	HAL_SPI_AbortCpltCallback:
 4909              	.LFB91:
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4910              		.loc 1 2634 0
 4911              		.cfi_startproc
 4912              		@ args = 0, pretend = 0, frame = 0
 4913              		@ frame_needed = 0, uses_anonymous_args = 0
 4914              		@ link register save eliminated.
 4915              	.LVL386:
 4916 0000 7047     		bx	lr
 4917              		.cfi_endproc
 4918              	.LFE91:
 4920              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 4921              		.align	1
 4922              		.global	HAL_SPI_Abort_IT
 4923              		.syntax unified
 4924              		.thumb
 4925              		.thumb_func
 4926              		.fpu softvfp
 4928              	HAL_SPI_Abort_IT:
 4929              	.LFB79:
ARM GAS  /tmp/cc4FiPZj.s 			page 169


2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4930              		.loc 1 2178 0
 4931              		.cfi_startproc
 4932              		@ args = 0, pretend = 0, frame = 16
 4933              		@ frame_needed = 0, uses_anonymous_args = 0
 4934              	.LVL387:
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4935              		.loc 1 2178 0
 4936 0000 30B5     		push	{r4, r5, lr}
 4937              	.LCFI76:
 4938              		.cfi_def_cfa_offset 12
 4939              		.cfi_offset 4, -12
 4940              		.cfi_offset 5, -8
 4941              		.cfi_offset 14, -4
 4942 0002 85B0     		sub	sp, sp, #20
 4943              	.LCFI77:
 4944              		.cfi_def_cfa_offset 32
 4945 0004 0446     		mov	r4, r0
 4946              	.LVL388:
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
 4947              		.loc 1 2187 0
 4948 0006 4E4B     		ldr	r3, .L455
 4949 0008 1B68     		ldr	r3, [r3]
 4950 000a 4E4A     		ldr	r2, .L455+4
 4951 000c A2FB0323 		umull	r2, r3, r2, r3
 4952 0010 5B0A     		lsrs	r3, r3, #9
 4953 0012 6422     		movs	r2, #100
 4954 0014 02FB03F3 		mul	r3, r2, r3
 4955 0018 0293     		str	r3, [sp, #8]
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4956              		.loc 1 2188 0
 4957 001a 029B     		ldr	r3, [sp, #8]
 4958 001c 0393     		str	r3, [sp, #12]
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 4959              		.loc 1 2191 0
 4960 001e 0268     		ldr	r2, [r0]
 4961 0020 5368     		ldr	r3, [r2, #4]
 4962 0022 23F02003 		bic	r3, r3, #32
 4963 0026 5360     		str	r3, [r2, #4]
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4964              		.loc 1 2194 0
 4965 0028 0268     		ldr	r2, [r0]
 4966 002a 5368     		ldr	r3, [r2, #4]
 4967 002c 13F0800F 		tst	r3, #128
 4968 0030 12D0     		beq	.L429
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4969              		.loc 1 2196 0
 4970 0032 454B     		ldr	r3, .L455+8
 4971 0034 4364     		str	r3, [r0, #68]
 4972              	.L432:
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 4973              		.loc 1 2200 0
 4974 0036 039B     		ldr	r3, [sp, #12]
 4975 0038 43B1     		cbz	r3, .L452
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4976              		.loc 1 2205 0
 4977 003a 039B     		ldr	r3, [sp, #12]
ARM GAS  /tmp/cc4FiPZj.s 			page 170


 4978 003c 013B     		subs	r3, r3, #1
 4979 003e 0393     		str	r3, [sp, #12]
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
 4980              		.loc 1 2206 0
 4981 0040 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4982 0044 DBB2     		uxtb	r3, r3
 4983 0046 072B     		cmp	r3, #7
 4984 0048 F5D1     		bne	.L432
 4985 004a 03E0     		b	.L431
 4986              	.L452:
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 4987              		.loc 1 2202 0
 4988 004c 636D     		ldr	r3, [r4, #84]
 4989 004e 43F04003 		orr	r3, r3, #64
 4990 0052 6365     		str	r3, [r4, #84]
 4991              	.L431:
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 4992              		.loc 1 2208 0
 4993 0054 029B     		ldr	r3, [sp, #8]
 4994 0056 0393     		str	r3, [sp, #12]
 4995              	.L429:
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 4996              		.loc 1 2211 0
 4997 0058 5368     		ldr	r3, [r2, #4]
 4998 005a 13F0400F 		tst	r3, #64
 4999 005e 12D0     		beq	.L433
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 5000              		.loc 1 2213 0
 5001 0060 3A4B     		ldr	r3, .L455+12
 5002 0062 2364     		str	r3, [r4, #64]
 5003              	.L436:
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 5004              		.loc 1 2217 0
 5005 0064 039B     		ldr	r3, [sp, #12]
 5006 0066 43B1     		cbz	r3, .L453
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 5007              		.loc 1 2222 0
 5008 0068 039B     		ldr	r3, [sp, #12]
 5009 006a 013B     		subs	r3, r3, #1
 5010 006c 0393     		str	r3, [sp, #12]
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
 5011              		.loc 1 2223 0
 5012 006e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 5013 0072 DBB2     		uxtb	r3, r3
 5014 0074 072B     		cmp	r3, #7
 5015 0076 F5D1     		bne	.L436
 5016 0078 03E0     		b	.L435
 5017              	.L453:
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 5018              		.loc 1 2219 0
 5019 007a 636D     		ldr	r3, [r4, #84]
 5020 007c 43F04003 		orr	r3, r3, #64
 5021 0080 6365     		str	r3, [r4, #84]
 5022              	.L435:
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 5023              		.loc 1 2225 0
 5024 0082 029B     		ldr	r3, [sp, #8]
ARM GAS  /tmp/cc4FiPZj.s 			page 171


 5025 0084 0393     		str	r3, [sp, #12]
 5026              	.L433:
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5027              		.loc 1 2231 0
 5028 0086 A36C     		ldr	r3, [r4, #72]
 5029 0088 2BB1     		cbz	r3, .L437
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5030              		.loc 1 2235 0
 5031 008a 5268     		ldr	r2, [r2, #4]
 5032 008c 12F0020F 		tst	r2, #2
 5033 0090 1BD0     		beq	.L438
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5034              		.loc 1 2237 0
 5035 0092 2F4A     		ldr	r2, .L455+16
 5036 0094 5A63     		str	r2, [r3, #52]
 5037              	.L437:
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5038              		.loc 1 2245 0
 5039 0096 E36C     		ldr	r3, [r4, #76]
 5040 0098 33B1     		cbz	r3, .L439
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5041              		.loc 1 2249 0
 5042 009a 2268     		ldr	r2, [r4]
 5043 009c 5268     		ldr	r2, [r2, #4]
 5044 009e 12F0010F 		tst	r2, #1
 5045 00a2 15D0     		beq	.L440
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5046              		.loc 1 2251 0
 5047 00a4 2B4A     		ldr	r2, .L455+20
 5048 00a6 5A63     		str	r2, [r3, #52]
 5049              	.L439:
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5050              		.loc 1 2260 0
 5051 00a8 2368     		ldr	r3, [r4]
 5052 00aa 5B68     		ldr	r3, [r3, #4]
 5053 00ac 13F0020F 		tst	r3, #2
 5054 00b0 11D0     		beq	.L445
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5055              		.loc 1 2263 0
 5056 00b2 A06C     		ldr	r0, [r4, #72]
 5057              	.LVL389:
 5058 00b4 20B3     		cbz	r0, .L446
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 5059              		.loc 1 2266 0
 5060 00b6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5061              	.LVL390:
 5062 00ba 18B3     		cbz	r0, .L447
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5063              		.loc 1 2268 0
 5064 00bc A36C     		ldr	r3, [r4, #72]
 5065 00be 0022     		movs	r2, #0
 5066 00c0 5A63     		str	r2, [r3, #52]
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 5067              		.loc 1 2269 0
 5068 00c2 4023     		movs	r3, #64
 5069 00c4 6365     		str	r3, [r4, #84]
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
ARM GAS  /tmp/cc4FiPZj.s 			page 172


 5070              		.loc 1 2186 0
 5071 00c6 0125     		movs	r5, #1
 5072 00c8 06E0     		b	.L441
 5073              	.LVL391:
 5074              	.L438:
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5075              		.loc 1 2241 0
 5076 00ca 0022     		movs	r2, #0
 5077 00cc 5A63     		str	r2, [r3, #52]
 5078 00ce E2E7     		b	.L437
 5079              	.L440:
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5080              		.loc 1 2255 0
 5081 00d0 0022     		movs	r2, #0
 5082 00d2 5A63     		str	r2, [r3, #52]
 5083 00d4 E8E7     		b	.L439
 5084              	.L445:
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5085              		.loc 1 2186 0
 5086 00d6 0125     		movs	r5, #1
 5087              	.LVL392:
 5088              	.L441:
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5089              		.loc 1 2278 0
 5090 00d8 2368     		ldr	r3, [r4]
 5091 00da 5B68     		ldr	r3, [r3, #4]
 5092 00dc 13F0010F 		tst	r3, #1
 5093 00e0 09D0     		beq	.L442
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5094              		.loc 1 2281 0
 5095 00e2 E06C     		ldr	r0, [r4, #76]
 5096 00e4 38B1     		cbz	r0, .L442
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 5097              		.loc 1 2284 0
 5098 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5099              	.LVL393:
 5100 00ea 68B1     		cbz	r0, .L448
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5101              		.loc 1 2286 0
 5102 00ec E36C     		ldr	r3, [r4, #76]
 5103 00ee 0022     		movs	r2, #0
 5104 00f0 5A63     		str	r2, [r3, #52]
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 5105              		.loc 1 2287 0
 5106 00f2 4023     		movs	r3, #64
 5107 00f4 6365     		str	r3, [r4, #84]
 5108              	.LVL394:
 5109              	.L442:
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5110              		.loc 1 2296 0
 5111 00f6 4DB9     		cbnz	r5, .L454
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   abortcplt = 1U;
 5112              		.loc 1 2185 0
 5113 00f8 0025     		movs	r5, #0
 5114              	.LVL395:
 5115              	.L443:
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/cc4FiPZj.s 			page 173


 5116              		.loc 1 2329 0
 5117 00fa 2846     		mov	r0, r5
 5118 00fc 05B0     		add	sp, sp, #20
 5119              	.LCFI78:
 5120              		.cfi_remember_state
 5121              		.cfi_def_cfa_offset 12
 5122              		@ sp needed
 5123 00fe 30BD     		pop	{r4, r5, pc}
 5124              	.LVL396:
 5125              	.L446:
 5126              	.LCFI79:
 5127              		.cfi_restore_state
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5128              		.loc 1 2186 0
 5129 0100 0125     		movs	r5, #1
 5130 0102 E9E7     		b	.L441
 5131              	.L447:
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 5132              		.loc 1 2273 0
 5133 0104 0025     		movs	r5, #0
 5134 0106 E7E7     		b	.L441
 5135              	.LVL397:
 5136              	.L448:
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 5137              		.loc 1 2291 0
 5138 0108 0025     		movs	r5, #0
 5139              	.LVL398:
 5140 010a F4E7     		b	.L442
 5141              	.LVL399:
 5142              	.L454:
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5143              		.loc 1 2299 0
 5144 010c 0023     		movs	r3, #0
 5145 010e E387     		strh	r3, [r4, #62]	@ movhi
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5146              		.loc 1 2300 0
 5147 0110 E386     		strh	r3, [r4, #54]	@ movhi
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5148              		.loc 1 2303 0
 5149 0112 636D     		ldr	r3, [r4, #84]
 5150 0114 402B     		cmp	r3, #64
 5151 0116 10D0     		beq	.L450
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5152              		.loc 1 2311 0
 5153 0118 0025     		movs	r5, #0
 5154              	.LVL400:
 5155 011a 6565     		str	r5, [r4, #84]
 5156              	.L444:
 5157              	.LVL401:
 5158              	.LBB12:
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5159              		.loc 1 2315 0
 5160 011c 0023     		movs	r3, #0
 5161 011e 0193     		str	r3, [sp, #4]
 5162 0120 2368     		ldr	r3, [r4]
 5163 0122 DA68     		ldr	r2, [r3, #12]
 5164 0124 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/cc4FiPZj.s 			page 174


 5165 0126 9B68     		ldr	r3, [r3, #8]
 5166 0128 0193     		str	r3, [sp, #4]
 5167 012a 019B     		ldr	r3, [sp, #4]
 5168              	.LBE12:
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5169              		.loc 1 2318 0
 5170 012c 0123     		movs	r3, #1
 5171 012e 84F85130 		strb	r3, [r4, #81]
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5172              		.loc 1 2324 0
 5173 0132 2046     		mov	r0, r4
 5174 0134 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5175              	.LVL402:
 5176 0138 DFE7     		b	.L443
 5177              	.LVL403:
 5178              	.L450:
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5179              		.loc 1 2306 0
 5180 013a 0125     		movs	r5, #1
 5181              	.LVL404:
 5182 013c EEE7     		b	.L444
 5183              	.L456:
 5184 013e 00BF     		.align	2
 5185              	.L455:
 5186 0140 00000000 		.word	SystemCoreClock
 5187 0144 F1197605 		.word	91625969
 5188 0148 00000000 		.word	SPI_AbortTx_ISR
 5189 014c 00000000 		.word	SPI_AbortRx_ISR
 5190 0150 00000000 		.word	SPI_DMATxAbortCallback
 5191 0154 00000000 		.word	SPI_DMARxAbortCallback
 5192              		.cfi_endproc
 5193              	.LFE79:
 5195              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5196              		.align	1
 5197              		.syntax unified
 5198              		.thumb
 5199              		.thumb_func
 5200              		.fpu softvfp
 5202              	SPI_DMARxAbortCallback:
 5203              	.LFB103:
3105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5204              		.loc 1 3105 0
 5205              		.cfi_startproc
 5206              		@ args = 0, pretend = 0, frame = 8
 5207              		@ frame_needed = 0, uses_anonymous_args = 0
 5208              	.LVL405:
 5209 0000 10B5     		push	{r4, lr}
 5210              	.LCFI80:
 5211              		.cfi_def_cfa_offset 8
 5212              		.cfi_offset 4, -8
 5213              		.cfi_offset 14, -4
 5214 0002 82B0     		sub	sp, sp, #8
 5215              	.LCFI81:
 5216              		.cfi_def_cfa_offset 16
3106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5217              		.loc 1 3106 0
 5218 0004 446A     		ldr	r4, [r0, #36]
ARM GAS  /tmp/cc4FiPZj.s 			page 175


 5219              	.LVL406:
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5220              		.loc 1 3109 0
 5221 0006 2268     		ldr	r2, [r4]
 5222 0008 1368     		ldr	r3, [r2]
 5223 000a 23F04003 		bic	r3, r3, #64
 5224 000e 1360     		str	r3, [r2]
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5225              		.loc 1 3111 0
 5226 0010 E36C     		ldr	r3, [r4, #76]
 5227 0012 0022     		movs	r2, #0
 5228 0014 5A63     		str	r2, [r3, #52]
3114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5229              		.loc 1 3114 0
 5230 0016 2268     		ldr	r2, [r4]
 5231 0018 5368     		ldr	r3, [r2, #4]
 5232 001a 23F00103 		bic	r3, r3, #1
 5233 001e 5360     		str	r3, [r2, #4]
3117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5234              		.loc 1 3117 0
 5235 0020 FFF7FEFF 		bl	HAL_GetTick
 5236              	.LVL407:
 5237 0024 0246     		mov	r2, r0
 5238 0026 6421     		movs	r1, #100
 5239 0028 2046     		mov	r0, r4
 5240 002a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5241              	.LVL408:
 5242 002e 18B1     		cbz	r0, .L458
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 5243              		.loc 1 3119 0
 5244 0030 636D     		ldr	r3, [r4, #84]
 5245 0032 43F04003 		orr	r3, r3, #64
 5246 0036 6365     		str	r3, [r4, #84]
 5247              	.L458:
3123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5248              		.loc 1 3123 0
 5249 0038 A36C     		ldr	r3, [r4, #72]
 5250 003a 1BB1     		cbz	r3, .L459
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5251              		.loc 1 3125 0
 5252 003c 5B6B     		ldr	r3, [r3, #52]
 5253 003e 0BB1     		cbz	r3, .L459
 5254              	.L457:
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5255              		.loc 1 3154 0
 5256 0040 02B0     		add	sp, sp, #8
 5257              	.LCFI82:
 5258              		.cfi_remember_state
 5259              		.cfi_def_cfa_offset 8
 5260              		@ sp needed
 5261 0042 10BD     		pop	{r4, pc}
 5262              	.LVL409:
 5263              	.L459:
 5264              	.LCFI83:
 5265              		.cfi_restore_state
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5266              		.loc 1 3132 0
ARM GAS  /tmp/cc4FiPZj.s 			page 176


 5267 0044 0023     		movs	r3, #0
 5268 0046 E387     		strh	r3, [r4, #62]	@ movhi
3133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5269              		.loc 1 3133 0
 5270 0048 E386     		strh	r3, [r4, #54]	@ movhi
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5271              		.loc 1 3136 0
 5272 004a 636D     		ldr	r3, [r4, #84]
 5273 004c 402B     		cmp	r3, #64
 5274 004e 01D0     		beq	.L461
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 5275              		.loc 1 3139 0
 5276 0050 0023     		movs	r3, #0
 5277 0052 6365     		str	r3, [r4, #84]
 5278              	.L461:
 5279              	.LBB13:
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5280              		.loc 1 3143 0
 5281 0054 0023     		movs	r3, #0
 5282 0056 0193     		str	r3, [sp, #4]
 5283 0058 2368     		ldr	r3, [r4]
 5284 005a DA68     		ldr	r2, [r3, #12]
 5285 005c 0192     		str	r2, [sp, #4]
 5286 005e 9B68     		ldr	r3, [r3, #8]
 5287 0060 0193     		str	r3, [sp, #4]
 5288 0062 019B     		ldr	r3, [sp, #4]
 5289              	.LBE13:
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5290              		.loc 1 3146 0
 5291 0064 0123     		movs	r3, #1
 5292 0066 84F85130 		strb	r3, [r4, #81]
3152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5293              		.loc 1 3152 0
 5294 006a 2046     		mov	r0, r4
 5295 006c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5296              	.LVL410:
 5297 0070 E6E7     		b	.L457
 5298              		.cfi_endproc
 5299              	.LFE103:
 5301              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5302              		.align	1
 5303              		.syntax unified
 5304              		.thumb
 5305              		.thumb_func
 5306              		.fpu softvfp
 5308              	SPI_DMATxAbortCallback:
 5309              	.LFB102:
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5310              		.loc 1 3041 0
 5311              		.cfi_startproc
 5312              		@ args = 0, pretend = 0, frame = 8
 5313              		@ frame_needed = 0, uses_anonymous_args = 0
 5314              	.LVL411:
 5315 0000 00B5     		push	{lr}
 5316              	.LCFI84:
 5317              		.cfi_def_cfa_offset 4
 5318              		.cfi_offset 14, -4
ARM GAS  /tmp/cc4FiPZj.s 			page 177


 5319 0002 83B0     		sub	sp, sp, #12
 5320              	.LCFI85:
 5321              		.cfi_def_cfa_offset 16
3042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
 5322              		.loc 1 3042 0
 5323 0004 406A     		ldr	r0, [r0, #36]
 5324              	.LVL412:
3045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5325              		.loc 1 3045 0
 5326 0006 836C     		ldr	r3, [r0, #72]
 5327 0008 0022     		movs	r2, #0
 5328 000a 5A63     		str	r2, [r3, #52]
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5329              		.loc 1 3046 0
 5330 000c 1D4B     		ldr	r3, .L472
 5331 000e 1B68     		ldr	r3, [r3]
 5332 0010 1D4A     		ldr	r2, .L472+4
 5333 0012 A2FB0323 		umull	r2, r3, r2, r3
 5334 0016 5B0A     		lsrs	r3, r3, #9
 5335 0018 6422     		movs	r2, #100
 5336 001a 02FB03F3 		mul	r3, r2, r3
 5337 001e 0193     		str	r3, [sp, #4]
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5338              		.loc 1 3049 0
 5339 0020 0268     		ldr	r2, [r0]
 5340 0022 5368     		ldr	r3, [r2, #4]
 5341 0024 23F00203 		bic	r3, r3, #2
 5342 0028 5360     		str	r3, [r2, #4]
 5343              	.L466:
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 5344              		.loc 1 3054 0
 5345 002a 019B     		ldr	r3, [sp, #4]
 5346 002c 43B1     		cbz	r3, .L471
3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 5347              		.loc 1 3059 0
 5348 002e 019B     		ldr	r3, [sp, #4]
 5349 0030 013B     		subs	r3, r3, #1
 5350 0032 0193     		str	r3, [sp, #4]
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5351              		.loc 1 3060 0
 5352 0034 0368     		ldr	r3, [r0]
 5353 0036 9B68     		ldr	r3, [r3, #8]
 5354 0038 13F0020F 		tst	r3, #2
 5355 003c F5D0     		beq	.L466
 5356 003e 03E0     		b	.L465
 5357              	.L471:
3056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 5358              		.loc 1 3056 0
 5359 0040 436D     		ldr	r3, [r0, #84]
 5360 0042 43F04003 		orr	r3, r3, #64
 5361 0046 4365     		str	r3, [r0, #84]
 5362              	.L465:
3063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5363              		.loc 1 3063 0
 5364 0048 C36C     		ldr	r3, [r0, #76]
 5365 004a 23B1     		cbz	r3, .L467
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/cc4FiPZj.s 			page 178


 5366              		.loc 1 3065 0
 5367 004c 5B6B     		ldr	r3, [r3, #52]
 5368 004e 13B1     		cbz	r3, .L467
 5369              	.LVL413:
 5370              	.L463:
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5371              		.loc 1 3094 0
 5372 0050 03B0     		add	sp, sp, #12
 5373              	.LCFI86:
 5374              		.cfi_remember_state
 5375              		.cfi_def_cfa_offset 4
 5376              		@ sp needed
 5377 0052 5DF804FB 		ldr	pc, [sp], #4
 5378              	.LVL414:
 5379              	.L467:
 5380              	.LCFI87:
 5381              		.cfi_restore_state
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5382              		.loc 1 3072 0
 5383 0056 0023     		movs	r3, #0
 5384 0058 C387     		strh	r3, [r0, #62]	@ movhi
3073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5385              		.loc 1 3073 0
 5386 005a C386     		strh	r3, [r0, #54]	@ movhi
3076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 5387              		.loc 1 3076 0
 5388 005c 436D     		ldr	r3, [r0, #84]
 5389 005e 402B     		cmp	r3, #64
 5390 0060 01D0     		beq	.L469
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 5391              		.loc 1 3079 0
 5392 0062 0023     		movs	r3, #0
 5393 0064 4365     		str	r3, [r0, #84]
 5394              	.L469:
 5395              	.LBB14:
3083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5396              		.loc 1 3083 0
 5397 0066 0023     		movs	r3, #0
 5398 0068 0093     		str	r3, [sp]
 5399 006a 0368     		ldr	r3, [r0]
 5400 006c DA68     		ldr	r2, [r3, #12]
 5401 006e 0092     		str	r2, [sp]
 5402 0070 9B68     		ldr	r3, [r3, #8]
 5403 0072 0093     		str	r3, [sp]
 5404 0074 009B     		ldr	r3, [sp]
 5405              	.LBE14:
3086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5406              		.loc 1 3086 0
 5407 0076 0123     		movs	r3, #1
 5408 0078 80F85130 		strb	r3, [r0, #81]
3092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5409              		.loc 1 3092 0
 5410 007c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5411              	.LVL415:
 5412 0080 E6E7     		b	.L463
 5413              	.L473:
 5414 0082 00BF     		.align	2
ARM GAS  /tmp/cc4FiPZj.s 			page 179


 5415              	.L472:
 5416 0084 00000000 		.word	SystemCoreClock
 5417 0088 F1197605 		.word	91625969
 5418              		.cfi_endproc
 5419              	.LFE102:
 5421              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 5422              		.align	1
 5423              		.global	HAL_SPI_GetState
 5424              		.syntax unified
 5425              		.thumb
 5426              		.thumb_func
 5427              		.fpu softvfp
 5429              	HAL_SPI_GetState:
 5430              	.LFB92:
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI handle state */
 5431              		.loc 1 2669 0
 5432              		.cfi_startproc
 5433              		@ args = 0, pretend = 0, frame = 0
 5434              		@ frame_needed = 0, uses_anonymous_args = 0
 5435              		@ link register save eliminated.
 5436              	.LVL416:
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5437              		.loc 1 2671 0
 5438 0000 90F85100 		ldrb	r0, [r0, #81]	@ zero_extendqisi2
 5439              	.LVL417:
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5440              		.loc 1 2672 0
 5441 0004 7047     		bx	lr
 5442              		.cfi_endproc
 5443              	.LFE92:
 5445              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5446              		.align	1
 5447              		.global	HAL_SPI_GetError
 5448              		.syntax unified
 5449              		.thumb
 5450              		.thumb_func
 5451              		.fpu softvfp
 5453              	HAL_SPI_GetError:
 5454              	.LFB93:
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI ErrorCode */
 5455              		.loc 1 2681 0
 5456              		.cfi_startproc
 5457              		@ args = 0, pretend = 0, frame = 0
 5458              		@ frame_needed = 0, uses_anonymous_args = 0
 5459              		@ link register save eliminated.
 5460              	.LVL418:
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5461              		.loc 1 2683 0
 5462 0000 406D     		ldr	r0, [r0, #84]
 5463              	.LVL419:
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 5464              		.loc 1 2684 0
 5465 0002 7047     		bx	lr
 5466              		.cfi_endproc
 5467              	.LFE93:
 5469              		.text
 5470              	.Letext0:
ARM GAS  /tmp/cc4FiPZj.s 			page 180


 5471              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5472              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5473              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 5474              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 5475              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 5476              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 5477              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5478              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5479              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 5480              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cc4FiPZj.s 			page 181


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_spi.c
     /tmp/cc4FiPZj.s:16     .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/cc4FiPZj.s:22     .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/cc4FiPZj.s:88     .text.SPI_AbortRx_ISR:0000000000000058 $d
     /tmp/cc4FiPZj.s:94     .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/cc4FiPZj.s:100    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/cc4FiPZj.s:126    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/cc4FiPZj.s:132    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/cc4FiPZj.s:274    .text.SPI_WaitFlagStateUntilTimeout:00000000000000cc $d
     /tmp/cc4FiPZj.s:279    .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/cc4FiPZj.s:285    .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/cc4FiPZj.s:330    .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/cc4FiPZj.s:336    .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/cc4FiPZj.s:437    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/cc4FiPZj.s:444    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/cc4FiPZj.s:457    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/cc4FiPZj.s:464    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/cc4FiPZj.s:587    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/cc4FiPZj.s:594    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/cc4FiPZj.s:607    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/cc4FiPZj.s:614    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/cc4FiPZj.s:664    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/cc4FiPZj.s:671    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/cc4FiPZj.s:992    .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/cc4FiPZj.s:999    .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/cc4FiPZj.s:1443   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/cc4FiPZj.s:1450   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/cc4FiPZj.s:1731   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/cc4FiPZj.s:1738   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/cc4FiPZj.s:1870   .text.HAL_SPI_Transmit_IT:00000000000000a0 $d
     /tmp/cc4FiPZj.s:3719   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/cc4FiPZj.s:3668   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/cc4FiPZj.s:1876   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/cc4FiPZj.s:1883   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/cc4FiPZj.s:2063   .text.HAL_SPI_TransmitReceive_IT:00000000000000b8 $d
     /tmp/cc4FiPZj.s:4279   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/cc4FiPZj.s:4219   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/cc4FiPZj.s:4159   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/cc4FiPZj.s:4099   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/cc4FiPZj.s:2071   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/cc4FiPZj.s:2078   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/cc4FiPZj.s:2236   .text.HAL_SPI_Receive_IT:00000000000000bc $d
     /tmp/cc4FiPZj.s:3907   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/cc4FiPZj.s:3856   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/cc4FiPZj.s:2242   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/cc4FiPZj.s:2249   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/cc4FiPZj.s:2422   .text.HAL_SPI_Transmit_DMA:00000000000000dc $d
     /tmp/cc4FiPZj.s:3394   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/cc4FiPZj.s:4380   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/cc4FiPZj.s:4339   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/cc4FiPZj.s:2429   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/cc4FiPZj.s:2436   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/cc4FiPZj.s:2697   .text.HAL_SPI_TransmitReceive_DMA:0000000000000140 $d
     /tmp/cc4FiPZj.s:3494   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/cc4FiPZj.s:4585   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/cc4FiPZj.s:3444   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
ARM GAS  /tmp/cc4FiPZj.s 			page 182


     /tmp/cc4FiPZj.s:4487   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/cc4FiPZj.s:2706   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/cc4FiPZj.s:2713   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/cc4FiPZj.s:2901   .text.HAL_SPI_Receive_DMA:00000000000000f4 $d
     /tmp/cc4FiPZj.s:2908   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/cc4FiPZj.s:2915   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/cc4FiPZj.s:3133   .text.HAL_SPI_Abort:000000000000012c $d
     /tmp/cc4FiPZj.s:3141   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/cc4FiPZj.s:3148   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/cc4FiPZj.s:3186   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/cc4FiPZj.s:3193   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/cc4FiPZj.s:3231   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/cc4FiPZj.s:3238   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/cc4FiPZj.s:3308   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:3315   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/cc4FiPZj.s:3328   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:3335   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/cc4FiPZj.s:3348   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:3355   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/cc4FiPZj.s:3368   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:3375   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/cc4FiPZj.s:3388   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/cc4FiPZj.s:3418   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:3425   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/cc4FiPZj.s:3438   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/cc4FiPZj.s:3468   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:3475   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/cc4FiPZj.s:3488   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/cc4FiPZj.s:3518   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:3525   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/cc4FiPZj.s:3538   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/cc4FiPZj.s:3544   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/cc4FiPZj.s:3656   .text.SPI_CloseTx_ISR:0000000000000088 $d
     /tmp/cc4FiPZj.s:3662   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/cc4FiPZj.s:3713   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/cc4FiPZj.s:3764   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/cc4FiPZj.s:3770   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/cc4FiPZj.s:3850   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/cc4FiPZj.s:3901   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/cc4FiPZj.s:3952   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/cc4FiPZj.s:3958   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/cc4FiPZj.s:4087   .text.SPI_CloseRxTx_ISR:00000000000000a8 $d
     /tmp/cc4FiPZj.s:4093   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/cc4FiPZj.s:4153   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/cc4FiPZj.s:4213   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/cc4FiPZj.s:4273   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/cc4FiPZj.s:4333   .text.SPI_DMAError:0000000000000000 $t
     /tmp/cc4FiPZj.s:4374   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/cc4FiPZj.s:4481   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc4FiPZj.s:4579   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/cc4FiPZj.s:4663   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/cc4FiPZj.s:4670   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/cc4FiPZj.s:4862   .text.HAL_SPI_IRQHandler:00000000000000fc $d
     /tmp/cc4FiPZj.s:4873   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/cc4FiPZj.s:4867   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/cc4FiPZj.s:4901   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:4908   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
ARM GAS  /tmp/cc4FiPZj.s 			page 183


     /tmp/cc4FiPZj.s:4921   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/cc4FiPZj.s:4928   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/cc4FiPZj.s:5186   .text.HAL_SPI_Abort_IT:0000000000000140 $d
     /tmp/cc4FiPZj.s:5308   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/cc4FiPZj.s:5202   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/cc4FiPZj.s:5196   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:5302   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc4FiPZj.s:5416   .text.SPI_DMATxAbortCallback:0000000000000084 $d
     /tmp/cc4FiPZj.s:5422   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/cc4FiPZj.s:5429   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/cc4FiPZj.s:5446   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/cc4FiPZj.s:5453   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
