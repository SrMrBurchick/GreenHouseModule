ARM GAS  /tmp/cctuPAeu.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"queue.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvGetDisinheritPriorityAfterTimeout:
  23              	.LFB24:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
ARM GAS  /tmp/cctuPAeu.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
ARM GAS  /tmp/cctuPAeu.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
ARM GAS  /tmp/cctuPAeu.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
ARM GAS  /tmp/cctuPAeu.s 			page 5


 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
ARM GAS  /tmp/cctuPAeu.s 			page 6


 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
ARM GAS  /tmp/cctuPAeu.s 			page 7


 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cctuPAeu.s 			page 8


 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cctuPAeu.s 			page 9


 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
ARM GAS  /tmp/cctuPAeu.s 			page 10


 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cctuPAeu.s 			page 11


 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/cctuPAeu.s 			page 12


 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cctuPAeu.s 			page 13


 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cctuPAeu.s 			page 14


 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
ARM GAS  /tmp/cctuPAeu.s 			page 15


 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/cctuPAeu.s 			page 16


 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
ARM GAS  /tmp/cctuPAeu.s 			page 17


 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
ARM GAS  /tmp/cctuPAeu.s 			page 18


 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
ARM GAS  /tmp/cctuPAeu.s 			page 19


1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
ARM GAS  /tmp/cctuPAeu.s 			page 20


1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
ARM GAS  /tmp/cctuPAeu.s 			page 21


1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
ARM GAS  /tmp/cctuPAeu.s 			page 22


1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cctuPAeu.s 			page 23


1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  /tmp/cctuPAeu.s 			page 24


1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/cctuPAeu.s 			page 25


1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
ARM GAS  /tmp/cctuPAeu.s 			page 26


1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cctuPAeu.s 			page 27


1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/cctuPAeu.s 			page 28


1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cctuPAeu.s 			page 29


1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cctuPAeu.s 			page 30


1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  /tmp/cctuPAeu.s 			page 31


1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cctuPAeu.s 			page 32


1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
ARM GAS  /tmp/cctuPAeu.s 			page 33


1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
ARM GAS  /tmp/cctuPAeu.s 			page 34


1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
ARM GAS  /tmp/cctuPAeu.s 			page 35


1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
ARM GAS  /tmp/cctuPAeu.s 			page 36


1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  25              		.loc 1 2015 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
ARM GAS  /tmp/cctuPAeu.s 			page 37


2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  31              		.loc 1 2024 0
  32 0000 436A     		ldr	r3, [r0, #36]
  33 0002 23B1     		cbz	r3, .L3
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  34              		.loc 1 2026 0
  35 0004 036B     		ldr	r3, [r0, #48]
  36 0006 1868     		ldr	r0, [r3]
  37              	.LVL1:
  38 0008 C0F10700 		rsb	r0, r0, #7
  39              	.LVL2:
  40 000c 7047     		bx	lr
  41              	.LVL3:
  42              	.L3:
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  43              		.loc 1 2030 0
  44 000e 0020     		movs	r0, #0
  45              	.LVL4:
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  46              		.loc 1 2034 0
  47 0010 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE24:
  51              		.section	.text.prvIsQueueFull,"ax",%progbits
  52              		.align	1
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu softvfp
  58              	prvIsQueueFull:
  59              	.LFB30:
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/cctuPAeu.s 			page 38


2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/cctuPAeu.s 			page 39


2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  /tmp/cctuPAeu.s 			page 40


2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
ARM GAS  /tmp/cctuPAeu.s 			page 41


2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
ARM GAS  /tmp/cctuPAeu.s 			page 42


2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  60              		.loc 1 2296 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL5:
  65 0000 10B5     		push	{r4, lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 4, -8
  69              		.cfi_offset 14, -4
  70 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  71              		.loc 1 2299 0
  72 0004 FFF7FEFF 		bl	vPortEnterCritical
  73              	.LVL6:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  74              		.loc 1 2301 0
  75 0008 A26B     		ldr	r2, [r4, #56]
  76 000a E36B     		ldr	r3, [r4, #60]
  77 000c 9A42     		cmp	r2, r3
  78 000e 04D0     		beq	.L8
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  79              		.loc 1 2307 0
  80 0010 0024     		movs	r4, #0
  81              	.LVL7:
  82              	.L5:
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  83              		.loc 1 2310 0
  84 0012 FFF7FEFF 		bl	vPortExitCritical
  85              	.LVL8:
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
ARM GAS  /tmp/cctuPAeu.s 			page 43


2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  86              		.loc 1 2313 0
  87 0016 2046     		mov	r0, r4
  88 0018 10BD     		pop	{r4, pc}
  89              	.LVL9:
  90              	.L8:
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  91              		.loc 1 2303 0
  92 001a 0124     		movs	r4, #1
  93              	.LVL10:
  94 001c F9E7     		b	.L5
  95              		.cfi_endproc
  96              	.LFE30:
  98              		.section	.text.prvIsQueueEmpty,"ax",%progbits
  99              		.align	1
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	prvIsQueueEmpty:
 106              	.LFB28:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 107              		.loc 1 2257 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL11:
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 117 0002 0446     		mov	r4, r0
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 118              		.loc 1 2260 0
 119 0004 FFF7FEFF 		bl	vPortEnterCritical
 120              	.LVL12:
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 121              		.loc 1 2262 0
 122 0008 A36B     		ldr	r3, [r4, #56]
 123 000a 23B1     		cbz	r3, .L13
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 124              		.loc 1 2268 0
 125 000c 0024     		movs	r4, #0
 126              	.LVL13:
 127              	.L10:
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 128              		.loc 1 2271 0
 129 000e FFF7FEFF 		bl	vPortExitCritical
 130              	.LVL14:
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 131              		.loc 1 2274 0
 132 0012 2046     		mov	r0, r4
 133 0014 10BD     		pop	{r4, pc}
 134              	.LVL15:
 135              	.L13:
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cctuPAeu.s 			page 44


 136              		.loc 1 2264 0
 137 0016 0124     		movs	r4, #1
 138              	.LVL16:
 139 0018 F9E7     		b	.L10
 140              		.cfi_endproc
 141              	.LFE28:
 143              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 144              		.align	1
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu softvfp
 150              	prvCopyDataToQueue:
 151              	.LFB25:
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 152              		.loc 1 2040 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              	.LVL17:
 157 0000 70B5     		push	{r4, r5, r6, lr}
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 16
 160              		.cfi_offset 4, -16
 161              		.cfi_offset 5, -12
 162              		.cfi_offset 6, -8
 163              		.cfi_offset 14, -4
 164 0002 0446     		mov	r4, r0
 165 0004 1646     		mov	r6, r2
 166              	.LVL18:
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 167              		.loc 1 2046 0
 168 0006 856B     		ldr	r5, [r0, #56]
 169              	.LVL19:
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 170              		.loc 1 2048 0
 171 0008 026C     		ldr	r2, [r0, #64]
 172              	.LVL20:
 173 000a 4AB9     		cbnz	r2, .L15
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 174              		.loc 1 2052 0
 175 000c 0368     		ldr	r3, [r0]
 176 000e 53BB     		cbnz	r3, .L19
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 177              		.loc 1 2055 0
 178 0010 4068     		ldr	r0, [r0, #4]
 179              	.LVL21:
 180 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 181              	.LVL22:
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 182              		.loc 1 2056 0
 183 0016 0023     		movs	r3, #0
 184 0018 6360     		str	r3, [r4, #4]
 185              	.LVL23:
 186              	.L16:
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 187              		.loc 1 2112 0
ARM GAS  /tmp/cctuPAeu.s 			page 45


 188 001a 0135     		adds	r5, r5, #1
 189              	.LVL24:
 190 001c A563     		str	r5, [r4, #56]
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 191              		.loc 1 2115 0
 192 001e 70BD     		pop	{r4, r5, r6, pc}
 193              	.LVL25:
 194              	.L15:
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 195              		.loc 1 2065 0
 196 0020 6EB9     		cbnz	r6, .L17
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 197              		.loc 1 2067 0
 198 0022 8068     		ldr	r0, [r0, #8]
 199              	.LVL26:
 200 0024 FFF7FEFF 		bl	memcpy
 201              	.LVL27:
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 202              		.loc 1 2068 0
 203 0028 226C     		ldr	r2, [r4, #64]
 204 002a A368     		ldr	r3, [r4, #8]
 205 002c 1344     		add	r3, r3, r2
 206 002e A360     		str	r3, [r4, #8]
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 207              		.loc 1 2069 0
 208 0030 6268     		ldr	r2, [r4, #4]
 209 0032 9342     		cmp	r3, r2
 210 0034 19D3     		bcc	.L20
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 211              		.loc 1 2071 0
 212 0036 2368     		ldr	r3, [r4]
 213 0038 A360     		str	r3, [r4, #8]
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 214              		.loc 1 2041 0
 215 003a 0020     		movs	r0, #0
 216 003c EDE7     		b	.L16
 217              	.LVL28:
 218              	.L17:
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 219              		.loc 1 2080 0
 220 003e C068     		ldr	r0, [r0, #12]
 221              	.LVL29:
 222 0040 FFF7FEFF 		bl	memcpy
 223              	.LVL30:
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 224              		.loc 1 2081 0
 225 0044 236C     		ldr	r3, [r4, #64]
 226 0046 5B42     		negs	r3, r3
 227 0048 E268     		ldr	r2, [r4, #12]
 228 004a 1A44     		add	r2, r2, r3
 229 004c E260     		str	r2, [r4, #12]
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 230              		.loc 1 2082 0
 231 004e 2168     		ldr	r1, [r4]
 232 0050 8A42     		cmp	r2, r1
 233 0052 02D2     		bcs	.L18
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cctuPAeu.s 			page 46


 234              		.loc 1 2084 0
 235 0054 6268     		ldr	r2, [r4, #4]
 236 0056 1344     		add	r3, r3, r2
 237 0058 E360     		str	r3, [r4, #12]
 238              	.L18:
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 239              		.loc 1 2091 0
 240 005a 022E     		cmp	r6, #2
 241 005c 07D1     		bne	.L21
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 242              		.loc 1 2093 0
 243 005e 45B1     		cbz	r5, .L22
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 244              		.loc 1 2099 0
 245 0060 013D     		subs	r5, r5, #1
 246              	.LVL31:
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 247              		.loc 1 2041 0
 248 0062 0020     		movs	r0, #0
 249 0064 D9E7     		b	.L16
 250              	.LVL32:
 251              	.L19:
 252 0066 0020     		movs	r0, #0
 253              	.LVL33:
 254 0068 D7E7     		b	.L16
 255              	.LVL34:
 256              	.L20:
 257 006a 0020     		movs	r0, #0
 258 006c D5E7     		b	.L16
 259              	.L21:
 260 006e 0020     		movs	r0, #0
 261 0070 D3E7     		b	.L16
 262              	.L22:
 263 0072 0020     		movs	r0, #0
 264 0074 D1E7     		b	.L16
 265              		.cfi_endproc
 266              	.LFE25:
 268              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu softvfp
 275              	prvCopyDataFromQueue:
 276              	.LFB26:
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 277              		.loc 1 2119 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              	.LVL35:
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 282              		.loc 1 2120 0
 283 0000 026C     		ldr	r2, [r0, #64]
 284 0002 72B1     		cbz	r2, .L28
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 285              		.loc 1 2119 0
ARM GAS  /tmp/cctuPAeu.s 			page 47


 286 0004 10B5     		push	{r4, lr}
 287              	.LCFI3:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 4, -8
 290              		.cfi_offset 14, -4
 291 0006 0346     		mov	r3, r0
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 292              		.loc 1 2122 0
 293 0008 C468     		ldr	r4, [r0, #12]
 294 000a 1444     		add	r4, r4, r2
 295 000c C460     		str	r4, [r0, #12]
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 296              		.loc 1 2123 0
 297 000e 4068     		ldr	r0, [r0, #4]
 298              	.LVL36:
 299 0010 8442     		cmp	r4, r0
 300 0012 01D3     		bcc	.L26
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 301              		.loc 1 2125 0
 302 0014 1868     		ldr	r0, [r3]
 303 0016 D860     		str	r0, [r3, #12]
 304              	.L26:
 305 0018 0846     		mov	r0, r1
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 306              		.loc 1 2131 0
 307 001a D968     		ldr	r1, [r3, #12]
 308              	.LVL37:
 309 001c FFF7FEFF 		bl	memcpy
 310              	.LVL38:
 311 0020 10BD     		pop	{r4, pc}
 312              	.LVL39:
 313              	.L28:
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 0
 316              		.cfi_restore 4
 317              		.cfi_restore 14
 318 0022 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE26:
 322              		.section	.text.prvUnlockQueue,"ax",%progbits
 323              		.align	1
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu softvfp
 329              	prvUnlockQueue:
 330              	.LFB27:
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 331              		.loc 1 2137 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              	.LVL40:
 336 0000 38B5     		push	{r3, r4, r5, lr}
 337              	.LCFI5:
 338              		.cfi_def_cfa_offset 16
 339              		.cfi_offset 3, -16
ARM GAS  /tmp/cctuPAeu.s 			page 48


 340              		.cfi_offset 4, -12
 341              		.cfi_offset 5, -8
 342              		.cfi_offset 14, -4
 343 0002 0546     		mov	r5, r0
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 344              		.loc 1 2144 0
 345 0004 FFF7FEFF 		bl	vPortEnterCritical
 346              	.LVL41:
 347              	.LBB104:
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 348              		.loc 1 2146 0
 349 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 350 000c 64B2     		sxtb	r4, r4
 351              	.LVL42:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 352              		.loc 1 2149 0
 353 000e 01E0     		b	.L32
 354              	.L34:
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 355              		.loc 1 2217 0
 356 0010 013C     		subs	r4, r4, #1
 357              	.LVL43:
 358 0012 64B2     		sxtb	r4, r4
 359              	.LVL44:
 360              	.L32:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 361              		.loc 1 2149 0
 362 0014 002C     		cmp	r4, #0
 363 0016 0ADD     		ble	.L33
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 364              		.loc 1 2197 0
 365 0018 6B6A     		ldr	r3, [r5, #36]
 366 001a 43B1     		cbz	r3, .L33
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 367              		.loc 1 2199 0
 368 001c 05F12400 		add	r0, r5, #36
 369 0020 FFF7FEFF 		bl	xTaskRemoveFromEventList
 370              	.LVL45:
 371 0024 0028     		cmp	r0, #0
 372 0026 F3D0     		beq	.L34
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 373              		.loc 1 2203 0
 374 0028 FFF7FEFF 		bl	vTaskMissedYield
 375              	.LVL46:
 376 002c F0E7     		b	.L34
 377              	.L33:
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 378              		.loc 1 2220 0
 379 002e FF23     		movs	r3, #255
 380 0030 85F84530 		strb	r3, [r5, #69]
 381              	.LBE104:
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 382              		.loc 1 2222 0
 383 0034 FFF7FEFF 		bl	vPortExitCritical
 384              	.LVL47:
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 385              		.loc 1 2225 0
ARM GAS  /tmp/cctuPAeu.s 			page 49


 386 0038 FFF7FEFF 		bl	vPortEnterCritical
 387              	.LVL48:
 388              	.LBB105:
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 389              		.loc 1 2227 0
 390 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 391              	.LVL49:
 392 0040 64B2     		sxtb	r4, r4
 393              	.LVL50:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 394              		.loc 1 2229 0
 395 0042 01E0     		b	.L36
 396              	.L38:
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 397              		.loc 1 2242 0
 398 0044 013C     		subs	r4, r4, #1
 399              	.LVL51:
 400 0046 64B2     		sxtb	r4, r4
 401              	.LVL52:
 402              	.L36:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 403              		.loc 1 2229 0
 404 0048 002C     		cmp	r4, #0
 405 004a 0ADD     		ble	.L37
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 406              		.loc 1 2231 0
 407 004c 2B69     		ldr	r3, [r5, #16]
 408 004e 43B1     		cbz	r3, .L37
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 409              		.loc 1 2233 0
 410 0050 05F11000 		add	r0, r5, #16
 411 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 412              	.LVL53:
 413 0058 0028     		cmp	r0, #0
 414 005a F3D0     		beq	.L38
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 415              		.loc 1 2235 0
 416 005c FFF7FEFF 		bl	vTaskMissedYield
 417              	.LVL54:
 418 0060 F0E7     		b	.L38
 419              	.L37:
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 420              		.loc 1 2250 0
 421 0062 FF23     		movs	r3, #255
 422 0064 85F84430 		strb	r3, [r5, #68]
 423              	.LBE105:
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 424              		.loc 1 2252 0
 425 0068 FFF7FEFF 		bl	vPortExitCritical
 426              	.LVL55:
 427 006c 38BD     		pop	{r3, r4, r5, pc}
 428              		.cfi_endproc
 429              	.LFE27:
 431              		.section	.text.xQueueGenericReset,"ax",%progbits
 432              		.align	1
 433              		.global	xQueueGenericReset
 434              		.syntax unified
ARM GAS  /tmp/cctuPAeu.s 			page 50


 435              		.thumb
 436              		.thumb_func
 437              		.fpu softvfp
 439              	xQueueGenericReset:
 440              	.LFB5:
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 441              		.loc 1 248 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              	.LVL56:
 446 0000 38B5     		push	{r3, r4, r5, lr}
 447              	.LCFI6:
 448              		.cfi_def_cfa_offset 16
 449              		.cfi_offset 3, -16
 450              		.cfi_offset 4, -12
 451              		.cfi_offset 5, -8
 452              		.cfi_offset 14, -4
 453              	.LVL57:
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 454              		.loc 1 251 0
 455 0002 30B3     		cbz	r0, .L47
 456 0004 0446     		mov	r4, r0
 457 0006 0D46     		mov	r5, r1
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 458              		.loc 1 253 0
 459 0008 FFF7FEFF 		bl	vPortEnterCritical
 460              	.LVL58:
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 461              		.loc 1 255 0
 462 000c 2168     		ldr	r1, [r4]
 463 000e E26B     		ldr	r2, [r4, #60]
 464 0010 236C     		ldr	r3, [r4, #64]
 465 0012 03FB0210 		mla	r0, r3, r2, r1
 466 0016 6060     		str	r0, [r4, #4]
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 467              		.loc 1 256 0
 468 0018 0020     		movs	r0, #0
 469 001a A063     		str	r0, [r4, #56]
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 470              		.loc 1 257 0
 471 001c A160     		str	r1, [r4, #8]
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 472              		.loc 1 258 0
 473 001e 013A     		subs	r2, r2, #1
 474 0020 02FB0313 		mla	r3, r2, r3, r1
 475 0024 E360     		str	r3, [r4, #12]
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 476              		.loc 1 259 0
 477 0026 FF23     		movs	r3, #255
 478 0028 84F84430 		strb	r3, [r4, #68]
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 479              		.loc 1 260 0
 480 002c 84F84530 		strb	r3, [r4, #69]
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 481              		.loc 1 262 0
 482 0030 C5B9     		cbnz	r5, .L44
ARM GAS  /tmp/cctuPAeu.s 			page 51


 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 483              		.loc 1 269 0
 484 0032 2369     		ldr	r3, [r4, #16]
 485 0034 F3B1     		cbz	r3, .L45
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 486              		.loc 1 271 0
 487 0036 04F11000 		add	r0, r4, #16
 488 003a FFF7FEFF 		bl	xTaskRemoveFromEventList
 489              	.LVL59:
 490 003e C8B1     		cbz	r0, .L45
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 491              		.loc 1 273 0
 492 0040 4FF08052 		mov	r2, #268435456
 493 0044 0D4B     		ldr	r3, .L48
 494 0046 1A60     		str	r2, [r3]
 495              		.syntax unified
 496              	@ 273 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 497 0048 BFF34F8F 		dsb
 498              	@ 0 "" 2
 499              	@ 273 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 500 004c BFF36F8F 		isb
 501              	@ 0 "" 2
 502              		.thumb
 503              		.syntax unified
 504 0050 10E0     		b	.L45
 505              	.LVL60:
 506              	.L47:
 507              	.LBB106:
 508              	.LBB107:
 509              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/cctuPAeu.s 			page 52


  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
ARM GAS  /tmp/cctuPAeu.s 			page 53


  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
ARM GAS  /tmp/cctuPAeu.s 			page 54


 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 510              		.loc 2 195 0
 511              		.syntax unified
 512              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  /tmp/cctuPAeu.s 			page 55


 513 0052 4FF05003 			mov r3, #80												
 514 0056 83F31188 		msr basepri, r3											
 515 005a BFF36F8F 		isb														
 516 005e BFF34F8F 		dsb														
 517              	
 518              	@ 0 "" 2
 519              	.LVL61:
 520              		.thumb
 521              		.syntax unified
 522              	.L43:
 523 0062 FEE7     		b	.L43
 524              	.LVL62:
 525              	.L44:
 526              	.LBE107:
 527              	.LBE106:
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 528              		.loc 1 288 0
 529 0064 04F11000 		add	r0, r4, #16
 530 0068 FFF7FEFF 		bl	vListInitialise
 531              	.LVL63:
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 532              		.loc 1 289 0
 533 006c 04F12400 		add	r0, r4, #36
 534 0070 FFF7FEFF 		bl	vListInitialise
 535              	.LVL64:
 536              	.L45:
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537              		.loc 1 292 0
 538 0074 FFF7FEFF 		bl	vPortExitCritical
 539              	.LVL65:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 540              		.loc 1 297 0
 541 0078 0120     		movs	r0, #1
 542 007a 38BD     		pop	{r3, r4, r5, pc}
 543              	.LVL66:
 544              	.L49:
 545              		.align	2
 546              	.L48:
 547 007c 04ED00E0 		.word	-536810236
 548              		.cfi_endproc
 549              	.LFE5:
 551              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 552              		.align	1
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 556              		.fpu softvfp
 558              	prvInitialiseNewQueue:
 559              	.LFB8:
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 560              		.loc 1 409 0
 561              		.cfi_startproc
 562              		@ args = 4, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              	.LVL67:
 565 0000 10B5     		push	{r4, lr}
 566              	.LCFI7:
ARM GAS  /tmp/cctuPAeu.s 			page 56


 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 4, -8
 569              		.cfi_offset 14, -4
 570 0002 029B     		ldr	r3, [sp, #8]
 571              	.LVL68:
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 572              		.loc 1 414 0
 573 0004 0C46     		mov	r4, r1
 574 0006 39B1     		cbz	r1, .L54
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 575              		.loc 1 425 0
 576 0008 1A60     		str	r2, [r3]
 577              	.L52:
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 578              		.loc 1 430 0
 579 000a D863     		str	r0, [r3, #60]
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 580              		.loc 1 431 0
 581 000c 1C64     		str	r4, [r3, #64]
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 582              		.loc 1 432 0
 583 000e 0121     		movs	r1, #1
 584              	.LVL69:
 585 0010 1846     		mov	r0, r3
 586              	.LVL70:
 587 0012 FFF7FEFF 		bl	xQueueGenericReset
 588              	.LVL71:
 589 0016 10BD     		pop	{r4, pc}
 590              	.LVL72:
 591              	.L54:
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 592              		.loc 1 420 0
 593 0018 1B60     		str	r3, [r3]
 594 001a F6E7     		b	.L52
 595              		.cfi_endproc
 596              	.LFE8:
 598              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 599              		.align	1
 600              		.global	xQueueGenericCreateStatic
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 604              		.fpu softvfp
 606              	xQueueGenericCreateStatic:
 607              	.LFB6:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 608              		.loc 1 303 0
 609              		.cfi_startproc
 610              		@ args = 4, pretend = 0, frame = 8
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LVL73:
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613              		.loc 1 306 0
 614 0000 40B9     		cbnz	r0, .L56
 615              	.LBB108:
 616              	.LBB109:
 617              		.loc 2 195 0
ARM GAS  /tmp/cctuPAeu.s 			page 57


 618              		.syntax unified
 619              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 620 0002 4FF05003 			mov r3, #80												
 621 0006 83F31188 		msr basepri, r3											
 622 000a BFF36F8F 		isb														
 623 000e BFF34F8F 		dsb														
 624              	
 625              	@ 0 "" 2
 626              	.LVL74:
 627              		.thumb
 628              		.syntax unified
 629              	.L57:
 630 0012 FEE7     		b	.L57
 631              	.LVL75:
 632              	.L56:
 633              	.LBE109:
 634              	.LBE108:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 635              		.loc 1 303 0
 636 0014 10B5     		push	{r4, lr}
 637              	.LCFI8:
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 4, -8
 640              		.cfi_offset 14, -4
 641 0016 84B0     		sub	sp, sp, #16
 642              	.LCFI9:
 643              		.cfi_def_cfa_offset 24
 644 0018 0446     		mov	r4, r0
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 645              		.loc 1 310 0
 646 001a 63B1     		cbz	r3, .L73
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 647              		.loc 1 314 0
 648 001c A2B1     		cbz	r2, .L68
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 649              		.loc 1 314 0 is_stmt 0 discriminator 2
 650 001e A9B1     		cbz	r1, .L69
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 651              		.loc 1 314 0
 652 0020 0120     		movs	r0, #1
 653              	.LVL76:
 654              	.L60:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 655              		.loc 1 314 0 discriminator 6
 656 0022 A8B9     		cbnz	r0, .L61
 657              	.LBB110:
 658              	.LBB111:
 659              		.loc 2 195 0 is_stmt 1
 660              		.syntax unified
 661              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 662 0024 4FF05003 			mov r3, #80												
 663 0028 83F31188 		msr basepri, r3											
 664 002c BFF36F8F 		isb														
 665 0030 BFF34F8F 		dsb														
 666              	
 667              	@ 0 "" 2
 668              	.LVL77:
ARM GAS  /tmp/cctuPAeu.s 			page 58


 669              		.thumb
 670              		.syntax unified
 671              	.L62:
 672 0034 FEE7     		b	.L62
 673              	.LVL78:
 674              	.L73:
 675              	.LBE111:
 676              	.LBE110:
 677              	.LBB112:
 678              	.LBB113:
 679              		.syntax unified
 680              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 681 0036 4FF05003 			mov r3, #80												
 682 003a 83F31188 		msr basepri, r3											
 683 003e BFF36F8F 		isb														
 684 0042 BFF34F8F 		dsb														
 685              	
 686              	@ 0 "" 2
 687              	.LVL79:
 688              		.thumb
 689              		.syntax unified
 690              	.L59:
 691 0046 FEE7     		b	.L59
 692              	.LVL80:
 693              	.L68:
 694              	.LBE113:
 695              	.LBE112:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 696              		.loc 1 314 0
 697 0048 0120     		movs	r0, #1
 698              	.LVL81:
 699 004a EAE7     		b	.L60
 700              	.LVL82:
 701              	.L69:
 702 004c 0020     		movs	r0, #0
 703              	.LVL83:
 704 004e E8E7     		b	.L60
 705              	.L61:
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706              		.loc 1 315 0
 707 0050 0AB9     		cbnz	r2, .L63
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 708              		.loc 1 315 0 is_stmt 0 discriminator 2
 709 0052 01B1     		cbz	r1, .L63
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 710              		.loc 1 315 0
 711 0054 0020     		movs	r0, #0
 712              	.L63:
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 713              		.loc 1 315 0 discriminator 6
 714 0056 40B9     		cbnz	r0, .L64
 715              	.LBB114:
 716              	.LBB115:
 717              		.loc 2 195 0 is_stmt 1
 718              		.syntax unified
 719              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 720 0058 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cctuPAeu.s 			page 59


 721 005c 83F31188 		msr basepri, r3											
 722 0060 BFF36F8F 		isb														
 723 0064 BFF34F8F 		dsb														
 724              	
 725              	@ 0 "" 2
 726              	.LVL84:
 727              		.thumb
 728              		.syntax unified
 729              	.L65:
 730 0068 FEE7     		b	.L65
 731              	.LVL85:
 732              	.L64:
 733              	.LBE115:
 734              	.LBE114:
 735              	.LBB116:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 736              		.loc 1 322 0
 737 006a 4820     		movs	r0, #72
 738 006c 0390     		str	r0, [sp, #12]
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 739              		.loc 1 323 0
 740 006e 0398     		ldr	r0, [sp, #12]
 741 0070 4828     		cmp	r0, #72
 742 0072 08D0     		beq	.L66
 743              	.LBB117:
 744              	.LBB118:
 745              		.loc 2 195 0
 746              		.syntax unified
 747              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 748 0074 4FF05003 			mov r3, #80												
 749 0078 83F31188 		msr basepri, r3											
 750 007c BFF36F8F 		isb														
 751 0080 BFF34F8F 		dsb														
 752              	
 753              	@ 0 "" 2
 754              	.LVL86:
 755              		.thumb
 756              		.syntax unified
 757              	.L67:
 758 0084 FEE7     		b	.L67
 759              	.LVL87:
 760              	.L66:
 761 0086 2046     		mov	r0, r4
 762 0088 1C46     		mov	r4, r3
 763              	.LVL88:
 764              	.LBE118:
 765              	.LBE117:
 766              	.LBE116:
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 767              		.loc 1 339 0
 768 008a 0123     		movs	r3, #1
 769              	.LVL89:
 770 008c 84F84630 		strb	r3, [r4, #70]
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 771              		.loc 1 343 0
 772 0090 0094     		str	r4, [sp]
 773 0092 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
ARM GAS  /tmp/cctuPAeu.s 			page 60


 774 0096 FFF7FEFF 		bl	prvInitialiseNewQueue
 775              	.LVL90:
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 776              		.loc 1 351 0
 777 009a 2046     		mov	r0, r4
 778 009c 04B0     		add	sp, sp, #16
 779              	.LCFI10:
 780              		.cfi_def_cfa_offset 8
 781              		@ sp needed
 782 009e 10BD     		pop	{r4, pc}
 783              		.cfi_endproc
 784              	.LFE6:
 786              		.section	.text.xQueueGenericCreate,"ax",%progbits
 787              		.align	1
 788              		.global	xQueueGenericCreate
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu softvfp
 794              	xQueueGenericCreate:
 795              	.LFB7:
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 796              		.loc 1 359 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              	.LVL91:
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 801              		.loc 1 364 0
 802 0000 40B9     		cbnz	r0, .L75
 803              	.LBB119:
 804              	.LBB120:
 805              		.loc 2 195 0
 806              		.syntax unified
 807              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 808 0002 4FF05003 			mov r3, #80												
 809 0006 83F31188 		msr basepri, r3											
 810 000a BFF36F8F 		isb														
 811 000e BFF34F8F 		dsb														
 812              	
 813              	@ 0 "" 2
 814              	.LVL92:
 815              		.thumb
 816              		.syntax unified
 817              	.L76:
 818 0012 FEE7     		b	.L76
 819              	.L75:
 820              	.LBE120:
 821              	.LBE119:
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 822              		.loc 1 359 0
 823 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 824              	.LCFI11:
 825              		.cfi_def_cfa_offset 20
 826              		.cfi_offset 4, -20
 827              		.cfi_offset 5, -16
 828              		.cfi_offset 6, -12
ARM GAS  /tmp/cctuPAeu.s 			page 61


 829              		.cfi_offset 7, -8
 830              		.cfi_offset 14, -4
 831 0016 83B0     		sub	sp, sp, #12
 832              	.LCFI12:
 833              		.cfi_def_cfa_offset 32
 834 0018 0646     		mov	r6, r0
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 835              		.loc 1 366 0
 836 001a 11B1     		cbz	r1, .L79
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 837              		.loc 1 375 0
 838 001c 01FB00F0 		mul	r0, r1, r0
 839              	.LVL93:
 840 0020 00E0     		b	.L77
 841              	.LVL94:
 842              	.L79:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 843              		.loc 1 369 0
 844 0022 0020     		movs	r0, #0
 845              	.LVL95:
 846              	.L77:
 847 0024 1746     		mov	r7, r2
 848 0026 0C46     		mov	r4, r1
 849              	.LVL96:
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 850              		.loc 1 378 0
 851 0028 4830     		adds	r0, r0, #72
 852              	.LVL97:
 853 002a FFF7FEFF 		bl	pvPortMalloc
 854              	.LVL98:
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 855              		.loc 1 380 0
 856 002e 0546     		mov	r5, r0
 857 0030 50B1     		cbz	r0, .L78
 858              	.LVL99:
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 859              		.loc 1 391 0
 860 0032 0023     		movs	r3, #0
 861 0034 80F84630 		strb	r3, [r0, #70]
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 862              		.loc 1 395 0
 863 0038 0090     		str	r0, [sp]
 864 003a 3B46     		mov	r3, r7
 865 003c 00F14802 		add	r2, r0, #72
 866              	.LVL100:
 867 0040 2146     		mov	r1, r4
 868 0042 3046     		mov	r0, r6
 869              	.LVL101:
 870 0044 FFF7FEFF 		bl	prvInitialiseNewQueue
 871              	.LVL102:
 872              	.L78:
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 873              		.loc 1 403 0
 874 0048 2846     		mov	r0, r5
 875 004a 03B0     		add	sp, sp, #12
 876              	.LCFI13:
 877              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/cctuPAeu.s 			page 62


 878              		@ sp needed
 879 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 880              		.cfi_endproc
 881              	.LFE7:
 883              		.section	.text.xQueueGenericSend,"ax",%progbits
 884              		.align	1
 885              		.global	xQueueGenericSend
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 889              		.fpu softvfp
 891              	xQueueGenericSend:
 892              	.LFB12:
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 893              		.loc 1 726 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 16
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897              	.LVL103:
 898 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 899              	.LCFI14:
 900              		.cfi_def_cfa_offset 20
 901              		.cfi_offset 4, -20
 902              		.cfi_offset 5, -16
 903              		.cfi_offset 6, -12
 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 85B0     		sub	sp, sp, #20
 907              	.LCFI15:
 908              		.cfi_def_cfa_offset 40
 909 0004 0192     		str	r2, [sp, #4]
 910              	.LVL104:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 911              		.loc 1 731 0
 912 0006 60B1     		cbz	r0, .L112
 913 0008 0446     		mov	r4, r0
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 914              		.loc 1 732 0
 915 000a 99B1     		cbz	r1, .L113
 916 000c 0125     		movs	r5, #1
 917              	.LVL105:
 918              	.L85:
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 919              		.loc 1 732 0 is_stmt 0 discriminator 6
 920 000e BDB9     		cbnz	r5, .L86
 921              	.LBB121:
 922              	.LBB122:
 923              		.loc 2 195 0 is_stmt 1
 924              		.syntax unified
 925              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 926 0010 4FF05003 			mov r3, #80												
 927 0014 83F31188 		msr basepri, r3											
 928 0018 BFF36F8F 		isb														
 929 001c BFF34F8F 		dsb														
 930              	
 931              	@ 0 "" 2
 932              	.LVL106:
ARM GAS  /tmp/cctuPAeu.s 			page 63


 933              		.thumb
 934              		.syntax unified
 935              	.L87:
 936 0020 FEE7     		b	.L87
 937              	.LVL107:
 938              	.L112:
 939              	.LBE122:
 940              	.LBE121:
 941              	.LBB123:
 942              	.LBB124:
 943              		.syntax unified
 944              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 945 0022 4FF05003 			mov r3, #80												
 946 0026 83F31188 		msr basepri, r3											
 947 002a BFF36F8F 		isb														
 948 002e BFF34F8F 		dsb														
 949              	
 950              	@ 0 "" 2
 951              	.LVL108:
 952              		.thumb
 953              		.syntax unified
 954              	.L84:
 955 0032 FEE7     		b	.L84
 956              	.LVL109:
 957              	.L113:
 958              	.LBE124:
 959              	.LBE123:
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 960              		.loc 1 732 0 discriminator 2
 961 0034 026C     		ldr	r2, [r0, #64]
 962              	.LVL110:
 963 0036 0AB9     		cbnz	r2, .L107
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 964              		.loc 1 732 0 is_stmt 0
 965 0038 0125     		movs	r5, #1
 966 003a E8E7     		b	.L85
 967              	.L107:
 968 003c 0025     		movs	r5, #0
 969 003e E6E7     		b	.L85
 970              	.L86:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 971              		.loc 1 733 0 is_stmt 1
 972 0040 022B     		cmp	r3, #2
 973 0042 09D0     		beq	.L114
 974              	.L88:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 975              		.loc 1 733 0 is_stmt 0 discriminator 6
 976 0044 6DB9     		cbnz	r5, .L89
 977              	.LBB125:
 978              	.LBB126:
 979              		.loc 2 195 0 is_stmt 1
 980              		.syntax unified
 981              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 982 0046 4FF05003 			mov r3, #80												
 983 004a 83F31188 		msr basepri, r3											
 984 004e BFF36F8F 		isb														
 985 0052 BFF34F8F 		dsb														
ARM GAS  /tmp/cctuPAeu.s 			page 64


 986              	
 987              	@ 0 "" 2
 988              	.LVL111:
 989              		.thumb
 990              		.syntax unified
 991              	.L90:
 992 0056 FEE7     		b	.L90
 993              	.LVL112:
 994              	.L114:
 995              	.LBE126:
 996              	.LBE125:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 997              		.loc 1 733 0 discriminator 2
 998 0058 E26B     		ldr	r2, [r4, #60]
 999 005a 012A     		cmp	r2, #1
 1000 005c F2D0     		beq	.L88
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1001              		.loc 1 733 0 is_stmt 0
 1002 005e 0025     		movs	r5, #0
 1003 0060 F0E7     		b	.L88
 1004              	.L89:
 1005 0062 1E46     		mov	r6, r3
 1006 0064 0F46     		mov	r7, r1
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1007              		.loc 1 736 0 is_stmt 1
 1008 0066 FFF7FEFF 		bl	xTaskGetSchedulerState
 1009              	.LVL113:
 1010 006a 10B9     		cbnz	r0, .L91
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1011              		.loc 1 736 0 is_stmt 0 discriminator 2
 1012 006c 019B     		ldr	r3, [sp, #4]
 1013 006e 03B1     		cbz	r3, .L91
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1014              		.loc 1 736 0
 1015 0070 0025     		movs	r5, #0
 1016              	.L91:
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1017              		.loc 1 736 0 discriminator 6
 1018 0072 45B9     		cbnz	r5, .L110
 1019              	.LBB127:
 1020              	.LBB128:
 1021              		.loc 2 195 0 is_stmt 1
 1022              		.syntax unified
 1023              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1024 0074 4FF05003 			mov r3, #80												
 1025 0078 83F31188 		msr basepri, r3											
 1026 007c BFF36F8F 		isb														
 1027 0080 BFF34F8F 		dsb														
 1028              	
 1029              	@ 0 "" 2
 1030              	.LVL114:
 1031              		.thumb
 1032              		.syntax unified
 1033              	.L93:
 1034 0084 FEE7     		b	.L93
 1035              	.L110:
 1036              	.LBE128:
ARM GAS  /tmp/cctuPAeu.s 			page 65


 1037              	.LBE127:
 1038 0086 0025     		movs	r5, #0
 1039 0088 2CE0     		b	.L92
 1040              	.LVL115:
 1041              	.L94:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1042              		.loc 1 755 0
 1043 008a 3246     		mov	r2, r6
 1044 008c 3946     		mov	r1, r7
 1045 008e 2046     		mov	r0, r4
 1046 0090 FFF7FEFF 		bl	prvCopyDataToQueue
 1047              	.LVL116:
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1048              		.loc 1 810 0
 1049 0094 636A     		ldr	r3, [r4, #36]
 1050 0096 8BB1     		cbz	r3, .L96
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1051              		.loc 1 812 0
 1052 0098 04F12400 		add	r0, r4, #36
 1053              	.LVL117:
 1054 009c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1055              	.LVL118:
 1056 00a0 38B1     		cbz	r0, .L97
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1057              		.loc 1 818 0
 1058 00a2 4FF08052 		mov	r2, #268435456
 1059 00a6 374B     		ldr	r3, .L116
 1060 00a8 1A60     		str	r2, [r3]
 1061              		.syntax unified
 1062              	@ 818 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1063 00aa BFF34F8F 		dsb
 1064              	@ 0 "" 2
 1065              	@ 818 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1066 00ae BFF36F8F 		isb
 1067              	@ 0 "" 2
 1068              		.thumb
 1069              		.syntax unified
 1070              	.L97:
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1071              		.loc 1 840 0
 1072 00b2 FFF7FEFF 		bl	vPortExitCritical
 1073              	.LVL119:
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1074              		.loc 1 841 0
 1075 00b6 0120     		movs	r0, #1
 1076              	.L82:
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1077              		.loc 1 920 0
 1078 00b8 05B0     		add	sp, sp, #20
 1079              	.LCFI16:
 1080              		.cfi_remember_state
 1081              		.cfi_def_cfa_offset 20
 1082              		@ sp needed
 1083 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1084              	.LVL120:
 1085              	.L96:
 1086              	.LCFI17:
ARM GAS  /tmp/cctuPAeu.s 			page 66


 1087              		.cfi_restore_state
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1088              		.loc 1 825 0
 1089 00bc 0028     		cmp	r0, #0
 1090 00be F8D0     		beq	.L97
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1091              		.loc 1 831 0
 1092 00c0 4FF08052 		mov	r2, #268435456
 1093 00c4 2F4B     		ldr	r3, .L116
 1094 00c6 1A60     		str	r2, [r3]
 1095              		.syntax unified
 1096              	@ 831 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1097 00c8 BFF34F8F 		dsb
 1098              	@ 0 "" 2
 1099              	@ 831 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1100 00cc BFF36F8F 		isb
 1101              	@ 0 "" 2
 1102              		.thumb
 1103              		.syntax unified
 1104 00d0 EFE7     		b	.L97
 1105              	.LVL121:
 1106              	.L115:
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1107              		.loc 1 849 0
 1108 00d2 FFF7FEFF 		bl	vPortExitCritical
 1109              	.LVL122:
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1110              		.loc 1 854 0
 1111 00d6 0020     		movs	r0, #0
 1112 00d8 EEE7     		b	.L82
 1113              	.L104:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1114              		.loc 1 906 0
 1115 00da 2046     		mov	r0, r4
 1116 00dc FFF7FEFF 		bl	prvUnlockQueue
 1117              	.LVL123:
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1118              		.loc 1 907 0
 1119 00e0 FFF7FEFF 		bl	xTaskResumeAll
 1120              	.LVL124:
 1121              	.L92:
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1122              		.loc 1 746 0
 1123 00e4 FFF7FEFF 		bl	vPortEnterCritical
 1124              	.LVL125:
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1125              		.loc 1 752 0
 1126 00e8 A26B     		ldr	r2, [r4, #56]
 1127 00ea E36B     		ldr	r3, [r4, #60]
 1128 00ec 9A42     		cmp	r2, r3
 1129 00ee CCD3     		bcc	.L94
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1130              		.loc 1 752 0 is_stmt 0 discriminator 1
 1131 00f0 022E     		cmp	r6, #2
 1132 00f2 CAD0     		beq	.L94
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1133              		.loc 1 845 0 is_stmt 1
ARM GAS  /tmp/cctuPAeu.s 			page 67


 1134 00f4 019B     		ldr	r3, [sp, #4]
 1135 00f6 002B     		cmp	r3, #0
 1136 00f8 EBD0     		beq	.L115
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1137              		.loc 1 856 0
 1138 00fa 1DB9     		cbnz	r5, .L100
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1139              		.loc 1 860 0
 1140 00fc 02A8     		add	r0, sp, #8
 1141 00fe FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1142              	.LVL126:
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1143              		.loc 1 861 0
 1144 0102 0125     		movs	r5, #1
 1145              	.LVL127:
 1146              	.L100:
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1147              		.loc 1 870 0
 1148 0104 FFF7FEFF 		bl	vPortExitCritical
 1149              	.LVL128:
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1150              		.loc 1 875 0
 1151 0108 FFF7FEFF 		bl	vTaskSuspendAll
 1152              	.LVL129:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1153              		.loc 1 876 0
 1154 010c FFF7FEFF 		bl	vPortEnterCritical
 1155              	.LVL130:
 1156 0110 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1157 0114 5BB2     		sxtb	r3, r3
 1158 0116 B3F1FF3F 		cmp	r3, #-1
 1159 011a 02D1     		bne	.L101
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1160              		.loc 1 876 0 is_stmt 0 discriminator 1
 1161 011c 0023     		movs	r3, #0
 1162 011e 84F84430 		strb	r3, [r4, #68]
 1163              	.L101:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1164              		.loc 1 876 0 discriminator 3
 1165 0122 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1166 0126 5BB2     		sxtb	r3, r3
 1167 0128 B3F1FF3F 		cmp	r3, #-1
 1168 012c 02D1     		bne	.L102
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1169              		.loc 1 876 0 discriminator 4
 1170 012e 0023     		movs	r3, #0
 1171 0130 84F84530 		strb	r3, [r4, #69]
 1172              	.L102:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1173              		.loc 1 876 0 discriminator 6
 1174 0134 FFF7FEFF 		bl	vPortExitCritical
 1175              	.LVL131:
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1176              		.loc 1 879 0 is_stmt 1 discriminator 6
 1177 0138 01A9     		add	r1, sp, #4
 1178 013a 02A8     		add	r0, sp, #8
 1179 013c FFF7FEFF 		bl	xTaskCheckForTimeOut
ARM GAS  /tmp/cctuPAeu.s 			page 68


 1180              	.LVL132:
 1181 0140 C8B9     		cbnz	r0, .L103
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1182              		.loc 1 881 0
 1183 0142 2046     		mov	r0, r4
 1184 0144 FFF7FEFF 		bl	prvIsQueueFull
 1185              	.LVL133:
 1186 0148 0028     		cmp	r0, #0
 1187 014a C6D0     		beq	.L104
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1188              		.loc 1 884 0
 1189 014c 0199     		ldr	r1, [sp, #4]
 1190 014e 04F11000 		add	r0, r4, #16
 1191 0152 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1192              	.LVL134:
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1193              		.loc 1 891 0
 1194 0156 2046     		mov	r0, r4
 1195 0158 FFF7FEFF 		bl	prvUnlockQueue
 1196              	.LVL135:
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1197              		.loc 1 898 0
 1198 015c FFF7FEFF 		bl	xTaskResumeAll
 1199              	.LVL136:
 1200 0160 0028     		cmp	r0, #0
 1201 0162 BFD1     		bne	.L92
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1202              		.loc 1 900 0
 1203 0164 4FF08052 		mov	r2, #268435456
 1204 0168 064B     		ldr	r3, .L116
 1205 016a 1A60     		str	r2, [r3]
 1206              		.syntax unified
 1207              	@ 900 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1208 016c BFF34F8F 		dsb
 1209              	@ 0 "" 2
 1210              	@ 900 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1211 0170 BFF36F8F 		isb
 1212              	@ 0 "" 2
 1213              		.thumb
 1214              		.syntax unified
 1215 0174 B6E7     		b	.L92
 1216              	.L103:
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1217              		.loc 1 913 0
 1218 0176 2046     		mov	r0, r4
 1219 0178 FFF7FEFF 		bl	prvUnlockQueue
 1220              	.LVL137:
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1221              		.loc 1 914 0
 1222 017c FFF7FEFF 		bl	xTaskResumeAll
 1223              	.LVL138:
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1224              		.loc 1 917 0
 1225 0180 0020     		movs	r0, #0
 1226 0182 99E7     		b	.L82
 1227              	.L117:
 1228              		.align	2
ARM GAS  /tmp/cctuPAeu.s 			page 69


 1229              	.L116:
 1230 0184 04ED00E0 		.word	-536810236
 1231              		.cfi_endproc
 1232              	.LFE12:
 1234              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1235              		.align	1
 1236              		.syntax unified
 1237              		.thumb
 1238              		.thumb_func
 1239              		.fpu softvfp
 1241              	prvInitialiseMutex:
 1242              	.LFB9:
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1243              		.loc 1 453 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 0
 1246              		@ frame_needed = 0, uses_anonymous_args = 0
 1247              	.LVL139:
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1248              		.loc 1 454 0
 1249 0000 48B1     		cbz	r0, .L121
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1250              		.loc 1 453 0
 1251 0002 08B5     		push	{r3, lr}
 1252              	.LCFI18:
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 3, -8
 1255              		.cfi_offset 14, -4
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1256              		.loc 1 460 0
 1257 0004 0021     		movs	r1, #0
 1258 0006 4160     		str	r1, [r0, #4]
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1259              		.loc 1 461 0
 1260 0008 0160     		str	r1, [r0]
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1261              		.loc 1 464 0
 1262 000a C160     		str	r1, [r0, #12]
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1263              		.loc 1 469 0
 1264 000c 0B46     		mov	r3, r1
 1265 000e 0A46     		mov	r2, r1
 1266 0010 FFF7FEFF 		bl	xQueueGenericSend
 1267              	.LVL140:
 1268 0014 08BD     		pop	{r3, pc}
 1269              	.LVL141:
 1270              	.L121:
 1271              	.LCFI19:
 1272              		.cfi_def_cfa_offset 0
 1273              		.cfi_restore 3
 1274              		.cfi_restore 14
 1275 0016 7047     		bx	lr
 1276              		.cfi_endproc
 1277              	.LFE9:
 1279              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1280              		.align	1
 1281              		.global	xQueueCreateMutex
ARM GAS  /tmp/cctuPAeu.s 			page 70


 1282              		.syntax unified
 1283              		.thumb
 1284              		.thumb_func
 1285              		.fpu softvfp
 1287              	xQueueCreateMutex:
 1288              	.LFB10:
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1289              		.loc 1 483 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              	.LVL142:
 1294 0000 10B5     		push	{r4, lr}
 1295              	.LCFI20:
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 4, -8
 1298              		.cfi_offset 14, -4
 1299              	.LVL143:
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1300              		.loc 1 487 0
 1301 0002 0246     		mov	r2, r0
 1302 0004 0021     		movs	r1, #0
 1303 0006 0120     		movs	r0, #1
 1304              	.LVL144:
 1305 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1306              	.LVL145:
 1307 000c 0446     		mov	r4, r0
 1308              	.LVL146:
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1309              		.loc 1 488 0
 1310 000e FFF7FEFF 		bl	prvInitialiseMutex
 1311              	.LVL147:
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1312              		.loc 1 491 0
 1313 0012 2046     		mov	r0, r4
 1314 0014 10BD     		pop	{r4, pc}
 1315              		.cfi_endproc
 1316              	.LFE10:
 1318              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1319              		.align	1
 1320              		.global	xQueueCreateMutexStatic
 1321              		.syntax unified
 1322              		.thumb
 1323              		.thumb_func
 1324              		.fpu softvfp
 1326              	xQueueCreateMutexStatic:
 1327              	.LFB11:
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1328              		.loc 1 499 0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
 1332              	.LVL148:
 1333 0000 10B5     		push	{r4, lr}
 1334              	.LCFI21:
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 4, -8
ARM GAS  /tmp/cctuPAeu.s 			page 71


 1337              		.cfi_offset 14, -4
 1338 0002 82B0     		sub	sp, sp, #8
 1339              	.LCFI22:
 1340              		.cfi_def_cfa_offset 16
 1341              	.LVL149:
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1342              		.loc 1 507 0
 1343 0004 0090     		str	r0, [sp]
 1344 0006 0B46     		mov	r3, r1
 1345 0008 0022     		movs	r2, #0
 1346 000a 1146     		mov	r1, r2
 1347              	.LVL150:
 1348 000c 0120     		movs	r0, #1
 1349              	.LVL151:
 1350 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1351              	.LVL152:
 1352 0012 0446     		mov	r4, r0
 1353              	.LVL153:
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1354              		.loc 1 508 0
 1355 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1356              	.LVL154:
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1357              		.loc 1 511 0
 1358 0018 2046     		mov	r0, r4
 1359 001a 02B0     		add	sp, sp, #8
 1360              	.LCFI23:
 1361              		.cfi_def_cfa_offset 8
 1362              		@ sp needed
 1363 001c 10BD     		pop	{r4, pc}
 1364              		.cfi_endproc
 1365              	.LFE11:
 1367              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1368              		.align	1
 1369              		.global	xQueueGenericSendFromISR
 1370              		.syntax unified
 1371              		.thumb
 1372              		.thumb_func
 1373              		.fpu softvfp
 1375              	xQueueGenericSendFromISR:
 1376              	.LFB13:
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1377              		.loc 1 924 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381              	.LVL155:
 1382 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1383              	.LCFI24:
 1384              		.cfi_def_cfa_offset 32
 1385              		.cfi_offset 3, -32
 1386              		.cfi_offset 4, -28
 1387              		.cfi_offset 5, -24
 1388              		.cfi_offset 6, -20
 1389              		.cfi_offset 7, -16
 1390              		.cfi_offset 8, -12
 1391              		.cfi_offset 9, -8
ARM GAS  /tmp/cctuPAeu.s 			page 72


 1392              		.cfi_offset 14, -4
 1393              	.LVL156:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1394              		.loc 1 929 0
 1395 0004 60B1     		cbz	r0, .L148
 1396 0006 0446     		mov	r4, r0
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1397              		.loc 1 930 0
 1398 0008 99B1     		cbz	r1, .L149
 1399 000a 0120     		movs	r0, #1
 1400              	.LVL157:
 1401              	.L131:
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1402              		.loc 1 930 0 is_stmt 0 discriminator 6
 1403 000c B8B9     		cbnz	r0, .L132
 1404              	.LBB129:
 1405              	.LBB130:
 1406              		.loc 2 195 0 is_stmt 1
 1407              		.syntax unified
 1408              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1409 000e 4FF05003 			mov r3, #80												
 1410 0012 83F31188 		msr basepri, r3											
 1411 0016 BFF36F8F 		isb														
 1412 001a BFF34F8F 		dsb														
 1413              	
 1414              	@ 0 "" 2
 1415              	.LVL158:
 1416              		.thumb
 1417              		.syntax unified
 1418              	.L133:
 1419 001e FEE7     		b	.L133
 1420              	.LVL159:
 1421              	.L148:
 1422              	.LBE130:
 1423              	.LBE129:
 1424              	.LBB131:
 1425              	.LBB132:
 1426              		.syntax unified
 1427              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1428 0020 4FF05003 			mov r3, #80												
 1429 0024 83F31188 		msr basepri, r3											
 1430 0028 BFF36F8F 		isb														
 1431 002c BFF34F8F 		dsb														
 1432              	
 1433              	@ 0 "" 2
 1434              	.LVL160:
 1435              		.thumb
 1436              		.syntax unified
 1437              	.L130:
 1438 0030 FEE7     		b	.L130
 1439              	.LVL161:
 1440              	.L149:
 1441              	.LBE132:
 1442              	.LBE131:
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1443              		.loc 1 930 0 discriminator 2
 1444 0032 006C     		ldr	r0, [r0, #64]
ARM GAS  /tmp/cctuPAeu.s 			page 73


 1445              	.LVL162:
 1446 0034 08B9     		cbnz	r0, .L141
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1447              		.loc 1 930 0 is_stmt 0
 1448 0036 0120     		movs	r0, #1
 1449 0038 E8E7     		b	.L131
 1450              	.L141:
 1451 003a 0020     		movs	r0, #0
 1452 003c E6E7     		b	.L131
 1453              	.L132:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1454              		.loc 1 931 0 is_stmt 1
 1455 003e 022B     		cmp	r3, #2
 1456 0040 09D0     		beq	.L150
 1457              	.L134:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1458              		.loc 1 931 0 is_stmt 0 discriminator 6
 1459 0042 68B9     		cbnz	r0, .L135
 1460              	.LBB133:
 1461              	.LBB134:
 1462              		.loc 2 195 0 is_stmt 1
 1463              		.syntax unified
 1464              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1465 0044 4FF05003 			mov r3, #80												
 1466 0048 83F31188 		msr basepri, r3											
 1467 004c BFF36F8F 		isb														
 1468 0050 BFF34F8F 		dsb														
 1469              	
 1470              	@ 0 "" 2
 1471              	.LVL163:
 1472              		.thumb
 1473              		.syntax unified
 1474              	.L136:
 1475 0054 FEE7     		b	.L136
 1476              	.LVL164:
 1477              	.L150:
 1478              	.LBE134:
 1479              	.LBE133:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1480              		.loc 1 931 0 discriminator 2
 1481 0056 E56B     		ldr	r5, [r4, #60]
 1482 0058 012D     		cmp	r5, #1
 1483 005a F2D0     		beq	.L134
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1484              		.loc 1 931 0 is_stmt 0
 1485 005c 0020     		movs	r0, #0
 1486 005e F0E7     		b	.L134
 1487              	.L135:
 1488 0060 1F46     		mov	r7, r3
 1489 0062 9046     		mov	r8, r2
 1490 0064 8946     		mov	r9, r1
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1491              		.loc 1 947 0 is_stmt 1
 1492 0066 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1493              	.LVL165:
 1494              	.LBB135:
 1495              	.LBB136:
ARM GAS  /tmp/cctuPAeu.s 			page 74


 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1496              		.loc 2 211 0
 1497              		.syntax unified
 1498              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1499 006a EFF31186 			mrs r6, basepri											
 1500 006e 4FF05003 		mov r3, #80												
 1501 0072 83F31188 		msr basepri, r3											
 1502 0076 BFF36F8F 		isb														
 1503 007a BFF34F8F 		dsb														
 1504              	
 1505              	@ 0 "" 2
 1506              		.thumb
 1507              		.syntax unified
 1508              	.LBE136:
 1509              	.LBE135:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1510              		.loc 1 956 0
 1511 007e A26B     		ldr	r2, [r4, #56]
 1512 0080 E36B     		ldr	r3, [r4, #60]
 1513 0082 9A42     		cmp	r2, r3
 1514 0084 01D3     		bcc	.L137
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1515              		.loc 1 956 0 is_stmt 0 discriminator 1
 1516 0086 022F     		cmp	r7, #2
 1517 0088 21D1     		bne	.L143
 1518              	.L137:
 1519              	.LBB137:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1520              		.loc 1 958 0 is_stmt 1
 1521 008a 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1522 008e 6DB2     		sxtb	r5, r5
 1523              	.LVL166:
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1524              		.loc 1 967 0
 1525 0090 3A46     		mov	r2, r7
 1526 0092 4946     		mov	r1, r9
 1527 0094 2046     		mov	r0, r4
 1528 0096 FFF7FEFF 		bl	prvCopyDataToQueue
 1529              	.LVL167:
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1530              		.loc 1 971 0
 1531 009a B5F1FF3F 		cmp	r5, #-1
ARM GAS  /tmp/cctuPAeu.s 			page 75


 1532 009e 10D1     		bne	.L139
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1533              		.loc 1 1026 0
 1534 00a0 636A     		ldr	r3, [r4, #36]
 1535 00a2 B3B1     		cbz	r3, .L144
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1536              		.loc 1 1028 0
 1537 00a4 04F12400 		add	r0, r4, #36
 1538 00a8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1539              	.LVL168:
 1540 00ac 98B1     		cbz	r0, .L145
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1541              		.loc 1 1032 0
 1542 00ae B8F1000F 		cmp	r8, #0
 1543 00b2 12D0     		beq	.L146
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1544              		.loc 1 1034 0
 1545 00b4 0120     		movs	r0, #1
 1546 00b6 C8F80000 		str	r0, [r8]
 1547              	.LVL169:
 1548              	.L138:
 1549              	.LBE137:
 1550              	.LBB138:
 1551              	.LBB139:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1552              		.loc 2 229 0
 1553              		.syntax unified
 1554              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1555 00ba 86F31188 			msr basepri, r6	
 1556              	@ 0 "" 2
 1557              	.LVL170:
 1558              		.thumb
 1559              		.syntax unified
 1560              	.LBE139:
 1561              	.LBE138:
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1562              		.loc 1 1071 0
 1563 00be BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1564              	.LVL171:
 1565              	.L139:
ARM GAS  /tmp/cctuPAeu.s 			page 76


 1566              	.LBB140:
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1567              		.loc 1 1057 0
 1568 00c2 6B1C     		adds	r3, r5, #1
 1569 00c4 5BB2     		sxtb	r3, r3
 1570 00c6 84F84530 		strb	r3, [r4, #69]
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1571              		.loc 1 1060 0
 1572 00ca 0120     		movs	r0, #1
 1573 00cc F5E7     		b	.L138
 1574              	.LVL172:
 1575              	.L143:
 1576              	.LBE140:
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1577              		.loc 1 1065 0
 1578 00ce 0020     		movs	r0, #0
 1579 00d0 F3E7     		b	.L138
 1580              	.LVL173:
 1581              	.L144:
 1582              	.LBB141:
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1583              		.loc 1 1060 0
 1584 00d2 0120     		movs	r0, #1
 1585 00d4 F1E7     		b	.L138
 1586              	.L145:
 1587 00d6 0120     		movs	r0, #1
 1588 00d8 EFE7     		b	.L138
 1589              	.L146:
 1590 00da 0120     		movs	r0, #1
 1591 00dc EDE7     		b	.L138
 1592              	.LBE141:
 1593              		.cfi_endproc
 1594              	.LFE13:
 1596              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1597              		.align	1
 1598              		.global	xQueueGiveFromISR
 1599              		.syntax unified
 1600              		.thumb
 1601              		.thumb_func
 1602              		.fpu softvfp
 1604              	xQueueGiveFromISR:
 1605              	.LFB14:
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1606              		.loc 1 1075 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 0
 1609              		@ frame_needed = 0, uses_anonymous_args = 0
 1610              	.LVL174:
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1611              		.loc 1 1086 0
 1612 0000 60B1     		cbz	r0, .L169
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1613              		.loc 1 1075 0
 1614 0002 70B5     		push	{r4, r5, r6, lr}
 1615              	.LCFI25:
 1616              		.cfi_def_cfa_offset 16
 1617              		.cfi_offset 4, -16
ARM GAS  /tmp/cctuPAeu.s 			page 77


 1618              		.cfi_offset 5, -12
 1619              		.cfi_offset 6, -8
 1620              		.cfi_offset 14, -4
 1621 0004 0446     		mov	r4, r0
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1622              		.loc 1 1090 0
 1623 0006 036C     		ldr	r3, [r0, #64]
 1624 0008 8BB1     		cbz	r3, .L154
 1625              	.LBB142:
 1626              	.LBB143:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1627              		.loc 2 195 0
 1628              		.syntax unified
 1629              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1630 000a 4FF05003 			mov r3, #80												
 1631 000e 83F31188 		msr basepri, r3											
 1632 0012 BFF36F8F 		isb														
 1633 0016 BFF34F8F 		dsb														
 1634              	
 1635              	@ 0 "" 2
 1636              	.LVL175:
 1637              		.thumb
 1638              		.syntax unified
 1639              	.L155:
 1640 001a FEE7     		b	.L155
 1641              	.L169:
 1642              	.LCFI26:
 1643              		.cfi_def_cfa_offset 0
 1644              		.cfi_restore 4
 1645              		.cfi_restore 5
 1646              		.cfi_restore 6
 1647              		.cfi_restore 14
 1648              	.LBE143:
 1649              	.LBE142:
 1650              	.LBB144:
 1651              	.LBB145:
 1652              		.syntax unified
 1653              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1654 001c 4FF05003 			mov r3, #80												
 1655 0020 83F31188 		msr basepri, r3											
 1656 0024 BFF36F8F 		isb														
 1657 0028 BFF34F8F 		dsb														
 1658              	
 1659              	@ 0 "" 2
 1660              	.LVL176:
 1661              		.thumb
 1662              		.syntax unified
 1663              	.L153:
 1664 002c FEE7     		b	.L153
 1665              	.L154:
 1666              	.LCFI27:
 1667              		.cfi_def_cfa_offset 16
 1668              		.cfi_offset 4, -16
 1669              		.cfi_offset 5, -12
 1670              		.cfi_offset 6, -8
 1671              		.cfi_offset 14, -4
 1672              	.LBE145:
ARM GAS  /tmp/cctuPAeu.s 			page 78


 1673              	.LBE144:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1674              		.loc 1 1095 0
 1675 002e 0368     		ldr	r3, [r0]
 1676 0030 53B1     		cbz	r3, .L170
 1677 0032 0123     		movs	r3, #1
 1678              	.L156:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1679              		.loc 1 1095 0 is_stmt 0 discriminator 6
 1680 0034 73B9     		cbnz	r3, .L157
 1681              	.LBB146:
 1682              	.LBB147:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1683              		.loc 2 195 0 is_stmt 1
 1684              		.syntax unified
 1685              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1686 0036 4FF05003 			mov r3, #80												
 1687 003a 83F31188 		msr basepri, r3											
 1688 003e BFF36F8F 		isb														
 1689 0042 BFF34F8F 		dsb														
 1690              	
 1691              	@ 0 "" 2
 1692              	.LVL177:
 1693              		.thumb
 1694              		.syntax unified
 1695              	.L158:
 1696 0046 FEE7     		b	.L158
 1697              	.L170:
 1698              	.LBE147:
 1699              	.LBE146:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1700              		.loc 1 1095 0 discriminator 2
 1701 0048 4368     		ldr	r3, [r0, #4]
 1702 004a 0BB9     		cbnz	r3, .L162
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1703              		.loc 1 1095 0 is_stmt 0
 1704 004c 0123     		movs	r3, #1
 1705 004e F1E7     		b	.L156
 1706              	.L162:
 1707 0050 0023     		movs	r3, #0
 1708 0052 EFE7     		b	.L156
 1709              	.L157:
 1710 0054 0E46     		mov	r6, r1
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1711              		.loc 1 1111 0 is_stmt 1
 1712 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1713              	.LVL178:
 1714              	.LBB148:
 1715              	.LBB149:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1716              		.loc 2 211 0
 1717              		.syntax unified
 1718              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1719 005a EFF31185 			mrs r5, basepri											
 1720 005e 4FF05003 		mov r3, #80												
 1721 0062 83F31188 		msr basepri, r3											
 1722 0066 BFF36F8F 		isb														
ARM GAS  /tmp/cctuPAeu.s 			page 79


 1723 006a BFF34F8F 		dsb														
 1724              	
 1725              	@ 0 "" 2
 1726              		.thumb
 1727              		.syntax unified
 1728              	.LBE149:
 1729              	.LBE148:
 1730              	.LBB150:
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1731              		.loc 1 1115 0
 1732 006e A26B     		ldr	r2, [r4, #56]
 1733              	.LVL179:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1734              		.loc 1 1120 0
 1735 0070 E36B     		ldr	r3, [r4, #60]
 1736 0072 9A42     		cmp	r2, r3
 1737 0074 1AD2     		bcs	.L163
 1738              	.LBB151:
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1739              		.loc 1 1122 0
 1740 0076 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1741 007a 5BB2     		sxtb	r3, r3
 1742              	.LVL180:
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1743              		.loc 1 1132 0
 1744 007c 0132     		adds	r2, r2, #1
 1745              	.LVL181:
 1746 007e A263     		str	r2, [r4, #56]
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1747              		.loc 1 1136 0
 1748 0080 B3F1FF3F 		cmp	r3, #-1
 1749 0084 0CD1     		bne	.L160
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1750              		.loc 1 1191 0
 1751 0086 636A     		ldr	r3, [r4, #36]
 1752              	.LVL182:
 1753 0088 93B1     		cbz	r3, .L164
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1754              		.loc 1 1193 0
 1755 008a 04F12400 		add	r0, r4, #36
 1756 008e FFF7FEFF 		bl	xTaskRemoveFromEventList
 1757              	.LVL183:
 1758 0092 78B1     		cbz	r0, .L165
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1759              		.loc 1 1197 0
 1760 0094 86B1     		cbz	r6, .L166
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1761              		.loc 1 1199 0
 1762 0096 0120     		movs	r0, #1
 1763 0098 3060     		str	r0, [r6]
 1764              	.L159:
 1765              	.LVL184:
 1766              	.LBE151:
 1767              	.LBE150:
 1768              	.LBB154:
 1769              	.LBB155:
 1770              		.loc 2 229 0
ARM GAS  /tmp/cctuPAeu.s 			page 80


 1771              		.syntax unified
 1772              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1773 009a 85F31188 			msr basepri, r5	
 1774              	@ 0 "" 2
 1775              	.LVL185:
 1776              		.thumb
 1777              		.syntax unified
 1778              	.LBE155:
 1779              	.LBE154:
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1780              		.loc 1 1236 0
 1781 009e 70BD     		pop	{r4, r5, r6, pc}
 1782              	.LVL186:
 1783              	.L160:
 1784              	.LBB156:
 1785              	.LBB152:
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1786              		.loc 1 1222 0
 1787 00a0 0133     		adds	r3, r3, #1
 1788              	.LVL187:
 1789 00a2 5BB2     		sxtb	r3, r3
 1790              	.LVL188:
 1791 00a4 84F84530 		strb	r3, [r4, #69]
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1792              		.loc 1 1225 0
 1793 00a8 0120     		movs	r0, #1
 1794 00aa F6E7     		b	.L159
 1795              	.LVL189:
 1796              	.L163:
 1797              	.LBE152:
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1798              		.loc 1 1230 0
 1799 00ac 0020     		movs	r0, #0
 1800 00ae F4E7     		b	.L159
 1801              	.LVL190:
 1802              	.L164:
 1803              	.LBB153:
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1804              		.loc 1 1225 0
 1805 00b0 0120     		movs	r0, #1
 1806 00b2 F2E7     		b	.L159
 1807              	.LVL191:
 1808              	.L165:
 1809 00b4 0120     		movs	r0, #1
 1810 00b6 F0E7     		b	.L159
 1811              	.L166:
 1812 00b8 0120     		movs	r0, #1
 1813 00ba EEE7     		b	.L159
 1814              	.LBE153:
 1815              	.LBE156:
 1816              		.cfi_endproc
 1817              	.LFE14:
 1819              		.section	.text.xQueueReceive,"ax",%progbits
 1820              		.align	1
 1821              		.global	xQueueReceive
 1822              		.syntax unified
 1823              		.thumb
ARM GAS  /tmp/cctuPAeu.s 			page 81


 1824              		.thumb_func
 1825              		.fpu softvfp
 1827              	xQueueReceive:
 1828              	.LFB15:
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1829              		.loc 1 1240 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 16
 1832              		@ frame_needed = 0, uses_anonymous_args = 0
 1833              	.LVL192:
 1834 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1835              	.LCFI28:
 1836              		.cfi_def_cfa_offset 20
 1837              		.cfi_offset 4, -20
 1838              		.cfi_offset 5, -16
 1839              		.cfi_offset 6, -12
 1840              		.cfi_offset 7, -8
 1841              		.cfi_offset 14, -4
 1842 0002 85B0     		sub	sp, sp, #20
 1843              	.LCFI29:
 1844              		.cfi_def_cfa_offset 40
 1845 0004 0192     		str	r2, [sp, #4]
 1846              	.LVL193:
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1847              		.loc 1 1246 0
 1848 0006 60B1     		cbz	r0, .L195
 1849 0008 0446     		mov	r4, r0
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1850              		.loc 1 1250 0
 1851 000a 99B1     		cbz	r1, .L196
 1852 000c 0125     		movs	r5, #1
 1853              	.L174:
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1854              		.loc 1 1250 0 is_stmt 0 discriminator 6
 1855 000e BDB9     		cbnz	r5, .L175
 1856              	.LBB157:
 1857              	.LBB158:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1858              		.loc 2 195 0 is_stmt 1
 1859              		.syntax unified
 1860              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1861 0010 4FF05003 			mov r3, #80												
 1862 0014 83F31188 		msr basepri, r3											
 1863 0018 BFF36F8F 		isb														
 1864 001c BFF34F8F 		dsb														
 1865              	
 1866              	@ 0 "" 2
 1867              	.LVL194:
 1868              		.thumb
 1869              		.syntax unified
 1870              	.L176:
 1871 0020 FEE7     		b	.L176
 1872              	.L195:
 1873              	.LBE158:
 1874              	.LBE157:
 1875              	.LBB159:
 1876              	.LBB160:
ARM GAS  /tmp/cctuPAeu.s 			page 82


 1877              		.syntax unified
 1878              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1879 0022 4FF05003 			mov r3, #80												
 1880 0026 83F31188 		msr basepri, r3											
 1881 002a BFF36F8F 		isb														
 1882 002e BFF34F8F 		dsb														
 1883              	
 1884              	@ 0 "" 2
 1885              	.LVL195:
 1886              		.thumb
 1887              		.syntax unified
 1888              	.L173:
 1889 0032 FEE7     		b	.L173
 1890              	.L196:
 1891              	.LBE160:
 1892              	.LBE159:
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1893              		.loc 1 1250 0 discriminator 2
 1894 0034 036C     		ldr	r3, [r0, #64]
 1895 0036 0BB9     		cbnz	r3, .L191
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1896              		.loc 1 1250 0 is_stmt 0
 1897 0038 0125     		movs	r5, #1
 1898 003a E8E7     		b	.L174
 1899              	.L191:
 1900 003c 0025     		movs	r5, #0
 1901 003e E6E7     		b	.L174
 1902              	.L175:
 1903 0040 0E46     		mov	r6, r1
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1904              		.loc 1 1255 0 is_stmt 1
 1905 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 1906              	.LVL196:
 1907 0046 10B9     		cbnz	r0, .L177
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1908              		.loc 1 1255 0 is_stmt 0 discriminator 2
 1909 0048 019B     		ldr	r3, [sp, #4]
 1910 004a 03B1     		cbz	r3, .L177
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1911              		.loc 1 1255 0
 1912 004c 0025     		movs	r5, #0
 1913              	.L177:
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1914              		.loc 1 1255 0 discriminator 6
 1915 004e 45B9     		cbnz	r5, .L193
 1916              	.LBB161:
 1917              	.LBB162:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1918              		.loc 2 195 0 is_stmt 1
 1919              		.syntax unified
 1920              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1921 0050 4FF05003 			mov r3, #80												
 1922 0054 83F31188 		msr basepri, r3											
 1923 0058 BFF36F8F 		isb														
 1924 005c BFF34F8F 		dsb														
 1925              	
 1926              	@ 0 "" 2
ARM GAS  /tmp/cctuPAeu.s 			page 83


 1927              	.LVL197:
 1928              		.thumb
 1929              		.syntax unified
 1930              	.L179:
 1931 0060 FEE7     		b	.L179
 1932              	.L193:
 1933              	.LBE162:
 1934              	.LBE161:
 1935 0062 0027     		movs	r7, #0
 1936 0064 2FE0     		b	.L178
 1937              	.LVL198:
 1938              	.L197:
 1939              	.LBB163:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 1940              		.loc 1 1274 0
 1941 0066 3146     		mov	r1, r6
 1942 0068 2046     		mov	r0, r4
 1943 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 1944              	.LVL199:
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1945              		.loc 1 1276 0
 1946 006e 013D     		subs	r5, r5, #1
 1947              	.LVL200:
 1948 0070 A563     		str	r5, [r4, #56]
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1949              		.loc 1 1281 0
 1950 0072 2369     		ldr	r3, [r4, #16]
 1951 0074 63B1     		cbz	r3, .L181
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1952              		.loc 1 1283 0
 1953 0076 04F11000 		add	r0, r4, #16
 1954 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1955              	.LVL201:
 1956 007e 38B1     		cbz	r0, .L181
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1957              		.loc 1 1285 0
 1958 0080 4FF08052 		mov	r2, #268435456
 1959 0084 344B     		ldr	r3, .L202
 1960 0086 1A60     		str	r2, [r3]
 1961              		.syntax unified
 1962              	@ 1285 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1963 0088 BFF34F8F 		dsb
 1964              	@ 0 "" 2
 1965              	@ 1285 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1966 008c BFF36F8F 		isb
 1967              	@ 0 "" 2
 1968              		.thumb
 1969              		.syntax unified
 1970              	.L181:
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1971              		.loc 1 1297 0
 1972 0090 FFF7FEFF 		bl	vPortExitCritical
 1973              	.LVL202:
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1974              		.loc 1 1298 0
 1975 0094 0120     		movs	r0, #1
 1976              	.LVL203:
ARM GAS  /tmp/cctuPAeu.s 			page 84


 1977              	.L171:
 1978              	.LBE163:
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1979              		.loc 1 1377 0
 1980 0096 05B0     		add	sp, sp, #20
 1981              	.LCFI30:
 1982              		.cfi_remember_state
 1983              		.cfi_def_cfa_offset 20
 1984              		@ sp needed
 1985 0098 F0BD     		pop	{r4, r5, r6, r7, pc}
 1986              	.LVL204:
 1987              	.L198:
 1988              	.LCFI31:
 1989              		.cfi_restore_state
 1990              	.LBB164:
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1991              		.loc 1 1306 0
 1992 009a FFF7FEFF 		bl	vPortExitCritical
 1993              	.LVL205:
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1994              		.loc 1 1308 0
 1995 009e 0020     		movs	r0, #0
 1996 00a0 F9E7     		b	.L171
 1997              	.L199:
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1998              		.loc 1 1314 0
 1999 00a2 02A8     		add	r0, sp, #8
 2000 00a4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2001              	.LVL206:
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2002              		.loc 1 1315 0
 2003 00a8 0127     		movs	r7, #1
 2004 00aa 16E0     		b	.L184
 2005              	.LVL207:
 2006              	.L200:
 2007              	.LBE164:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2008              		.loc 1 1330 0 discriminator 1
 2009 00ac 0023     		movs	r3, #0
 2010 00ae 84F84430 		strb	r3, [r4, #68]
 2011 00b2 1EE0     		b	.L185
 2012              	.L201:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2013              		.loc 1 1330 0 is_stmt 0 discriminator 4
 2014 00b4 0023     		movs	r3, #0
 2015 00b6 84F84530 		strb	r3, [r4, #69]
 2016 00ba 20E0     		b	.L186
 2017              	.L188:
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2018              		.loc 1 1355 0 is_stmt 1
 2019 00bc 2046     		mov	r0, r4
 2020 00be FFF7FEFF 		bl	prvUnlockQueue
 2021              	.LVL208:
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2022              		.loc 1 1356 0
 2023 00c2 FFF7FEFF 		bl	xTaskResumeAll
 2024              	.LVL209:
ARM GAS  /tmp/cctuPAeu.s 			page 85


 2025              	.L178:
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2026              		.loc 1 1265 0
 2027 00c6 FFF7FEFF 		bl	vPortEnterCritical
 2028              	.LVL210:
 2029              	.LBB165:
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2030              		.loc 1 1267 0
 2031 00ca A56B     		ldr	r5, [r4, #56]
 2032              	.LVL211:
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2033              		.loc 1 1271 0
 2034 00cc 002D     		cmp	r5, #0
 2035 00ce CAD1     		bne	.L197
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2036              		.loc 1 1302 0
 2037 00d0 019B     		ldr	r3, [sp, #4]
 2038 00d2 002B     		cmp	r3, #0
 2039 00d4 E1D0     		beq	.L198
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2040              		.loc 1 1310 0
 2041 00d6 002F     		cmp	r7, #0
 2042 00d8 E3D0     		beq	.L199
 2043              	.LVL212:
 2044              	.L184:
 2045              	.LBE165:
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2046              		.loc 1 1324 0
 2047 00da FFF7FEFF 		bl	vPortExitCritical
 2048              	.LVL213:
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2049              		.loc 1 1329 0
 2050 00de FFF7FEFF 		bl	vTaskSuspendAll
 2051              	.LVL214:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2052              		.loc 1 1330 0
 2053 00e2 FFF7FEFF 		bl	vPortEnterCritical
 2054              	.LVL215:
 2055 00e6 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2056 00ea 5BB2     		sxtb	r3, r3
 2057 00ec B3F1FF3F 		cmp	r3, #-1
 2058 00f0 DCD0     		beq	.L200
 2059              	.L185:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2060              		.loc 1 1330 0 is_stmt 0 discriminator 3
 2061 00f2 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2062 00f6 5BB2     		sxtb	r3, r3
 2063 00f8 B3F1FF3F 		cmp	r3, #-1
 2064 00fc DAD0     		beq	.L201
 2065              	.L186:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2066              		.loc 1 1330 0 discriminator 6
 2067 00fe FFF7FEFF 		bl	vPortExitCritical
 2068              	.LVL216:
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2069              		.loc 1 1333 0 is_stmt 1 discriminator 6
 2070 0102 01A9     		add	r1, sp, #4
ARM GAS  /tmp/cctuPAeu.s 			page 86


 2071 0104 02A8     		add	r0, sp, #8
 2072 0106 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2073              	.LVL217:
 2074 010a C8B9     		cbnz	r0, .L187
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2075              		.loc 1 1337 0
 2076 010c 2046     		mov	r0, r4
 2077 010e FFF7FEFF 		bl	prvIsQueueEmpty
 2078              	.LVL218:
 2079 0112 0028     		cmp	r0, #0
 2080 0114 D2D0     		beq	.L188
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2081              		.loc 1 1340 0
 2082 0116 0199     		ldr	r1, [sp, #4]
 2083 0118 04F12400 		add	r0, r4, #36
 2084 011c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2085              	.LVL219:
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2086              		.loc 1 1341 0
 2087 0120 2046     		mov	r0, r4
 2088 0122 FFF7FEFF 		bl	prvUnlockQueue
 2089              	.LVL220:
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2090              		.loc 1 1342 0
 2091 0126 FFF7FEFF 		bl	xTaskResumeAll
 2092              	.LVL221:
 2093 012a 0028     		cmp	r0, #0
 2094 012c CBD1     		bne	.L178
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2095              		.loc 1 1344 0
 2096 012e 4FF08052 		mov	r2, #268435456
 2097 0132 094B     		ldr	r3, .L202
 2098 0134 1A60     		str	r2, [r3]
 2099              		.syntax unified
 2100              	@ 1344 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2101 0136 BFF34F8F 		dsb
 2102              	@ 0 "" 2
 2103              	@ 1344 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2104 013a BFF36F8F 		isb
 2105              	@ 0 "" 2
 2106              		.thumb
 2107              		.syntax unified
 2108 013e C2E7     		b	.L178
 2109              	.L187:
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2110              		.loc 1 1363 0
 2111 0140 2046     		mov	r0, r4
 2112 0142 FFF7FEFF 		bl	prvUnlockQueue
 2113              	.LVL222:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2114              		.loc 1 1364 0
 2115 0146 FFF7FEFF 		bl	xTaskResumeAll
 2116              	.LVL223:
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2117              		.loc 1 1366 0
 2118 014a 2046     		mov	r0, r4
 2119 014c FFF7FEFF 		bl	prvIsQueueEmpty
ARM GAS  /tmp/cctuPAeu.s 			page 87


 2120              	.LVL224:
 2121 0150 0028     		cmp	r0, #0
 2122 0152 B8D0     		beq	.L178
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2123              		.loc 1 1369 0
 2124 0154 0020     		movs	r0, #0
 2125 0156 9EE7     		b	.L171
 2126              	.L203:
 2127              		.align	2
 2128              	.L202:
 2129 0158 04ED00E0 		.word	-536810236
 2130              		.cfi_endproc
 2131              	.LFE15:
 2133              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2134              		.align	1
 2135              		.global	xQueueSemaphoreTake
 2136              		.syntax unified
 2137              		.thumb
 2138              		.thumb_func
 2139              		.fpu softvfp
 2141              	xQueueSemaphoreTake:
 2142              	.LFB16:
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2143              		.loc 1 1381 0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 16
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
 2147              	.LVL225:
 2148 0000 70B5     		push	{r4, r5, r6, lr}
 2149              	.LCFI32:
 2150              		.cfi_def_cfa_offset 16
 2151              		.cfi_offset 4, -16
 2152              		.cfi_offset 5, -12
 2153              		.cfi_offset 6, -8
 2154              		.cfi_offset 14, -4
 2155 0002 84B0     		sub	sp, sp, #16
 2156              	.LCFI33:
 2157              		.cfi_def_cfa_offset 32
 2158 0004 0191     		str	r1, [sp, #4]
 2159              	.LVL226:
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2160              		.loc 1 1391 0
 2161 0006 58B1     		cbz	r0, .L230
 2162 0008 0446     		mov	r4, r0
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2163              		.loc 1 1395 0
 2164 000a 036C     		ldr	r3, [r0, #64]
 2165 000c 8BB1     		cbz	r3, .L207
 2166              	.LBB166:
 2167              	.LBB167:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2168              		.loc 2 195 0
 2169              		.syntax unified
 2170              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2171 000e 4FF05003 			mov r3, #80												
 2172 0012 83F31188 		msr basepri, r3											
 2173 0016 BFF36F8F 		isb														
ARM GAS  /tmp/cctuPAeu.s 			page 88


 2174 001a BFF34F8F 		dsb														
 2175              	
 2176              	@ 0 "" 2
 2177              	.LVL227:
 2178              		.thumb
 2179              		.syntax unified
 2180              	.L208:
 2181 001e FEE7     		b	.L208
 2182              	.L230:
 2183              	.LBE167:
 2184              	.LBE166:
 2185              	.LBB168:
 2186              	.LBB169:
 2187              		.syntax unified
 2188              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2189 0020 4FF05003 			mov r3, #80												
 2190 0024 83F31188 		msr basepri, r3											
 2191 0028 BFF36F8F 		isb														
 2192 002c BFF34F8F 		dsb														
 2193              	
 2194              	@ 0 "" 2
 2195              	.LVL228:
 2196              		.thumb
 2197              		.syntax unified
 2198              	.L206:
 2199 0030 FEE7     		b	.L206
 2200              	.L207:
 2201              	.LBE169:
 2202              	.LBE168:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2203              		.loc 1 1400 0
 2204 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2205              	.LVL229:
 2206 0036 60B9     		cbnz	r0, .L226
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2207              		.loc 1 1400 0 is_stmt 0 discriminator 2
 2208 0038 019B     		ldr	r3, [sp, #4]
 2209 003a 63B9     		cbnz	r3, .L227
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2210              		.loc 1 1400 0
 2211 003c 0123     		movs	r3, #1
 2212              	.L209:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2213              		.loc 1 1400 0 discriminator 6
 2214 003e 63B9     		cbnz	r3, .L228
 2215              	.LBB170:
 2216              	.LBB171:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2217              		.loc 2 195 0 is_stmt 1
 2218              		.syntax unified
 2219              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2220 0040 4FF05003 			mov r3, #80												
 2221 0044 83F31188 		msr basepri, r3											
 2222 0048 BFF36F8F 		isb														
 2223 004c BFF34F8F 		dsb														
 2224              	
 2225              	@ 0 "" 2
ARM GAS  /tmp/cctuPAeu.s 			page 89


 2226              	.LVL230:
 2227              		.thumb
 2228              		.syntax unified
 2229              	.L211:
 2230 0050 FEE7     		b	.L211
 2231              	.L226:
 2232              	.LBE171:
 2233              	.LBE170:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2234              		.loc 1 1400 0
 2235 0052 0123     		movs	r3, #1
 2236 0054 F3E7     		b	.L209
 2237              	.L227:
 2238 0056 0023     		movs	r3, #0
 2239 0058 F1E7     		b	.L209
 2240              	.L228:
 2241 005a 0025     		movs	r5, #0
 2242 005c 2E46     		mov	r6, r5
 2243 005e 4EE0     		b	.L210
 2244              	.LVL231:
 2245              	.L232:
 2246              	.LBB172:
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2247              		.loc 1 1425 0
 2248 0060 013B     		subs	r3, r3, #1
 2249              	.LVL232:
 2250 0062 A363     		str	r3, [r4, #56]
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2251              		.loc 1 1429 0
 2252 0064 2368     		ldr	r3, [r4]
 2253              	.LVL233:
 2254 0066 13B9     		cbnz	r3, .L213
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2255              		.loc 1 1433 0
 2256 0068 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2257              	.LVL234:
 2258 006c 6060     		str	r0, [r4, #4]
 2259              	.L213:
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2260              		.loc 1 1444 0
 2261 006e 2369     		ldr	r3, [r4, #16]
 2262 0070 63B1     		cbz	r3, .L214
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2263              		.loc 1 1446 0
 2264 0072 04F11000 		add	r0, r4, #16
 2265 0076 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2266              	.LVL235:
 2267 007a 38B1     		cbz	r0, .L214
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2268              		.loc 1 1448 0
 2269 007c 4FF08052 		mov	r2, #268435456
 2270 0080 474B     		ldr	r3, .L238
 2271 0082 1A60     		str	r2, [r3]
 2272              		.syntax unified
 2273              	@ 1448 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2274 0084 BFF34F8F 		dsb
 2275              	@ 0 "" 2
ARM GAS  /tmp/cctuPAeu.s 			page 90


 2276              	@ 1448 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2277 0088 BFF36F8F 		isb
 2278              	@ 0 "" 2
 2279              		.thumb
 2280              		.syntax unified
 2281              	.L214:
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2282              		.loc 1 1460 0
 2283 008c FFF7FEFF 		bl	vPortExitCritical
 2284              	.LVL236:
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2285              		.loc 1 1461 0
 2286 0090 0125     		movs	r5, #1
 2287              	.LVL237:
 2288              	.L204:
 2289              	.LBE172:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2290              		.loc 1 1596 0
 2291 0092 2846     		mov	r0, r5
 2292 0094 04B0     		add	sp, sp, #16
 2293              	.LCFI34:
 2294              		.cfi_remember_state
 2295              		.cfi_def_cfa_offset 16
 2296              		@ sp needed
 2297 0096 70BD     		pop	{r4, r5, r6, pc}
 2298              	.LVL238:
 2299              	.L233:
 2300              	.LCFI35:
 2301              		.cfi_restore_state
 2302              	.LBB175:
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2303              		.loc 1 1472 0
 2304 0098 45B1     		cbz	r5, .L217
 2305              	.LBB173:
 2306              	.LBB174:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2307              		.loc 2 195 0
 2308              		.syntax unified
 2309              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2310 009a 4FF05003 			mov r3, #80												
 2311 009e 83F31188 		msr basepri, r3											
 2312 00a2 BFF36F8F 		isb														
 2313 00a6 BFF34F8F 		dsb														
 2314              	
 2315              	@ 0 "" 2
 2316              	.LVL239:
 2317              		.thumb
 2318              		.syntax unified
 2319              	.L218:
 2320 00aa FEE7     		b	.L218
 2321              	.L217:
 2322              	.LBE174:
 2323              	.LBE173:
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2324              		.loc 1 1478 0
 2325 00ac FFF7FEFF 		bl	vPortExitCritical
 2326              	.LVL240:
ARM GAS  /tmp/cctuPAeu.s 			page 91


1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2327              		.loc 1 1480 0
 2328 00b0 EFE7     		b	.L204
 2329              	.L234:
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2330              		.loc 1 1486 0
 2331 00b2 02A8     		add	r0, sp, #8
 2332 00b4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2333              	.LVL241:
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2334              		.loc 1 1487 0
 2335 00b8 0126     		movs	r6, #1
 2336 00ba 2AE0     		b	.L219
 2337              	.LVL242:
 2338              	.L235:
 2339              	.LBE175:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2340              		.loc 1 1502 0 discriminator 1
 2341 00bc 0023     		movs	r3, #0
 2342 00be 84F84430 		strb	r3, [r4, #68]
 2343 00c2 32E0     		b	.L220
 2344              	.L236:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2345              		.loc 1 1502 0 is_stmt 0 discriminator 4
 2346 00c4 0023     		movs	r3, #0
 2347 00c6 84F84530 		strb	r3, [r4, #69]
 2348 00ca 34E0     		b	.L221
 2349              	.L237:
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2350              		.loc 1 1519 0 is_stmt 1
 2351 00cc FFF7FEFF 		bl	vPortEnterCritical
 2352              	.LVL243:
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2353              		.loc 1 1521 0
 2354 00d0 6068     		ldr	r0, [r4, #4]
 2355 00d2 FFF7FEFF 		bl	xTaskPriorityInherit
 2356              	.LVL244:
 2357 00d6 0546     		mov	r5, r0
 2358              	.LVL245:
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2359              		.loc 1 1523 0
 2360 00d8 FFF7FEFF 		bl	vPortExitCritical
 2361              	.LVL246:
 2362 00dc 3BE0     		b	.L224
 2363              	.L223:
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2364              		.loc 1 1547 0
 2365 00de 2046     		mov	r0, r4
 2366 00e0 FFF7FEFF 		bl	prvUnlockQueue
 2367              	.LVL247:
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2368              		.loc 1 1548 0
 2369 00e4 FFF7FEFF 		bl	xTaskResumeAll
 2370              	.LVL248:
 2371 00e8 09E0     		b	.L210
 2372              	.L222:
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
ARM GAS  /tmp/cctuPAeu.s 			page 92


 2373              		.loc 1 1554 0
 2374 00ea 2046     		mov	r0, r4
 2375 00ec FFF7FEFF 		bl	prvUnlockQueue
 2376              	.LVL249:
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2377              		.loc 1 1555 0
 2378 00f0 FFF7FEFF 		bl	xTaskResumeAll
 2379              	.LVL250:
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2380              		.loc 1 1561 0
 2381 00f4 2046     		mov	r0, r4
 2382 00f6 FFF7FEFF 		bl	prvIsQueueEmpty
 2383              	.LVL251:
 2384 00fa 0028     		cmp	r0, #0
 2385 00fc 40D1     		bne	.L231
 2386              	.LVL252:
 2387              	.L210:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2388              		.loc 1 1411 0
 2389 00fe FFF7FEFF 		bl	vPortEnterCritical
 2390              	.LVL253:
 2391              	.LBB176:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2392              		.loc 1 1415 0
 2393 0102 A36B     		ldr	r3, [r4, #56]
 2394              	.LVL254:
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2395              		.loc 1 1419 0
 2396 0104 002B     		cmp	r3, #0
 2397 0106 ABD1     		bne	.L232
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2398              		.loc 1 1465 0
 2399 0108 019B     		ldr	r3, [sp, #4]
 2400              	.LVL255:
 2401 010a 002B     		cmp	r3, #0
 2402 010c C4D0     		beq	.L233
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2403              		.loc 1 1482 0
 2404 010e 002E     		cmp	r6, #0
 2405 0110 CFD0     		beq	.L234
 2406              	.LVL256:
 2407              	.L219:
 2408              	.LBE176:
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2409              		.loc 1 1496 0
 2410 0112 FFF7FEFF 		bl	vPortExitCritical
 2411              	.LVL257:
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2412              		.loc 1 1501 0
 2413 0116 FFF7FEFF 		bl	vTaskSuspendAll
 2414              	.LVL258:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2415              		.loc 1 1502 0
 2416 011a FFF7FEFF 		bl	vPortEnterCritical
 2417              	.LVL259:
 2418 011e 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2419 0122 5BB2     		sxtb	r3, r3
ARM GAS  /tmp/cctuPAeu.s 			page 93


 2420 0124 B3F1FF3F 		cmp	r3, #-1
 2421 0128 C8D0     		beq	.L235
 2422              	.L220:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2423              		.loc 1 1502 0 is_stmt 0 discriminator 3
 2424 012a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2425 012e 5BB2     		sxtb	r3, r3
 2426 0130 B3F1FF3F 		cmp	r3, #-1
 2427 0134 C6D0     		beq	.L236
 2428              	.L221:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2429              		.loc 1 1502 0 discriminator 6
 2430 0136 FFF7FEFF 		bl	vPortExitCritical
 2431              	.LVL260:
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2432              		.loc 1 1505 0 is_stmt 1 discriminator 6
 2433 013a 01A9     		add	r1, sp, #4
 2434 013c 02A8     		add	r0, sp, #8
 2435 013e FFF7FEFF 		bl	xTaskCheckForTimeOut
 2436              	.LVL261:
 2437 0142 0028     		cmp	r0, #0
 2438 0144 D1D1     		bne	.L222
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2439              		.loc 1 1511 0
 2440 0146 2046     		mov	r0, r4
 2441 0148 FFF7FEFF 		bl	prvIsQueueEmpty
 2442              	.LVL262:
 2443 014c 0028     		cmp	r0, #0
 2444 014e C6D0     		beq	.L223
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2445              		.loc 1 1517 0
 2446 0150 2368     		ldr	r3, [r4]
 2447 0152 002B     		cmp	r3, #0
 2448 0154 BAD0     		beq	.L237
 2449              	.L224:
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2450              		.loc 1 1532 0
 2451 0156 0199     		ldr	r1, [sp, #4]
 2452 0158 04F12400 		add	r0, r4, #36
 2453 015c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2454              	.LVL263:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2455              		.loc 1 1533 0
 2456 0160 2046     		mov	r0, r4
 2457 0162 FFF7FEFF 		bl	prvUnlockQueue
 2458              	.LVL264:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2459              		.loc 1 1534 0
 2460 0166 FFF7FEFF 		bl	xTaskResumeAll
 2461              	.LVL265:
 2462 016a 0028     		cmp	r0, #0
 2463 016c C7D1     		bne	.L210
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2464              		.loc 1 1536 0
 2465 016e 4FF08052 		mov	r2, #268435456
 2466 0172 0B4B     		ldr	r3, .L238
 2467 0174 1A60     		str	r2, [r3]
ARM GAS  /tmp/cctuPAeu.s 			page 94


 2468              		.syntax unified
 2469              	@ 1536 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2470 0176 BFF34F8F 		dsb
 2471              	@ 0 "" 2
 2472              	@ 1536 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2473 017a BFF36F8F 		isb
 2474              	@ 0 "" 2
 2475              		.thumb
 2476              		.syntax unified
 2477 017e BEE7     		b	.L210
 2478              	.L231:
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2479              		.loc 1 1568 0
 2480 0180 002D     		cmp	r5, #0
 2481 0182 86D0     		beq	.L204
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2482              		.loc 1 1570 0
 2483 0184 FFF7FEFF 		bl	vPortEnterCritical
 2484              	.LVL266:
 2485              	.LBB177:
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 2486              		.loc 1 1579 0
 2487 0188 2046     		mov	r0, r4
 2488 018a FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2489              	.LVL267:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2490              		.loc 1 1580 0
 2491 018e 0146     		mov	r1, r0
 2492 0190 6068     		ldr	r0, [r4, #4]
 2493              	.LVL268:
 2494 0192 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2495              	.LVL269:
 2496              	.LBE177:
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2497              		.loc 1 1582 0
 2498 0196 FFF7FEFF 		bl	vPortExitCritical
 2499              	.LVL270:
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2500              		.loc 1 1588 0
 2501 019a 0025     		movs	r5, #0
 2502              	.LVL271:
 2503 019c 79E7     		b	.L204
 2504              	.L239:
 2505 019e 00BF     		.align	2
 2506              	.L238:
 2507 01a0 04ED00E0 		.word	-536810236
 2508              		.cfi_endproc
 2509              	.LFE16:
 2511              		.section	.text.xQueuePeek,"ax",%progbits
 2512              		.align	1
 2513              		.global	xQueuePeek
 2514              		.syntax unified
 2515              		.thumb
 2516              		.thumb_func
 2517              		.fpu softvfp
 2519              	xQueuePeek:
 2520              	.LFB17:
ARM GAS  /tmp/cctuPAeu.s 			page 95


1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2521              		.loc 1 1600 0
 2522              		.cfi_startproc
 2523              		@ args = 0, pretend = 0, frame = 16
 2524              		@ frame_needed = 0, uses_anonymous_args = 0
 2525              	.LVL272:
 2526 0000 70B5     		push	{r4, r5, r6, lr}
 2527              	.LCFI36:
 2528              		.cfi_def_cfa_offset 16
 2529              		.cfi_offset 4, -16
 2530              		.cfi_offset 5, -12
 2531              		.cfi_offset 6, -8
 2532              		.cfi_offset 14, -4
 2533 0002 84B0     		sub	sp, sp, #16
 2534              	.LCFI37:
 2535              		.cfi_def_cfa_offset 32
 2536 0004 0192     		str	r2, [sp, #4]
 2537              	.LVL273:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2538              		.loc 1 1607 0
 2539 0006 60B1     		cbz	r0, .L264
 2540 0008 0446     		mov	r4, r0
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2541              		.loc 1 1611 0
 2542 000a 99B1     		cbz	r1, .L265
 2543 000c 0125     		movs	r5, #1
 2544              	.L243:
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2545              		.loc 1 1611 0 is_stmt 0 discriminator 6
 2546 000e BDB9     		cbnz	r5, .L244
 2547              	.LBB178:
 2548              	.LBB179:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2549              		.loc 2 195 0 is_stmt 1
 2550              		.syntax unified
 2551              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2552 0010 4FF05003 			mov r3, #80												
 2553 0014 83F31188 		msr basepri, r3											
 2554 0018 BFF36F8F 		isb														
 2555 001c BFF34F8F 		dsb														
 2556              	
 2557              	@ 0 "" 2
 2558              	.LVL274:
 2559              		.thumb
 2560              		.syntax unified
 2561              	.L245:
 2562 0020 FEE7     		b	.L245
 2563              	.L264:
 2564              	.LBE179:
 2565              	.LBE178:
 2566              	.LBB180:
 2567              	.LBB181:
 2568              		.syntax unified
 2569              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2570 0022 4FF05003 			mov r3, #80												
 2571 0026 83F31188 		msr basepri, r3											
 2572 002a BFF36F8F 		isb														
ARM GAS  /tmp/cctuPAeu.s 			page 96


 2573 002e BFF34F8F 		dsb														
 2574              	
 2575              	@ 0 "" 2
 2576              	.LVL275:
 2577              		.thumb
 2578              		.syntax unified
 2579              	.L242:
 2580 0032 FEE7     		b	.L242
 2581              	.L265:
 2582              	.LBE181:
 2583              	.LBE180:
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2584              		.loc 1 1611 0 discriminator 2
 2585 0034 036C     		ldr	r3, [r0, #64]
 2586 0036 0BB9     		cbnz	r3, .L260
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2587              		.loc 1 1611 0 is_stmt 0
 2588 0038 0125     		movs	r5, #1
 2589 003a E8E7     		b	.L243
 2590              	.L260:
 2591 003c 0025     		movs	r5, #0
 2592 003e E6E7     		b	.L243
 2593              	.L244:
 2594 0040 0E46     		mov	r6, r1
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2595              		.loc 1 1616 0 is_stmt 1
 2596 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 2597              	.LVL276:
 2598 0046 10B9     		cbnz	r0, .L246
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2599              		.loc 1 1616 0 is_stmt 0 discriminator 2
 2600 0048 019B     		ldr	r3, [sp, #4]
 2601 004a 03B1     		cbz	r3, .L246
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2602              		.loc 1 1616 0
 2603 004c 0025     		movs	r5, #0
 2604              	.L246:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2605              		.loc 1 1616 0 discriminator 6
 2606 004e 45B9     		cbnz	r5, .L262
 2607              	.LBB182:
 2608              	.LBB183:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2609              		.loc 2 195 0 is_stmt 1
 2610              		.syntax unified
 2611              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2612 0050 4FF05003 			mov r3, #80												
 2613 0054 83F31188 		msr basepri, r3											
 2614 0058 BFF36F8F 		isb														
 2615 005c BFF34F8F 		dsb														
 2616              	
 2617              	@ 0 "" 2
 2618              	.LVL277:
 2619              		.thumb
 2620              		.syntax unified
 2621              	.L248:
 2622 0060 FEE7     		b	.L248
ARM GAS  /tmp/cctuPAeu.s 			page 97


 2623              	.L262:
 2624              	.LBE183:
 2625              	.LBE182:
 2626 0062 0025     		movs	r5, #0
 2627 0064 2FE0     		b	.L247
 2628              	.LVL278:
 2629              	.L266:
 2630              	.LBB184:
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2631              		.loc 1 1638 0
 2632 0066 E568     		ldr	r5, [r4, #12]
 2633              	.LVL279:
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2634              		.loc 1 1640 0
 2635 0068 3146     		mov	r1, r6
 2636 006a 2046     		mov	r0, r4
 2637 006c FFF7FEFF 		bl	prvCopyDataFromQueue
 2638              	.LVL280:
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2639              		.loc 1 1644 0
 2640 0070 E560     		str	r5, [r4, #12]
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2641              		.loc 1 1648 0
 2642 0072 636A     		ldr	r3, [r4, #36]
 2643 0074 63B1     		cbz	r3, .L250
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2644              		.loc 1 1650 0
 2645 0076 04F12400 		add	r0, r4, #36
 2646 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2647              	.LVL281:
 2648 007e 38B1     		cbz	r0, .L250
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2649              		.loc 1 1653 0
 2650 0080 4FF08052 		mov	r2, #268435456
 2651 0084 344B     		ldr	r3, .L271
 2652 0086 1A60     		str	r2, [r3]
 2653              		.syntax unified
 2654              	@ 1653 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2655 0088 BFF34F8F 		dsb
 2656              	@ 0 "" 2
 2657              	@ 1653 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2658 008c BFF36F8F 		isb
 2659              	@ 0 "" 2
 2660              		.thumb
 2661              		.syntax unified
 2662              	.L250:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2663              		.loc 1 1665 0
 2664 0090 FFF7FEFF 		bl	vPortExitCritical
 2665              	.LVL282:
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2666              		.loc 1 1666 0
 2667 0094 0120     		movs	r0, #1
 2668              	.LVL283:
 2669              	.L240:
 2670              	.LBE184:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cctuPAeu.s 			page 98


 2671              		.loc 1 1746 0
 2672 0096 04B0     		add	sp, sp, #16
 2673              	.LCFI38:
 2674              		.cfi_remember_state
 2675              		.cfi_def_cfa_offset 16
 2676              		@ sp needed
 2677 0098 70BD     		pop	{r4, r5, r6, pc}
 2678              	.LVL284:
 2679              	.L267:
 2680              	.LCFI39:
 2681              		.cfi_restore_state
 2682              	.LBB185:
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 2683              		.loc 1 1674 0
 2684 009a FFF7FEFF 		bl	vPortExitCritical
 2685              	.LVL285:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2686              		.loc 1 1676 0
 2687 009e 0020     		movs	r0, #0
 2688 00a0 F9E7     		b	.L240
 2689              	.L268:
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2690              		.loc 1 1683 0
 2691 00a2 02A8     		add	r0, sp, #8
 2692 00a4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2693              	.LVL286:
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2694              		.loc 1 1684 0
 2695 00a8 0125     		movs	r5, #1
 2696 00aa 16E0     		b	.L253
 2697              	.LVL287:
 2698              	.L269:
 2699              	.LBE185:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2700              		.loc 1 1699 0 discriminator 1
 2701 00ac 0023     		movs	r3, #0
 2702 00ae 84F84430 		strb	r3, [r4, #68]
 2703 00b2 1EE0     		b	.L254
 2704              	.L270:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2705              		.loc 1 1699 0 is_stmt 0 discriminator 4
 2706 00b4 0023     		movs	r3, #0
 2707 00b6 84F84530 		strb	r3, [r4, #69]
 2708 00ba 20E0     		b	.L255
 2709              	.L257:
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2710              		.loc 1 1724 0 is_stmt 1
 2711 00bc 2046     		mov	r0, r4
 2712 00be FFF7FEFF 		bl	prvUnlockQueue
 2713              	.LVL288:
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2714              		.loc 1 1725 0
 2715 00c2 FFF7FEFF 		bl	xTaskResumeAll
 2716              	.LVL289:
 2717              	.L247:
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2718              		.loc 1 1627 0
ARM GAS  /tmp/cctuPAeu.s 			page 99


 2719 00c6 FFF7FEFF 		bl	vPortEnterCritical
 2720              	.LVL290:
 2721              	.LBB186:
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2722              		.loc 1 1629 0
 2723 00ca A36B     		ldr	r3, [r4, #56]
 2724              	.LVL291:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2725              		.loc 1 1633 0
 2726 00cc 002B     		cmp	r3, #0
 2727 00ce CAD1     		bne	.L266
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2728              		.loc 1 1670 0
 2729 00d0 019B     		ldr	r3, [sp, #4]
 2730              	.LVL292:
 2731 00d2 002B     		cmp	r3, #0
 2732 00d4 E1D0     		beq	.L267
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2733              		.loc 1 1678 0
 2734 00d6 002D     		cmp	r5, #0
 2735 00d8 E3D0     		beq	.L268
 2736              	.LVL293:
 2737              	.L253:
 2738              	.LBE186:
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2739              		.loc 1 1693 0
 2740 00da FFF7FEFF 		bl	vPortExitCritical
 2741              	.LVL294:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2742              		.loc 1 1698 0
 2743 00de FFF7FEFF 		bl	vTaskSuspendAll
 2744              	.LVL295:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2745              		.loc 1 1699 0
 2746 00e2 FFF7FEFF 		bl	vPortEnterCritical
 2747              	.LVL296:
 2748 00e6 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2749 00ea 5BB2     		sxtb	r3, r3
 2750 00ec B3F1FF3F 		cmp	r3, #-1
 2751 00f0 DCD0     		beq	.L269
 2752              	.L254:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2753              		.loc 1 1699 0 is_stmt 0 discriminator 3
 2754 00f2 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2755 00f6 5BB2     		sxtb	r3, r3
 2756 00f8 B3F1FF3F 		cmp	r3, #-1
 2757 00fc DAD0     		beq	.L270
 2758              	.L255:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2759              		.loc 1 1699 0 discriminator 6
 2760 00fe FFF7FEFF 		bl	vPortExitCritical
 2761              	.LVL297:
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2762              		.loc 1 1702 0 is_stmt 1 discriminator 6
 2763 0102 01A9     		add	r1, sp, #4
 2764 0104 02A8     		add	r0, sp, #8
 2765 0106 FFF7FEFF 		bl	xTaskCheckForTimeOut
ARM GAS  /tmp/cctuPAeu.s 			page 100


 2766              	.LVL298:
 2767 010a C8B9     		cbnz	r0, .L256
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2768              		.loc 1 1706 0
 2769 010c 2046     		mov	r0, r4
 2770 010e FFF7FEFF 		bl	prvIsQueueEmpty
 2771              	.LVL299:
 2772 0112 0028     		cmp	r0, #0
 2773 0114 D2D0     		beq	.L257
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2774              		.loc 1 1709 0
 2775 0116 0199     		ldr	r1, [sp, #4]
 2776 0118 04F12400 		add	r0, r4, #36
 2777 011c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2778              	.LVL300:
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2779              		.loc 1 1710 0
 2780 0120 2046     		mov	r0, r4
 2781 0122 FFF7FEFF 		bl	prvUnlockQueue
 2782              	.LVL301:
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2783              		.loc 1 1711 0
 2784 0126 FFF7FEFF 		bl	xTaskResumeAll
 2785              	.LVL302:
 2786 012a 0028     		cmp	r0, #0
 2787 012c CBD1     		bne	.L247
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2788              		.loc 1 1713 0
 2789 012e 4FF08052 		mov	r2, #268435456
 2790 0132 094B     		ldr	r3, .L271
 2791 0134 1A60     		str	r2, [r3]
 2792              		.syntax unified
 2793              	@ 1713 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2794 0136 BFF34F8F 		dsb
 2795              	@ 0 "" 2
 2796              	@ 1713 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2797 013a BFF36F8F 		isb
 2798              	@ 0 "" 2
 2799              		.thumb
 2800              		.syntax unified
 2801 013e C2E7     		b	.L247
 2802              	.L256:
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2803              		.loc 1 1732 0
 2804 0140 2046     		mov	r0, r4
 2805 0142 FFF7FEFF 		bl	prvUnlockQueue
 2806              	.LVL303:
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2807              		.loc 1 1733 0
 2808 0146 FFF7FEFF 		bl	xTaskResumeAll
 2809              	.LVL304:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2810              		.loc 1 1735 0
 2811 014a 2046     		mov	r0, r4
 2812 014c FFF7FEFF 		bl	prvIsQueueEmpty
 2813              	.LVL305:
 2814 0150 0028     		cmp	r0, #0
ARM GAS  /tmp/cctuPAeu.s 			page 101


 2815 0152 B8D0     		beq	.L247
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2816              		.loc 1 1738 0
 2817 0154 0020     		movs	r0, #0
 2818 0156 9EE7     		b	.L240
 2819              	.L272:
 2820              		.align	2
 2821              	.L271:
 2822 0158 04ED00E0 		.word	-536810236
 2823              		.cfi_endproc
 2824              	.LFE17:
 2826              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2827              		.align	1
 2828              		.global	xQueueReceiveFromISR
 2829              		.syntax unified
 2830              		.thumb
 2831              		.thumb_func
 2832              		.fpu softvfp
 2834              	xQueueReceiveFromISR:
 2835              	.LFB18:
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2836              		.loc 1 1750 0
 2837              		.cfi_startproc
 2838              		@ args = 0, pretend = 0, frame = 0
 2839              		@ frame_needed = 0, uses_anonymous_args = 0
 2840              	.LVL306:
 2841 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2842              	.LCFI40:
 2843              		.cfi_def_cfa_offset 32
 2844              		.cfi_offset 3, -32
 2845              		.cfi_offset 4, -28
 2846              		.cfi_offset 5, -24
 2847              		.cfi_offset 6, -20
 2848              		.cfi_offset 7, -16
 2849              		.cfi_offset 8, -12
 2850              		.cfi_offset 9, -8
 2851              		.cfi_offset 14, -4
 2852              	.LVL307:
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2853              		.loc 1 1755 0
 2854 0004 60B1     		cbz	r0, .L288
 2855 0006 0446     		mov	r4, r0
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2856              		.loc 1 1756 0
 2857 0008 99B1     		cbz	r1, .L289
 2858 000a 0123     		movs	r3, #1
 2859              	.L276:
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2860              		.loc 1 1756 0 is_stmt 0 discriminator 6
 2861 000c BBB9     		cbnz	r3, .L277
 2862              	.LBB187:
 2863              	.LBB188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2864              		.loc 2 195 0 is_stmt 1
 2865              		.syntax unified
 2866              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2867 000e 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cctuPAeu.s 			page 102


 2868 0012 83F31188 		msr basepri, r3											
 2869 0016 BFF36F8F 		isb														
 2870 001a BFF34F8F 		dsb														
 2871              	
 2872              	@ 0 "" 2
 2873              	.LVL308:
 2874              		.thumb
 2875              		.syntax unified
 2876              	.L278:
 2877 001e FEE7     		b	.L278
 2878              	.L288:
 2879              	.LBE188:
 2880              	.LBE187:
 2881              	.LBB189:
 2882              	.LBB190:
 2883              		.syntax unified
 2884              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2885 0020 4FF05003 			mov r3, #80												
 2886 0024 83F31188 		msr basepri, r3											
 2887 0028 BFF36F8F 		isb														
 2888 002c BFF34F8F 		dsb														
 2889              	
 2890              	@ 0 "" 2
 2891              	.LVL309:
 2892              		.thumb
 2893              		.syntax unified
 2894              	.L275:
 2895 0030 FEE7     		b	.L275
 2896              	.L289:
 2897              	.LBE190:
 2898              	.LBE189:
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2899              		.loc 1 1756 0 discriminator 2
 2900 0032 036C     		ldr	r3, [r0, #64]
 2901 0034 0BB9     		cbnz	r3, .L282
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2902              		.loc 1 1756 0 is_stmt 0
 2903 0036 0123     		movs	r3, #1
 2904 0038 E8E7     		b	.L276
 2905              	.L282:
 2906 003a 0023     		movs	r3, #0
 2907 003c E6E7     		b	.L276
 2908              	.L277:
 2909 003e 1746     		mov	r7, r2
 2910 0040 8946     		mov	r9, r1
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2911              		.loc 1 1772 0 is_stmt 1
 2912 0042 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2913              	.LVL310:
 2914              	.LBB191:
 2915              	.LBB192:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2916              		.loc 2 211 0
 2917              		.syntax unified
 2918              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2919 0046 EFF31186 			mrs r6, basepri											
 2920 004a 4FF05003 		mov r3, #80												
ARM GAS  /tmp/cctuPAeu.s 			page 103


 2921 004e 83F31188 		msr basepri, r3											
 2922 0052 BFF36F8F 		isb														
 2923 0056 BFF34F8F 		dsb														
 2924              	
 2925              	@ 0 "" 2
 2926              		.thumb
 2927              		.syntax unified
 2928              	.LBE192:
 2929              	.LBE191:
 2930              	.LBB193:
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2931              		.loc 1 1776 0
 2932 005a D4F83880 		ldr	r8, [r4, #56]
 2933              	.LVL311:
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2934              		.loc 1 1779 0
 2935 005e B8F1000F 		cmp	r8, #0
 2936 0062 20D0     		beq	.L283
 2937              	.LBB194:
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2938              		.loc 1 1781 0
 2939 0064 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 2940 0068 6DB2     		sxtb	r5, r5
 2941              	.LVL312:
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2942              		.loc 1 1785 0
 2943 006a 4946     		mov	r1, r9
 2944 006c 2046     		mov	r0, r4
 2945 006e FFF7FEFF 		bl	prvCopyDataFromQueue
 2946              	.LVL313:
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2947              		.loc 1 1786 0
 2948 0072 08F1FF33 		add	r3, r8, #-1
 2949 0076 A363     		str	r3, [r4, #56]
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2950              		.loc 1 1792 0
 2951 0078 B5F1FF3F 		cmp	r5, #-1
 2952 007c 0DD1     		bne	.L280
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2953              		.loc 1 1794 0
 2954 007e 2369     		ldr	r3, [r4, #16]
 2955 0080 9BB1     		cbz	r3, .L284
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2956              		.loc 1 1796 0
 2957 0082 04F11000 		add	r0, r4, #16
 2958 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2959              	.LVL314:
 2960 008a 80B1     		cbz	r0, .L285
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2961              		.loc 1 1800 0
 2962 008c 8FB1     		cbz	r7, .L286
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2963              		.loc 1 1802 0
 2964 008e 0120     		movs	r0, #1
 2965 0090 3860     		str	r0, [r7]
 2966              	.LVL315:
 2967              	.L279:
ARM GAS  /tmp/cctuPAeu.s 			page 104


 2968              	.LBE194:
 2969              	.LBE193:
 2970              	.LBB197:
 2971              	.LBB198:
 2972              		.loc 2 229 0
 2973              		.syntax unified
 2974              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2975 0092 86F31188 			msr basepri, r6	
 2976              	@ 0 "" 2
 2977              	.LVL316:
 2978              		.thumb
 2979              		.syntax unified
 2980              	.LBE198:
 2981              	.LBE197:
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2982              		.loc 1 1837 0
 2983 0096 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2984              	.LVL317:
 2985              	.L280:
 2986              	.LBB199:
 2987              	.LBB195:
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2988              		.loc 1 1823 0
 2989 009a 6B1C     		adds	r3, r5, #1
 2990 009c 5BB2     		sxtb	r3, r3
 2991 009e 84F84430 		strb	r3, [r4, #68]
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2992              		.loc 1 1826 0
 2993 00a2 0120     		movs	r0, #1
 2994 00a4 F5E7     		b	.L279
 2995              	.LVL318:
 2996              	.L283:
 2997              	.LBE195:
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2998              		.loc 1 1830 0
 2999 00a6 0020     		movs	r0, #0
 3000 00a8 F3E7     		b	.L279
 3001              	.LVL319:
 3002              	.L284:
 3003              	.LBB196:
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3004              		.loc 1 1826 0
 3005 00aa 0120     		movs	r0, #1
 3006 00ac F1E7     		b	.L279
 3007              	.L285:
 3008 00ae 0120     		movs	r0, #1
 3009 00b0 EFE7     		b	.L279
 3010              	.L286:
 3011 00b2 0120     		movs	r0, #1
 3012 00b4 EDE7     		b	.L279
 3013              	.LBE196:
 3014              	.LBE199:
 3015              		.cfi_endproc
 3016              	.LFE18:
 3018              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3019              		.align	1
 3020              		.global	xQueuePeekFromISR
ARM GAS  /tmp/cctuPAeu.s 			page 105


 3021              		.syntax unified
 3022              		.thumb
 3023              		.thumb_func
 3024              		.fpu softvfp
 3026              	xQueuePeekFromISR:
 3027              	.LFB19:
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3028              		.loc 1 1841 0
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 0
 3031              		@ frame_needed = 0, uses_anonymous_args = 0
 3032              	.LVL320:
 3033 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3034              	.LCFI41:
 3035              		.cfi_def_cfa_offset 24
 3036              		.cfi_offset 3, -24
 3037              		.cfi_offset 4, -20
 3038              		.cfi_offset 5, -16
 3039              		.cfi_offset 6, -12
 3040              		.cfi_offset 7, -8
 3041              		.cfi_offset 14, -4
 3042              	.LVL321:
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3043              		.loc 1 1847 0
 3044 0002 60B1     		cbz	r0, .L303
 3045 0004 0446     		mov	r4, r0
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3046              		.loc 1 1848 0
 3047 0006 99B1     		cbz	r1, .L304
 3048 0008 0123     		movs	r3, #1
 3049              	.L293:
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3050              		.loc 1 1848 0 is_stmt 0 discriminator 6
 3051 000a BBB9     		cbnz	r3, .L294
 3052              	.LBB200:
 3053              	.LBB201:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3054              		.loc 2 195 0 is_stmt 1
 3055              		.syntax unified
 3056              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3057 000c 4FF05003 			mov r3, #80												
 3058 0010 83F31188 		msr basepri, r3											
 3059 0014 BFF36F8F 		isb														
 3060 0018 BFF34F8F 		dsb														
 3061              	
 3062              	@ 0 "" 2
 3063              	.LVL322:
 3064              		.thumb
 3065              		.syntax unified
 3066              	.L295:
 3067 001c FEE7     		b	.L295
 3068              	.L303:
 3069              	.LBE201:
 3070              	.LBE200:
 3071              	.LBB202:
 3072              	.LBB203:
 3073              		.syntax unified
ARM GAS  /tmp/cctuPAeu.s 			page 106


 3074              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3075 001e 4FF05003 			mov r3, #80												
 3076 0022 83F31188 		msr basepri, r3											
 3077 0026 BFF36F8F 		isb														
 3078 002a BFF34F8F 		dsb														
 3079              	
 3080              	@ 0 "" 2
 3081              	.LVL323:
 3082              		.thumb
 3083              		.syntax unified
 3084              	.L292:
 3085 002e FEE7     		b	.L292
 3086              	.L304:
 3087              	.LBE203:
 3088              	.LBE202:
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3089              		.loc 1 1848 0 discriminator 2
 3090 0030 036C     		ldr	r3, [r0, #64]
 3091 0032 0BB9     		cbnz	r3, .L300
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3092              		.loc 1 1848 0 is_stmt 0
 3093 0034 0123     		movs	r3, #1
 3094 0036 E8E7     		b	.L293
 3095              	.L300:
 3096 0038 0023     		movs	r3, #0
 3097 003a E6E7     		b	.L293
 3098              	.L294:
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3099              		.loc 1 1849 0 is_stmt 1
 3100 003c 236C     		ldr	r3, [r4, #64]
 3101 003e 43B9     		cbnz	r3, .L296
 3102              	.LBB204:
 3103              	.LBB205:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3104              		.loc 2 195 0
 3105              		.syntax unified
 3106              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3107 0040 4FF05003 			mov r3, #80												
 3108 0044 83F31188 		msr basepri, r3											
 3109 0048 BFF36F8F 		isb														
 3110 004c BFF34F8F 		dsb														
 3111              	
 3112              	@ 0 "" 2
 3113              	.LVL324:
 3114              		.thumb
 3115              		.syntax unified
 3116              	.L297:
 3117 0050 FEE7     		b	.L297
 3118              	.L296:
 3119 0052 0D46     		mov	r5, r1
 3120              	.LBE205:
 3121              	.LBE204:
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3122              		.loc 1 1865 0
 3123 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3124              	.LVL325:
 3125              	.LBB206:
ARM GAS  /tmp/cctuPAeu.s 			page 107


 3126              	.LBB207:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3127              		.loc 2 211 0
 3128              		.syntax unified
 3129              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3130 0058 EFF31186 			mrs r6, basepri											
 3131 005c 4FF05003 		mov r3, #80												
 3132 0060 83F31188 		msr basepri, r3											
 3133 0064 BFF36F8F 		isb														
 3134 0068 BFF34F8F 		dsb														
 3135              	
 3136              	@ 0 "" 2
 3137              		.thumb
 3138              		.syntax unified
 3139              	.LBE207:
 3140              	.LBE206:
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3141              		.loc 1 1870 0
 3142 006c A36B     		ldr	r3, [r4, #56]
 3143 006e 4BB1     		cbz	r3, .L301
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3144              		.loc 1 1876 0
 3145 0070 E768     		ldr	r7, [r4, #12]
 3146              	.LVL326:
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 3147              		.loc 1 1877 0
 3148 0072 2946     		mov	r1, r5
 3149 0074 2046     		mov	r0, r4
 3150 0076 FFF7FEFF 		bl	prvCopyDataFromQueue
 3151              	.LVL327:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3152              		.loc 1 1878 0
 3153 007a E760     		str	r7, [r4, #12]
 3154              	.LVL328:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3155              		.loc 1 1880 0
 3156 007c 0120     		movs	r0, #1
 3157              	.LVL329:
 3158              	.L298:
 3159              	.LBB208:
 3160              	.LBB209:
 3161              		.loc 2 229 0
 3162              		.syntax unified
 3163              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3164 007e 86F31188 			msr basepri, r6	
 3165              	@ 0 "" 2
 3166              	.LVL330:
 3167              		.thumb
 3168              		.syntax unified
 3169              	.LBE209:
 3170              	.LBE208:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3171              		.loc 1 1891 0
 3172 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3173              	.LVL331:
 3174              	.L301:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
ARM GAS  /tmp/cctuPAeu.s 			page 108


 3175              		.loc 1 1884 0
 3176 0084 0020     		movs	r0, #0
 3177 0086 FAE7     		b	.L298
 3178              		.cfi_endproc
 3179              	.LFE19:
 3181              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3182              		.align	1
 3183              		.global	uxQueueMessagesWaiting
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
 3187              		.fpu softvfp
 3189              	uxQueueMessagesWaiting:
 3190              	.LFB20:
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3191              		.loc 1 1895 0
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 0
 3194              		@ frame_needed = 0, uses_anonymous_args = 0
 3195              	.LVL332:
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3196              		.loc 1 1898 0
 3197 0000 40B9     		cbnz	r0, .L306
 3198              	.LBB210:
 3199              	.LBB211:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3200              		.loc 2 195 0
 3201              		.syntax unified
 3202              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3203 0002 4FF05003 			mov r3, #80												
 3204 0006 83F31188 		msr basepri, r3											
 3205 000a BFF36F8F 		isb														
 3206 000e BFF34F8F 		dsb														
 3207              	
 3208              	@ 0 "" 2
 3209              	.LVL333:
 3210              		.thumb
 3211              		.syntax unified
 3212              	.L307:
 3213 0012 FEE7     		b	.L307
 3214              	.L306:
 3215              	.LBE211:
 3216              	.LBE210:
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3217              		.loc 1 1895 0
 3218 0014 10B5     		push	{r4, lr}
 3219              	.LCFI42:
 3220              		.cfi_def_cfa_offset 8
 3221              		.cfi_offset 4, -8
 3222              		.cfi_offset 14, -4
 3223 0016 0446     		mov	r4, r0
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3224              		.loc 1 1900 0
 3225 0018 FFF7FEFF 		bl	vPortEnterCritical
 3226              	.LVL334:
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3227              		.loc 1 1902 0
ARM GAS  /tmp/cctuPAeu.s 			page 109


 3228 001c A46B     		ldr	r4, [r4, #56]
 3229              	.LVL335:
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3230              		.loc 1 1904 0
 3231 001e FFF7FEFF 		bl	vPortExitCritical
 3232              	.LVL336:
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3233              		.loc 1 1907 0
 3234 0022 2046     		mov	r0, r4
 3235 0024 10BD     		pop	{r4, pc}
 3236              		.cfi_endproc
 3237              	.LFE20:
 3239              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3240              		.align	1
 3241              		.global	uxQueueSpacesAvailable
 3242              		.syntax unified
 3243              		.thumb
 3244              		.thumb_func
 3245              		.fpu softvfp
 3247              	uxQueueSpacesAvailable:
 3248              	.LFB21:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3249              		.loc 1 1911 0
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 0
 3252              		@ frame_needed = 0, uses_anonymous_args = 0
 3253              	.LVL337:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3254              		.loc 1 1916 0
 3255 0000 40B9     		cbnz	r0, .L311
 3256              	.LBB212:
 3257              	.LBB213:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3258              		.loc 2 195 0
 3259              		.syntax unified
 3260              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3261 0002 4FF05003 			mov r3, #80												
 3262 0006 83F31188 		msr basepri, r3											
 3263 000a BFF36F8F 		isb														
 3264 000e BFF34F8F 		dsb														
 3265              	
 3266              	@ 0 "" 2
 3267              	.LVL338:
 3268              		.thumb
 3269              		.syntax unified
 3270              	.L312:
 3271 0012 FEE7     		b	.L312
 3272              	.L311:
 3273              	.LBE213:
 3274              	.LBE212:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3275              		.loc 1 1911 0
 3276 0014 10B5     		push	{r4, lr}
 3277              	.LCFI43:
 3278              		.cfi_def_cfa_offset 8
 3279              		.cfi_offset 4, -8
 3280              		.cfi_offset 14, -4
ARM GAS  /tmp/cctuPAeu.s 			page 110


 3281 0016 0446     		mov	r4, r0
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3282              		.loc 1 1918 0
 3283 0018 FFF7FEFF 		bl	vPortEnterCritical
 3284              	.LVL339:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3285              		.loc 1 1920 0
 3286 001c E36B     		ldr	r3, [r4, #60]
 3287 001e A46B     		ldr	r4, [r4, #56]
 3288              	.LVL340:
 3289 0020 1C1B     		subs	r4, r3, r4
 3290              	.LVL341:
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3291              		.loc 1 1922 0
 3292 0022 FFF7FEFF 		bl	vPortExitCritical
 3293              	.LVL342:
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3294              		.loc 1 1925 0
 3295 0026 2046     		mov	r0, r4
 3296 0028 10BD     		pop	{r4, pc}
 3297              		.cfi_endproc
 3298              	.LFE21:
 3300              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3301              		.align	1
 3302              		.global	uxQueueMessagesWaitingFromISR
 3303              		.syntax unified
 3304              		.thumb
 3305              		.thumb_func
 3306              		.fpu softvfp
 3308              	uxQueueMessagesWaitingFromISR:
 3309              	.LFB22:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3310              		.loc 1 1929 0
 3311              		.cfi_startproc
 3312              		@ args = 0, pretend = 0, frame = 0
 3313              		@ frame_needed = 0, uses_anonymous_args = 0
 3314              		@ link register save eliminated.
 3315              	.LVL343:
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3316              		.loc 1 1932 0
 3317 0000 08B1     		cbz	r0, .L318
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3318              		.loc 1 1934 0
 3319 0002 806B     		ldr	r0, [r0, #56]
 3320              	.LVL344:
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3321              		.loc 1 1937 0
 3322 0004 7047     		bx	lr
 3323              	.LVL345:
 3324              	.L318:
 3325              	.LBB214:
 3326              	.LBB215:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3327              		.loc 2 195 0
 3328              		.syntax unified
 3329              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3330 0006 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cctuPAeu.s 			page 111


 3331 000a 83F31188 		msr basepri, r3											
 3332 000e BFF36F8F 		isb														
 3333 0012 BFF34F8F 		dsb														
 3334              	
 3335              	@ 0 "" 2
 3336              	.LVL346:
 3337              		.thumb
 3338              		.syntax unified
 3339              	.L317:
 3340 0016 FEE7     		b	.L317
 3341              	.LBE215:
 3342              	.LBE214:
 3343              		.cfi_endproc
 3344              	.LFE22:
 3346              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3347              		.align	1
 3348              		.global	xQueueIsQueueEmptyFromISR
 3349              		.syntax unified
 3350              		.thumb
 3351              		.thumb_func
 3352              		.fpu softvfp
 3354              	xQueueIsQueueEmptyFromISR:
 3355              	.LFB29:
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3356              		.loc 1 2278 0
 3357              		.cfi_startproc
 3358              		@ args = 0, pretend = 0, frame = 0
 3359              		@ frame_needed = 0, uses_anonymous_args = 0
 3360              		@ link register save eliminated.
 3361              	.LVL347:
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3362              		.loc 1 2281 0
 3363 0000 18B1     		cbz	r0, .L324
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3364              		.loc 1 2282 0
 3365 0002 836B     		ldr	r3, [r0, #56]
 3366 0004 53B1     		cbz	r3, .L325
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3367              		.loc 1 2288 0
 3368 0006 0020     		movs	r0, #0
 3369              	.LVL348:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3370              		.loc 1 2292 0
 3371 0008 7047     		bx	lr
 3372              	.LVL349:
 3373              	.L324:
 3374              	.LBB216:
 3375              	.LBB217:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3376              		.loc 2 195 0
 3377              		.syntax unified
 3378              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3379 000a 4FF05003 			mov r3, #80												
 3380 000e 83F31188 		msr basepri, r3											
 3381 0012 BFF36F8F 		isb														
 3382 0016 BFF34F8F 		dsb														
 3383              	
ARM GAS  /tmp/cctuPAeu.s 			page 112


 3384              	@ 0 "" 2
 3385              	.LVL350:
 3386              		.thumb
 3387              		.syntax unified
 3388              	.L321:
 3389 001a FEE7     		b	.L321
 3390              	.L325:
 3391              	.LBE217:
 3392              	.LBE216:
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3393              		.loc 1 2284 0
 3394 001c 0120     		movs	r0, #1
 3395              	.LVL351:
 3396 001e 7047     		bx	lr
 3397              		.cfi_endproc
 3398              	.LFE29:
 3400              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3401              		.align	1
 3402              		.global	xQueueIsQueueFullFromISR
 3403              		.syntax unified
 3404              		.thumb
 3405              		.thumb_func
 3406              		.fpu softvfp
 3408              	xQueueIsQueueFullFromISR:
 3409              	.LFB31:
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3410              		.loc 1 2317 0
 3411              		.cfi_startproc
 3412              		@ args = 0, pretend = 0, frame = 0
 3413              		@ frame_needed = 0, uses_anonymous_args = 0
 3414              		@ link register save eliminated.
 3415              	.LVL352:
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 3416              		.loc 1 2320 0
 3417 0000 28B1     		cbz	r0, .L331
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 3418              		.loc 1 2321 0
 3419 0002 826B     		ldr	r2, [r0, #56]
 3420 0004 C36B     		ldr	r3, [r0, #60]
 3421 0006 9A42     		cmp	r2, r3
 3422 0008 0AD0     		beq	.L332
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3423              		.loc 1 2327 0
 3424 000a 0020     		movs	r0, #0
 3425              	.LVL353:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/cctuPAeu.s 			page 113


2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3426              		.loc 1 2331 0
 3427 000c 7047     		bx	lr
 3428              	.LVL354:
 3429              	.L331:
 3430              	.LBB218:
 3431              	.LBB219:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3432              		.loc 2 195 0
 3433              		.syntax unified
 3434              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3435 000e 4FF05003 			mov r3, #80												
 3436 0012 83F31188 		msr basepri, r3											
 3437 0016 BFF36F8F 		isb														
 3438 001a BFF34F8F 		dsb														
 3439              	
 3440              	@ 0 "" 2
 3441              	.LVL355:
 3442              		.thumb
 3443              		.syntax unified
 3444              	.L328:
 3445 001e FEE7     		b	.L328
 3446              	.L332:
 3447              	.LBE219:
 3448              	.LBE218:
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3449              		.loc 1 2323 0
 3450 0020 0120     		movs	r0, #1
 3451              	.LVL356:
 3452 0022 7047     		bx	lr
 3453              		.cfi_endproc
 3454              	.LFE31:
 3456              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3457              		.align	1
 3458              		.global	vQueueAddToRegistry
 3459              		.syntax unified
 3460              		.thumb
 3461              		.thumb_func
 3462              		.fpu softvfp
 3464              	vQueueAddToRegistry:
 3465              	.LFB32:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
ARM GAS  /tmp/cctuPAeu.s 			page 114


2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
ARM GAS  /tmp/cctuPAeu.s 			page 115


2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cctuPAeu.s 			page 116


2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  /tmp/cctuPAeu.s 			page 117


2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/cctuPAeu.s 			page 118


2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3466              		.loc 1 2612 0
 3467              		.cfi_startproc
 3468              		@ args = 0, pretend = 0, frame = 0
 3469              		@ frame_needed = 0, uses_anonymous_args = 0
 3470              		@ link register save eliminated.
 3471              	.LVL357:
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3472              		.loc 1 2617 0
 3473 0000 0023     		movs	r3, #0
 3474              	.LVL358:
 3475              	.L334:
 3476              		.loc 1 2617 0 is_stmt 0 discriminator 1
 3477 0002 072B     		cmp	r3, #7
 3478 0004 0CD8     		bhi	.L338
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  /tmp/cctuPAeu.s 			page 119


2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3479              		.loc 1 2619 0 is_stmt 1
 3480 0006 074A     		ldr	r2, .L340
 3481 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 3482 000c 0AB1     		cbz	r2, .L339
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3483              		.loc 1 2617 0 discriminator 2
 3484 000e 0133     		adds	r3, r3, #1
 3485              	.LVL359:
 3486 0010 F7E7     		b	.L334
 3487              	.L339:
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3488              		.loc 1 2622 0
 3489 0012 044A     		ldr	r2, .L340
 3490 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3491              		.loc 1 2623 0
 3492 0018 02EBC303 		add	r3, r2, r3, lsl #3
 3493              	.LVL360:
 3494 001c 5860     		str	r0, [r3, #4]
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3495              		.loc 1 2626 0
 3496 001e 7047     		bx	lr
 3497              	.LVL361:
 3498              	.L338:
 3499 0020 7047     		bx	lr
 3500              	.L341:
 3501 0022 00BF     		.align	2
 3502              	.L340:
 3503 0024 00000000 		.word	xQueueRegistry
 3504              		.cfi_endproc
 3505              	.LFE32:
 3507              		.section	.text.pcQueueGetName,"ax",%progbits
 3508              		.align	1
 3509              		.global	pcQueueGetName
 3510              		.syntax unified
 3511              		.thumb
 3512              		.thumb_func
 3513              		.fpu softvfp
 3515              	pcQueueGetName:
 3516              	.LFB33:
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
ARM GAS  /tmp/cctuPAeu.s 			page 120


2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3517              		.loc 1 2641 0
 3518              		.cfi_startproc
 3519              		@ args = 0, pretend = 0, frame = 0
 3520              		@ frame_needed = 0, uses_anonymous_args = 0
 3521              		@ link register save eliminated.
 3522              	.LVL362:
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3523              		.loc 1 2647 0
 3524 0000 0023     		movs	r3, #0
 3525              	.LVL363:
 3526              	.L343:
 3527              		.loc 1 2647 0 is_stmt 0 discriminator 1
 3528 0002 072B     		cmp	r3, #7
 3529 0004 0BD8     		bhi	.L347
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3530              		.loc 1 2649 0 is_stmt 1
 3531 0006 074A     		ldr	r2, .L349
 3532 0008 02EBC302 		add	r2, r2, r3, lsl #3
 3533 000c 5268     		ldr	r2, [r2, #4]
 3534 000e 8242     		cmp	r2, r0
 3535 0010 01D0     		beq	.L348
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3536              		.loc 1 2647 0 discriminator 2
 3537 0012 0133     		adds	r3, r3, #1
 3538              	.LVL364:
 3539 0014 F5E7     		b	.L343
 3540              	.L348:
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3541              		.loc 1 2651 0
 3542 0016 034A     		ldr	r2, .L349
 3543 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 3544              	.LVL365:
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3545              		.loc 1 2652 0
 3546 001c 7047     		bx	lr
 3547              	.LVL366:
 3548              	.L347:
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3549              		.loc 1 2643 0
 3550 001e 0020     		movs	r0, #0
 3551              	.LVL367:
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/cctuPAeu.s 			page 121


2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 3552              		.loc 1 2661 0
 3553 0020 7047     		bx	lr
 3554              	.L350:
 3555 0022 00BF     		.align	2
 3556              	.L349:
 3557 0024 00000000 		.word	xQueueRegistry
 3558              		.cfi_endproc
 3559              	.LFE33:
 3561              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3562              		.align	1
 3563              		.global	vQueueUnregisterQueue
 3564              		.syntax unified
 3565              		.thumb
 3566              		.thumb_func
 3567              		.fpu softvfp
 3569              	vQueueUnregisterQueue:
 3570              	.LFB34:
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3571              		.loc 1 2669 0
 3572              		.cfi_startproc
 3573              		@ args = 0, pretend = 0, frame = 0
 3574              		@ frame_needed = 0, uses_anonymous_args = 0
 3575              		@ link register save eliminated.
 3576              	.LVL368:
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3577              		.loc 1 2674 0
 3578 0000 0023     		movs	r3, #0
 3579              	.LVL369:
 3580              	.L352:
 3581              		.loc 1 2674 0 is_stmt 0 discriminator 1
 3582 0002 072B     		cmp	r3, #7
 3583 0004 0FD8     		bhi	.L356
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3584              		.loc 1 2676 0 is_stmt 1
 3585 0006 084A     		ldr	r2, .L358
 3586 0008 02EBC302 		add	r2, r2, r3, lsl #3
 3587 000c 5268     		ldr	r2, [r2, #4]
 3588 000e 8242     		cmp	r2, r0
 3589 0010 01D0     		beq	.L357
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3590              		.loc 1 2674 0 discriminator 2
 3591 0012 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cctuPAeu.s 			page 122


 3592              	.LVL370:
 3593 0014 F5E7     		b	.L352
 3594              	.L357:
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 3595              		.loc 1 2679 0
 3596 0016 044A     		ldr	r2, .L358
 3597 0018 0021     		movs	r1, #0
 3598 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3599              		.loc 1 2684 0
 3600 001e 02EBC303 		add	r3, r2, r3, lsl #3
 3601              	.LVL371:
 3602 0022 5960     		str	r1, [r3, #4]
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3603              		.loc 1 2685 0
 3604 0024 7047     		bx	lr
 3605              	.LVL372:
 3606              	.L356:
 3607 0026 7047     		bx	lr
 3608              	.L359:
 3609              		.align	2
 3610              	.L358:
 3611 0028 00000000 		.word	xQueueRegistry
 3612              		.cfi_endproc
 3613              	.LFE34:
 3615              		.section	.text.vQueueDelete,"ax",%progbits
 3616              		.align	1
 3617              		.global	vQueueDelete
 3618              		.syntax unified
 3619              		.thumb
 3620              		.thumb_func
 3621              		.fpu softvfp
 3623              	vQueueDelete:
 3624              	.LFB23:
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 3625              		.loc 1 1941 0
 3626              		.cfi_startproc
 3627              		@ args = 0, pretend = 0, frame = 0
 3628              		@ frame_needed = 0, uses_anonymous_args = 0
 3629              	.LVL373:
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 3630              		.loc 1 1944 0
 3631 0000 50B1     		cbz	r0, .L366
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 3632              		.loc 1 1941 0
 3633 0002 10B5     		push	{r4, lr}
 3634              	.LCFI44:
 3635              		.cfi_def_cfa_offset 8
 3636              		.cfi_offset 4, -8
 3637              		.cfi_offset 14, -4
 3638 0004 0446     		mov	r4, r0
ARM GAS  /tmp/cctuPAeu.s 			page 123


1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3639              		.loc 1 1949 0
 3640 0006 FFF7FEFF 		bl	vQueueUnregisterQueue
 3641              	.LVL374:
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3642              		.loc 1 1963 0
 3643 000a 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 3644 000e 13B9     		cbnz	r3, .L360
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3645              		.loc 1 1965 0
 3646 0010 2046     		mov	r0, r4
 3647 0012 FFF7FEFF 		bl	vPortFree
 3648              	.LVL375:
 3649              	.L360:
 3650 0016 10BD     		pop	{r4, pc}
 3651              	.LVL376:
 3652              	.L366:
 3653              	.LCFI45:
 3654              		.cfi_def_cfa_offset 0
 3655              		.cfi_restore 4
 3656              		.cfi_restore 14
 3657              	.LBB220:
 3658              	.LBB221:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3659              		.loc 2 195 0
 3660              		.syntax unified
 3661              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3662 0018 4FF05003 			mov r3, #80												
 3663 001c 83F31188 		msr basepri, r3											
 3664 0020 BFF36F8F 		isb														
 3665 0024 BFF34F8F 		dsb														
 3666              	
 3667              	@ 0 "" 2
 3668              	.LVL377:
 3669              		.thumb
 3670              		.syntax unified
 3671              	.L362:
 3672 0028 FEE7     		b	.L362
 3673              	.LBE221:
 3674              	.LBE220:
 3675              		.cfi_endproc
 3676              	.LFE23:
 3678              		.comm	xQueueRegistry,64,4
 3679              		.text
 3680              	.Letext0:
 3681              		.file 3 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3682              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 3683              		.file 5 "/usr/include/newlib/sys/lock.h"
 3684              		.file 6 "/usr/include/newlib/sys/_types.h"
 3685              		.file 7 "/usr/include/newlib/sys/reent.h"
 3686              		.file 8 "/usr/include/newlib/stdlib.h"
 3687              		.file 9 "/usr/include/newlib/sys/_stdint.h"
 3688              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 3689              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 3690              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 3691              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3692              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
ARM GAS  /tmp/cctuPAeu.s 			page 124


 3693              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cctuPAeu.s 			page 125


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/cctuPAeu.s:16     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/cctuPAeu.s:22     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/cctuPAeu.s:52     .text.prvIsQueueFull:0000000000000000 $t
     /tmp/cctuPAeu.s:58     .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/cctuPAeu.s:99     .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/cctuPAeu.s:105    .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/cctuPAeu.s:144    .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/cctuPAeu.s:150    .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/cctuPAeu.s:269    .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/cctuPAeu.s:275    .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/cctuPAeu.s:323    .text.prvUnlockQueue:0000000000000000 $t
     /tmp/cctuPAeu.s:329    .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/cctuPAeu.s:432    .text.xQueueGenericReset:0000000000000000 $t
     /tmp/cctuPAeu.s:439    .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/cctuPAeu.s:547    .text.xQueueGenericReset:000000000000007c $d
     /tmp/cctuPAeu.s:552    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/cctuPAeu.s:558    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/cctuPAeu.s:599    .text.xQueueGenericCreateStatic:0000000000000000 $t
     /tmp/cctuPAeu.s:606    .text.xQueueGenericCreateStatic:0000000000000000 xQueueGenericCreateStatic
     /tmp/cctuPAeu.s:787    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/cctuPAeu.s:794    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/cctuPAeu.s:884    .text.xQueueGenericSend:0000000000000000 $t
     /tmp/cctuPAeu.s:891    .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/cctuPAeu.s:1230   .text.xQueueGenericSend:0000000000000184 $d
     /tmp/cctuPAeu.s:1235   .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/cctuPAeu.s:1241   .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/cctuPAeu.s:1280   .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/cctuPAeu.s:1287   .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/cctuPAeu.s:1319   .text.xQueueCreateMutexStatic:0000000000000000 $t
     /tmp/cctuPAeu.s:1326   .text.xQueueCreateMutexStatic:0000000000000000 xQueueCreateMutexStatic
     /tmp/cctuPAeu.s:1368   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/cctuPAeu.s:1375   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/cctuPAeu.s:1597   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/cctuPAeu.s:1604   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/cctuPAeu.s:1820   .text.xQueueReceive:0000000000000000 $t
     /tmp/cctuPAeu.s:1827   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/cctuPAeu.s:2129   .text.xQueueReceive:0000000000000158 $d
     /tmp/cctuPAeu.s:2134   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/cctuPAeu.s:2141   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/cctuPAeu.s:2507   .text.xQueueSemaphoreTake:00000000000001a0 $d
     /tmp/cctuPAeu.s:2512   .text.xQueuePeek:0000000000000000 $t
     /tmp/cctuPAeu.s:2519   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/cctuPAeu.s:2822   .text.xQueuePeek:0000000000000158 $d
     /tmp/cctuPAeu.s:2827   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/cctuPAeu.s:2834   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/cctuPAeu.s:3019   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/cctuPAeu.s:3026   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/cctuPAeu.s:3182   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/cctuPAeu.s:3189   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/cctuPAeu.s:3240   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/cctuPAeu.s:3247   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/cctuPAeu.s:3301   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/cctuPAeu.s:3308   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/cctuPAeu.s:3347   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/cctuPAeu.s:3354   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
ARM GAS  /tmp/cctuPAeu.s 			page 126


     /tmp/cctuPAeu.s:3401   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/cctuPAeu.s:3408   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/cctuPAeu.s:3457   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/cctuPAeu.s:3464   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/cctuPAeu.s:3503   .text.vQueueAddToRegistry:0000000000000024 $d
                            *COM*:0000000000000040 xQueueRegistry
     /tmp/cctuPAeu.s:3508   .text.pcQueueGetName:0000000000000000 $t
     /tmp/cctuPAeu.s:3515   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/cctuPAeu.s:3557   .text.pcQueueGetName:0000000000000024 $d
     /tmp/cctuPAeu.s:3562   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/cctuPAeu.s:3569   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/cctuPAeu.s:3611   .text.vQueueUnregisterQueue:0000000000000028 $d
     /tmp/cctuPAeu.s:3616   .text.vQueueDelete:0000000000000000 $t
     /tmp/cctuPAeu.s:3623   .text.vQueueDelete:0000000000000000 vQueueDelete
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
xTaskResumeAll
vTaskInternalSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
