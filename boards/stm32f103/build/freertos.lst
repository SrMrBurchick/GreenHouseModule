ARM GAS  /tmp/ccptvQHL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"freertos.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.heartBeatTask,"ax",%progbits
  16              		.align	1
  17              		.global	heartBeatTask
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	heartBeatTask:
  24              	.LFB72:
  25              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/freertos.c ****   *                             www.st.com/SLA0044
  16:Core/Src/freertos.c ****   *
  17:Core/Src/freertos.c ****   ******************************************************************************
  18:Core/Src/freertos.c ****   */
  19:Core/Src/freertos.c **** /* USER CODE END Header */
  20:Core/Src/freertos.c **** 
  21:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/freertos.c **** #include "FreeRTOS.h"
  23:Core/Src/freertos.c **** #include "task.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** #include "cmsis_os.h"
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** 
  30:Core/Src/freertos.c **** /* USER CODE END Includes */
  31:Core/Src/freertos.c **** 
  32:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccptvQHL.s 			page 2


  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* USER CODE END PTD */
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* USER CODE END PD */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* USER CODE END PM */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END Variables */
  51:Core/Src/freertos.c **** osThreadId heartBeatHandle;
  52:Core/Src/freertos.c **** uint32_t heartBeatBuffer[ 128 ];
  53:Core/Src/freertos.c **** osStaticThreadDef_t heartBeatControlBlock;
  54:Core/Src/freertos.c **** osThreadId consoleHandle;
  55:Core/Src/freertos.c **** uint32_t consoleBuffer[ 128 ];
  56:Core/Src/freertos.c **** osStaticThreadDef_t consoleControlBlock;
  57:Core/Src/freertos.c **** osThreadId sensorMonitorHandle;
  58:Core/Src/freertos.c **** uint32_t sensorMonitorBuffer[ 128 ];
  59:Core/Src/freertos.c **** osStaticThreadDef_t sensorMonitorControlBlock;
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  63:Core/Src/freertos.c **** 
  64:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** void heartBeatTask(void const * argument);
  67:Core/Src/freertos.c **** void consoleTask(void const * argument);
  68:Core/Src/freertos.c **** void sensorMonitorTask(void const * argument);
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  71:Core/Src/freertos.c **** 
  72:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  73:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  76:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  77:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  78:Core/Src/freertos.c **** 
  79:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  80:Core/Src/freertos.c **** {
  81:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  82:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  83:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  84:Core/Src/freertos.c ****   /* place for user code */
  85:Core/Src/freertos.c **** }
  86:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c **** /**
  89:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  90:Core/Src/freertos.c ****   * @param  None
ARM GAS  /tmp/ccptvQHL.s 			page 3


  91:Core/Src/freertos.c ****   * @retval None
  92:Core/Src/freertos.c ****   */
  93:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  94:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  95:Core/Src/freertos.c **** 
  96:Core/Src/freertos.c ****   /* USER CODE END Init */
  97:Core/Src/freertos.c **** 
  98:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  99:Core/Src/freertos.c ****   /* add mutexes, ... */
 100:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 103:Core/Src/freertos.c ****   /* add semaphores, ... */
 104:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 105:Core/Src/freertos.c **** 
 106:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 107:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 108:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 111:Core/Src/freertos.c ****   /* add queues, ... */
 112:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 113:Core/Src/freertos.c **** 
 114:Core/Src/freertos.c ****   /* Create the thread(s) */
 115:Core/Src/freertos.c ****   /* definition and creation of heartBeat */
 116:Core/Src/freertos.c ****   osThreadStaticDef(heartBeat, heartBeatTask, osPriorityNormal, 0, 128, heartBeatBuffer, &heartBeat
 117:Core/Src/freertos.c ****   heartBeatHandle = osThreadCreate(osThread(heartBeat), NULL);
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c ****   /* definition and creation of console */
 120:Core/Src/freertos.c ****   osThreadStaticDef(console, consoleTask, osPriorityIdle, 0, 128, consoleBuffer, &consoleControlBlo
 121:Core/Src/freertos.c ****   consoleHandle = osThreadCreate(osThread(console), NULL);
 122:Core/Src/freertos.c **** 
 123:Core/Src/freertos.c ****   /* definition and creation of sensorMonitor */
 124:Core/Src/freertos.c ****   osThreadStaticDef(sensorMonitor, sensorMonitorTask, osPriorityIdle, 0, 128, sensorMonitorBuffer, 
 125:Core/Src/freertos.c ****   sensorMonitorHandle = osThreadCreate(osThread(sensorMonitor), NULL);
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 128:Core/Src/freertos.c ****   /* add threads, ... */
 129:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 130:Core/Src/freertos.c **** 
 131:Core/Src/freertos.c **** }
 132:Core/Src/freertos.c **** 
 133:Core/Src/freertos.c **** /* USER CODE BEGIN Header_heartBeatTask */
 134:Core/Src/freertos.c **** /**
 135:Core/Src/freertos.c ****   * @brief  Function implementing the heartBeat thread.
 136:Core/Src/freertos.c ****   * @param  argument: Not used
 137:Core/Src/freertos.c ****   * @retval None
 138:Core/Src/freertos.c ****   */
 139:Core/Src/freertos.c **** /* USER CODE END Header_heartBeatTask */
 140:Core/Src/freertos.c **** void heartBeatTask(void const * argument)
 141:Core/Src/freertos.c **** {
  26              		.loc 1 141 0
  27              		.cfi_startproc
  28              		@ Volatile: function does not return.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
ARM GAS  /tmp/ccptvQHL.s 			page 4


  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
  38              	.L2:
 142:Core/Src/freertos.c ****   /* USER CODE BEGIN heartBeatTask */
 143:Core/Src/freertos.c ****   /* Infinite loop */
 144:Core/Src/freertos.c ****   for(;;)
 145:Core/Src/freertos.c ****   {
 146:Core/Src/freertos.c ****     osDelay(1);
  39              		.loc 1 146 0 discriminator 1
  40 0002 0120     		movs	r0, #1
  41 0004 FFF7FEFF 		bl	osDelay
  42              	.LVL2:
  43 0008 FBE7     		b	.L2
  44              		.cfi_endproc
  45              	.LFE72:
  47              		.section	.text.consoleTask,"ax",%progbits
  48              		.align	1
  49              		.global	consoleTask
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu softvfp
  55              	consoleTask:
  56              	.LFB73:
 147:Core/Src/freertos.c ****   }
 148:Core/Src/freertos.c ****   /* USER CODE END heartBeatTask */
 149:Core/Src/freertos.c **** }
 150:Core/Src/freertos.c **** 
 151:Core/Src/freertos.c **** /* USER CODE BEGIN Header_consoleTask */
 152:Core/Src/freertos.c **** /**
 153:Core/Src/freertos.c **** * @brief Function implementing the console thread.
 154:Core/Src/freertos.c **** * @param argument: Not used
 155:Core/Src/freertos.c **** * @retval None
 156:Core/Src/freertos.c **** */
 157:Core/Src/freertos.c **** /* USER CODE END Header_consoleTask */
 158:Core/Src/freertos.c **** void consoleTask(void const * argument)
 159:Core/Src/freertos.c **** {
  57              		.loc 1 159 0
  58              		.cfi_startproc
  59              		@ Volatile: function does not return.
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL3:
  63 0000 08B5     		push	{r3, lr}
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
  68              	.LVL4:
  69              	.L5:
 160:Core/Src/freertos.c ****   /* USER CODE BEGIN consoleTask */
 161:Core/Src/freertos.c ****   /* Infinite loop */
 162:Core/Src/freertos.c ****   for(;;)
ARM GAS  /tmp/ccptvQHL.s 			page 5


 163:Core/Src/freertos.c ****   {
 164:Core/Src/freertos.c ****     osDelay(1);
  70              		.loc 1 164 0 discriminator 1
  71 0002 0120     		movs	r0, #1
  72 0004 FFF7FEFF 		bl	osDelay
  73              	.LVL5:
  74 0008 FBE7     		b	.L5
  75              		.cfi_endproc
  76              	.LFE73:
  78              		.section	.text.sensorMonitorTask,"ax",%progbits
  79              		.align	1
  80              		.global	sensorMonitorTask
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu softvfp
  86              	sensorMonitorTask:
  87              	.LFB74:
 165:Core/Src/freertos.c ****   }
 166:Core/Src/freertos.c ****   /* USER CODE END consoleTask */
 167:Core/Src/freertos.c **** }
 168:Core/Src/freertos.c **** 
 169:Core/Src/freertos.c **** /* USER CODE BEGIN Header_sensorMonitorTask */
 170:Core/Src/freertos.c **** /**
 171:Core/Src/freertos.c **** * @brief Function implementing the sensorMonitor thread.
 172:Core/Src/freertos.c **** * @param argument: Not used
 173:Core/Src/freertos.c **** * @retval None
 174:Core/Src/freertos.c **** */
 175:Core/Src/freertos.c **** /* USER CODE END Header_sensorMonitorTask */
 176:Core/Src/freertos.c **** void sensorMonitorTask(void const * argument)
 177:Core/Src/freertos.c **** {
  88              		.loc 1 177 0
  89              		.cfi_startproc
  90              		@ Volatile: function does not return.
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL6:
  94 0000 08B5     		push	{r3, lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 3, -8
  98              		.cfi_offset 14, -4
  99              	.LVL7:
 100              	.L8:
 178:Core/Src/freertos.c ****   /* USER CODE BEGIN sensorMonitorTask */
 179:Core/Src/freertos.c ****   /* Infinite loop */
 180:Core/Src/freertos.c ****   for(;;)
 181:Core/Src/freertos.c ****   {
 182:Core/Src/freertos.c ****     osDelay(1);
 101              		.loc 1 182 0 discriminator 1
 102 0002 0120     		movs	r0, #1
 103 0004 FFF7FEFF 		bl	osDelay
 104              	.LVL8:
 105 0008 FBE7     		b	.L8
 106              		.cfi_endproc
 107              	.LFE74:
 109              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
ARM GAS  /tmp/ccptvQHL.s 			page 6


 110              		.align	1
 111              		.global	vApplicationGetIdleTaskMemory
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	vApplicationGetIdleTaskMemory:
 118              	.LFB70:
  80:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 119              		.loc 1 80 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.LVL9:
  81:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 125              		.loc 1 81 0
 126 0000 034B     		ldr	r3, .L11
 127 0002 0360     		str	r3, [r0]
  82:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 128              		.loc 1 82 0
 129 0004 034B     		ldr	r3, .L11+4
 130 0006 0B60     		str	r3, [r1]
  83:Core/Src/freertos.c ****   /* place for user code */
 131              		.loc 1 83 0
 132 0008 8023     		movs	r3, #128
 133 000a 1360     		str	r3, [r2]
 134 000c 7047     		bx	lr
 135              	.L12:
 136 000e 00BF     		.align	2
 137              	.L11:
 138 0010 00000000 		.word	.LANCHOR0
 139 0014 00000000 		.word	.LANCHOR1
 140              		.cfi_endproc
 141              	.LFE70:
 143              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 144              		.align	1
 145              		.global	MX_FREERTOS_Init
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu softvfp
 151              	MX_FREERTOS_Init:
 152              	.LFB71:
  93:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 153              		.loc 1 93 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 88
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 70B5     		push	{r4, r5, r6, lr}
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 16
 160              		.cfi_offset 4, -16
 161              		.cfi_offset 5, -12
 162              		.cfi_offset 6, -8
 163              		.cfi_offset 14, -4
 164 0002 96B0     		sub	sp, sp, #88
ARM GAS  /tmp/ccptvQHL.s 			page 7


 165              	.LCFI4:
 166              		.cfi_def_cfa_offset 104
 116:Core/Src/freertos.c ****   heartBeatHandle = osThreadCreate(osThread(heartBeat), NULL);
 167              		.loc 1 116 0
 168 0004 164C     		ldr	r4, .L15
 169 0006 0FAD     		add	r5, sp, #60
 170 0008 2646     		mov	r6, r4
 171 000a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 172 000c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 173 000e 96E80700 		ldm	r6, {r0, r1, r2}
 174 0012 85E80700 		stm	r5, {r0, r1, r2}
 117:Core/Src/freertos.c **** 
 175              		.loc 1 117 0
 176 0016 0021     		movs	r1, #0
 177 0018 0FA8     		add	r0, sp, #60
 178 001a FFF7FEFF 		bl	osThreadCreate
 179              	.LVL10:
 180 001e 114B     		ldr	r3, .L15+4
 181 0020 1860     		str	r0, [r3]
 120:Core/Src/freertos.c ****   consoleHandle = osThreadCreate(osThread(console), NULL);
 182              		.loc 1 120 0
 183 0022 08AD     		add	r5, sp, #32
 184 0024 04F11C06 		add	r6, r4, #28
 185 0028 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 186 002a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 187 002c 96E80700 		ldm	r6, {r0, r1, r2}
 188 0030 85E80700 		stm	r5, {r0, r1, r2}
 121:Core/Src/freertos.c **** 
 189              		.loc 1 121 0
 190 0034 0021     		movs	r1, #0
 191 0036 08A8     		add	r0, sp, #32
 192 0038 FFF7FEFF 		bl	osThreadCreate
 193              	.LVL11:
 194 003c 0A4B     		ldr	r3, .L15+8
 195 003e 1860     		str	r0, [r3]
 124:Core/Src/freertos.c ****   sensorMonitorHandle = osThreadCreate(osThread(sensorMonitor), NULL);
 196              		.loc 1 124 0
 197 0040 01AD     		add	r5, sp, #4
 198 0042 3834     		adds	r4, r4, #56
 199 0044 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 200 0046 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 201 0048 94E80700 		ldm	r4, {r0, r1, r2}
 202 004c 85E80700 		stm	r5, {r0, r1, r2}
 125:Core/Src/freertos.c **** 
 203              		.loc 1 125 0
 204 0050 0021     		movs	r1, #0
 205 0052 01A8     		add	r0, sp, #4
 206 0054 FFF7FEFF 		bl	osThreadCreate
 207              	.LVL12:
 208 0058 044B     		ldr	r3, .L15+12
 209 005a 1860     		str	r0, [r3]
 131:Core/Src/freertos.c **** 
 210              		.loc 1 131 0
 211 005c 16B0     		add	sp, sp, #88
 212              	.LCFI5:
 213              		.cfi_def_cfa_offset 16
 214              		@ sp needed
ARM GAS  /tmp/ccptvQHL.s 			page 8


 215 005e 70BD     		pop	{r4, r5, r6, pc}
 216              	.L16:
 217              		.align	2
 218              	.L15:
 219 0060 00000000 		.word	.LANCHOR2
 220 0064 00000000 		.word	heartBeatHandle
 221 0068 00000000 		.word	consoleHandle
 222 006c 00000000 		.word	sensorMonitorHandle
 223              		.cfi_endproc
 224              	.LFE71:
 226              		.comm	sensorMonitorControlBlock,84,4
 227              		.comm	sensorMonitorBuffer,512,4
 228              		.comm	sensorMonitorHandle,4,4
 229              		.comm	consoleControlBlock,84,4
 230              		.comm	consoleBuffer,512,4
 231              		.comm	consoleHandle,4,4
 232              		.comm	heartBeatControlBlock,84,4
 233              		.comm	heartBeatBuffer,512,4
 234              		.comm	heartBeatHandle,4,4
 235              		.section	.rodata
 236              		.align	2
 237              		.set	.LANCHOR2,. + 0
 238              	.LC6:
 239 0000 18000000 		.word	.LC0
 240 0004 00000000 		.word	heartBeatTask
 241 0008 0000     		.short	0
 242 000a 0000     		.space	2
 243 000c 00000000 		.word	0
 244 0010 80000000 		.word	128
 245 0014 00000000 		.word	heartBeatBuffer
 246 0018 00000000 		.word	heartBeatControlBlock
 247              	.LC7:
 248 001c 10000000 		.word	.LC2
 249 0020 00000000 		.word	consoleTask
 250 0024 FDFF     		.short	-3
 251 0026 0000     		.space	2
 252 0028 00000000 		.word	0
 253 002c 80000000 		.word	128
 254 0030 00000000 		.word	consoleBuffer
 255 0034 00000000 		.word	consoleControlBlock
 256              	.LC8:
 257 0038 00000000 		.word	.LC4
 258 003c 00000000 		.word	sensorMonitorTask
 259 0040 FDFF     		.short	-3
 260 0042 0000     		.space	2
 261 0044 00000000 		.word	0
 262 0048 80000000 		.word	128
 263 004c 00000000 		.word	sensorMonitorBuffer
 264 0050 00000000 		.word	sensorMonitorControlBlock
 265              		.section	.bss.xIdleStack,"aw",%nobits
 266              		.align	2
 267              		.set	.LANCHOR1,. + 0
 270              	xIdleStack:
 271 0000 00000000 		.space	512
 271      00000000 
 271      00000000 
 271      00000000 
ARM GAS  /tmp/ccptvQHL.s 			page 9


 271      00000000 
 272              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 273              		.align	2
 274              		.set	.LANCHOR0,. + 0
 277              	xIdleTaskTCBBuffer:
 278 0000 00000000 		.space	84
 278      00000000 
 278      00000000 
 278      00000000 
 278      00000000 
 279              		.section	.rodata.str1.4,"aMS",%progbits,1
 280              		.align	2
 281              	.LC4:
 282 0000 73656E73 		.ascii	"sensorMonitor\000"
 282      6F724D6F 
 282      6E69746F 
 282      7200
 283 000e 0000     		.space	2
 284              	.LC2:
 285 0010 636F6E73 		.ascii	"console\000"
 285      6F6C6500 
 286              	.LC0:
 287 0018 68656172 		.ascii	"heartBeat\000"
 287      74426561 
 287      7400
 288              		.text
 289              	.Letext0:
 290              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 291              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 292              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 293              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 294              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 295              		.file 7 "Core/Inc/FreeRTOSConfig.h"
 296              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 297              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 298              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 299              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccptvQHL.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccptvQHL.s:16     .text.heartBeatTask:0000000000000000 $t
     /tmp/ccptvQHL.s:23     .text.heartBeatTask:0000000000000000 heartBeatTask
     /tmp/ccptvQHL.s:48     .text.consoleTask:0000000000000000 $t
     /tmp/ccptvQHL.s:55     .text.consoleTask:0000000000000000 consoleTask
     /tmp/ccptvQHL.s:79     .text.sensorMonitorTask:0000000000000000 $t
     /tmp/ccptvQHL.s:86     .text.sensorMonitorTask:0000000000000000 sensorMonitorTask
     /tmp/ccptvQHL.s:110    .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccptvQHL.s:117    .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccptvQHL.s:138    .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
     /tmp/ccptvQHL.s:144    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccptvQHL.s:151    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccptvQHL.s:219    .text.MX_FREERTOS_Init:0000000000000060 $d
                            *COM*:0000000000000004 heartBeatHandle
                            *COM*:0000000000000004 consoleHandle
                            *COM*:0000000000000004 sensorMonitorHandle
                            *COM*:0000000000000054 sensorMonitorControlBlock
                            *COM*:0000000000000200 sensorMonitorBuffer
                            *COM*:0000000000000054 consoleControlBlock
                            *COM*:0000000000000200 consoleBuffer
                            *COM*:0000000000000054 heartBeatControlBlock
                            *COM*:0000000000000200 heartBeatBuffer
     /tmp/ccptvQHL.s:236    .rodata:0000000000000000 $d
     /tmp/ccptvQHL.s:266    .bss.xIdleStack:0000000000000000 $d
     /tmp/ccptvQHL.s:270    .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccptvQHL.s:273    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/ccptvQHL.s:277    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer
     /tmp/ccptvQHL.s:280    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
osDelay
osThreadCreate
